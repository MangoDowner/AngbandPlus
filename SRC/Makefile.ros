# Project: Angband 2.9.6
#
# This makefile is for Acorn C rel. 5 (edit the CCFLAGS for rel.4).

# Libraries:

LIBS = C:o.Stubs DeskLib:o.DeskLib

# Tools:

CC = cc
LD = link
SQ = squeeze
RM = remove
tolua = lua/tolua

# Flags:

CCFLAGS = -throwback -Wand -depend !Depend
LDFLAGS = -aif
SQFLAGS =

LUAOBJS = \
  lua.lapi.o lua.ldebug.o lua.lmem.o lua.lstrlib.o lua.lvm.o \
  lua.tolua_lb.o lua.lauxlib.o lua.ldo.o lua.lobject.o lua.ltable.o \
  lua.lzio.o lua.tolua_rg.o lua.lbaselib.o lua.lfunc.o lua.lparser.o \
  lua.ltests.o lua.tolua_bd.o lua.tolua_tm.o lua.lcode.o lua.lgc.o \
  lua.lstate.o lua.ltm.o lua.tolua_eh.o lua.tolua_tt.o lua.ldblib.o \
  lua.llex.o lua.lstring.o lua.lundump.o lua.tolua_gp.o

TOLUAOBJS = \
  lua.tolua.o lua.tolualua.o lua.liolib.o \
  $(LUAOBJS)


# The standard object files:

OBJS = \
	z-util.o z-virt.o z-form.o z-rand.o z-term.o \
	variable.o util.o cave.o \
	object1.o object2.o monster1.o monster2.o \
	xtra1.o xtra2.o spells1.o spells2.o \
	melee1.o melee2.o files.o \
	cmd1.o cmd2.o cmd3.o cmd4.o cmd5.o cmd6.o \
	store.o birth.o \
	save.o load.o \
	wizard1.o wizard2.o \
	generate.o dungeon.o init1.o init2.o \
	randart.o \
	main-ros.o main.o \
	script.o use-obj.o tables.o \
	l-monst.o l-object.o l-player.o l-random.o l-ui.o \
	l-misc.o l-spell.o \
	$(LUAOBJS)

# Borg object files:

BOBJS = \
	borg1.o borg2.o borg3.o borg4.o borg5.o borg6.o borg7.o \
	borg8.o borg9.o $(OBJS)

compile: ^.!RunImage lua/tolua

# The normal !RunImage:
^.!RunImage:	$(OBJS) $(LIBS)
		$(LD) $(LDFLAGS) -o !RunImage $(OBJS) $(LIBS)
		$(SQ) $(SQFLAGS) !RunImage ^.!RunImage
		$(RM) !RunImage

# The Borg RunImage
^.!RunImageB:	$(BOBJS) $(LIBS)
		$(LD) $(LDFLAGS) -o !RunImage $(BOBJS) $(LIBS)
		$(SQ) $(SQFLAGS) !RunImageB ^.!RunImageB
		$(RM) !RunImageB

# tolua
lua/tolua: $(TOLUAOBJS)
	$(LD) -o lua.tolua $(TOLUAOBJS) $(LDFLAGS) $(LIBS)
         
.SUFFIXES: .o .c

object2.o:
	$(CC) -Ospace $(CCFLAGS) -c -o object2.o object2.c

monster2.o:
	$(CC) -Ospace $(CCFLAGS) -c -o monster2.o monster2.c

.c.o:;	$(CC) -Otime $(CCFLAGS) -c -o $@ $<

# Dynamic dependencies:
