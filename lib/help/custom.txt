%%%%% <custom.txt>
=== Option Descriptions ===

Most of the "options" are accessible through the '=' command, which provides an interface to the various "sets" of options available to the player.
In the decriptions below, each option is listed as the textual summary which is shown on the "options" screen, plus the internal name of the option in brackets, followed by a textual description of the option.

Note that the internal name of the option can be used in user pref files to force the option to a given setting, see *****general.txt*0[general.txt] for more info.

Various concepts are mentioned in the descriptions below, including "disturb", (cancel any running, resting, or repeated commands, which are in progress), "flush" (forget any keypresses waiting in the keypress queue, including any macros in progress), "fresh" (dump any pending output to the screen), and "sub-windows" (see below).

A date/version in brackets refers to when the option was added, or when it was substantially modified. No annotation indicates an option which was present in Cthangband 4.0.1, and usually much earlier.

%%%%%
=== Display options ===

%%%%% <depth_in_feet>
$GShow dungeon level in feet [depth_in_feet]
Display dungeon depths in "feet" instead of "levels".

%%%%% <show_choices>
$GShow choices in certain sub-windows [show_choices]
Display "choices" (legal responses) in any sub-windows which are being used to display your inventory or equipment. Also, if one sub-window is being used to display your inventory or equipment, then this option will cause it to be (temporarily) toggled as needed to always show the "appropriate" set of objects (inventory or equipment).

%%%%% <show_details>
$GShow details in certain sub-windows [show_details]
Display "details" (including number of monsters killed, and textual descriptions) in monster descriptions. are displaying the monster.

%%%%% <show_choices_main>
$GShow certain choices in the main window [show_choices] (12/12/2000)
Displays equipment lists, spell lists, etc., as appropriate on the main without requiring the player to prompt for it first.

%%%%% <ring_bell>
$GAudible bell (on errors, etc) [ring_bell]
Attempt to make a "bell" noise when various "errors" occur.

%%%%% <use_color>
$GUse colour if possible (slow) [use_color]
This option enables the software support for "colour". This makes the game slower, so you may choose to disable it on slow computers.

%%%%% <hilite_player>
$GHilite the player with the cursor [hilite_player]
Place the visible cursor on the player. This looks fine on some Unix machines, but horrible on most graphics machines. Note that only some machines are able to *not* show the cursor, but on those machines, hiding the cursor often speeds up the game and looks better.

%%%%% <centre_view>
$GCentre view around player [centre_view]
Keeps the player's character in the center of the screen, and moves the dungeon around the player. Can be useful to prevent off-screen breaths.

%%%%% <scroll_edge>
$GScroll until detection reaches the edge [scroll_edge] (1.0.4)
This only has an effect if the main window is larger than the default size, so that the visible area is larger than the detection area. If set, the map moves until the player's detection area includes the corner. If unset, the map stops moving when the visible area includes the corner.

%%%%% <allow_fake_colour>
$GUse special monochrome display for emphasis [allow_fake_colour] (1.0.13)
This causes the screen to turn monochrome if one of a small number of special things happen.

%%%%%
=== User Interface options ===

%%%%% <rogue_like_commands>
$GRogue-like commands [rogue_like_commands]
Selects the "roguelike" command set (see "command.txt" for info).

%%%%% <quick_messages>
$GQuick -more- prompts [quick_messages] (altered 17/1/2001)
Allows the use of any keypress as a response to the "-more-" prompt (useful for monster farming).

%%%%% <quick_prompt>
$GQuick [y/n] prompts [quick_messages] (17/1/2001)
Allows most keys to mean "no" to any "[y/n]" prompt.

%%%%% <other_query_flag>
$GPrompt for various information [other_query_flag]
Allows the user to select objects from the center of stacks. Without this option, the uppermost appropriate object will always be selected.

%%%%% <always_repeat>
$GRepeat obvious commands [always_repeat]
Tells the game that when you attempt to "open" a door or chest, "bash" a door, "tunnel" through walls, "disarm" traps or chests, or "alter" any grid, that you wish to automatically "repeat" the command 99 times (see "command.txt"), unless an explicit repeat count was given.

%%%%% <confirm_stairs>
$GPrompt before exiting a dungeon level [confirm_stairs]
Some players often accidentally press the '<' key and exit a Special feeling level. If this option is set, the program asks for confirmation before you go up or down the stairs. Others may find the prompt annoying, they should of course not set this option. :-)

%%%%% <macro_edit>
$GUse macros as edit keys in prompts [macro_edit] (1.0.1)
String prompts (such as with the "Inscribe" command) have a small number of edit commands available (see prompts.txt for details). If this option is off, the special command mode is turned on and off with the Tab (or Ctrl-I) key. If this option is on, accessing these keys through a macro (on many systems this happens when you use the number pad) gives them their special meaning and accessing them without a macro does not. Turn this off if you have trouble inscribing an object with "1" or using the edit commands.

%%%%% <beginner_help>
$GDisplay beginner help on startup [beginner_help] (1.0.12)
Display a help file for new players at the beginning of the game to reduce the confusion and misunderstandings a new player may have.

%%%%%
=== Disturbance options ===

%%%%% <find_ignore_stairs>
$GRun past stairs [find_ignore_stairs]
Ignore stairs when running.

%%%%% <find_ignore_doors>
$GRun through open doors [find_ignore_doors]
Ignore open doors when running.

%%%%% <find_cut>
$GRun past known corners [find_cut]
Cut sharply around "known" corners when running. This will result in "faster" running, but may cause you to run into a "lurking" monster.

%%%%% <find_examine>
$GRun into potential corners [find_examine]
Fully explore "potential corners" in hallways.

%%%%% <stop_corner>
$GStop at corners [stop_corner] (9/3/2001)
Stop running at every corner you reach.

%%%%% <disturb_move>
$GDisturb whenever any monster moves [disturb_move]
Disturb the player when any monster moves, appears, or disappears. This includes monsters which are only visible due to telepathy, so you should probably turn this option off if you want to "rest" near such monsters.

%%%%% <disturb_near>
$GDisturb whenever viewable monster moves [disturb_near]
Disturb the player when any viewable monster moves, whenever any monster becomes viewable for the first time, and also whenever any viewable monster becomes no longer viewable. This option ignores the existance of "telepathy" for the purpose of determining whether a monster is "viewable". See also the "view_reduce_view" option.

%%%%% <disturb_panel>
$GDisturb whenever map panel changes [disturb_panel]
This option causes you to be disturbed by the screen "scrolling", as it does when you get close to the "edge" of the screen.

%%%%% <disturb_state>
$GDisturb whenever player state changes [disturb_state]
This option causes you to be disturbed whenever the player state changes, including changes in hunger, resistance, confusion, etc.

%%%%% <disturb_dawn>
$GDisturb when the sun rises or sets [disturb_dawn] (1/6/2001)
The option causes you to be disturbed at sunrise or sunset on the surface (useful if you are waiting for sunrise).

%%%%% <disturb_minor>
$GDisturb whenever boring things happen [disturb_minor]
This option causes you to be disturbed by various things, including monsters bashing down doors, inventory feelings, beginning to run out of fuel and spirits becoming content after being called upon.

%%%%% <verify_destroy>
$GVerify destruction of objects [verify_destroy]
Prompt for verification of the "destroy" command.

%%%%% <verify_special>
$GVerify use of special commands [verify_special]
Prompt for verification of the "special" commands (borg and debug).

%%%%% <allow_quantity>
$GAllow quantity specification [allow_quantity]
Prompt for a quantity when necessary, instead of defaulting to a single object.

%%%%% <auto_more>
$GAutomatically clear -more- prompts [auto_more] (1.0.1)
The game does not wait for a keypress when it comes to a -more- prompt, but carries on going.

%%%%% <alert_failure>
$GAlert user to various failures [alert_failure]
Prints a warning message for various failures in the game logic. This is, therefore, more an aid to testing than something important to playing the game.

%%%%% <disturb_allies>
$GDisturb when visible allies move [disturb_allies]
With this flag set, friendly monsters disturb the player in the same way as unfriendly ones. With it unset, they never disturb the player.

%%%%%
=== Creature options ===

%%%%% <use_old_target>
$GUse old target by default [use_old_target]
Forces all commands which normally ask for a "direction" to use the current "target" if there is one. Use of this option can be dangerous if you target locations on the ground, unless you clear them when done.

%%%%% <flow_by_sound>
$GMonsters chase current location (v.slow) [flow_by_sound]
Allow monsters to make paths to the player when they are nearby. This option is extremely slow, but can produce viciously smart monsters.

%%%%% <flow_by_smell>
$GMonsters chase recent locations (v.slow) [flow_by_smell]
Allow monsters to take advantage of "old" trails that you may have left in the dungeon. This has no effect unless "flow_by_sound" is also set.

%%%%% <smart_learn>
$GMonsters learn from their mistakes [smart_learn]
Allow monsters to learn what spell attacks you are resistant to, and to use this information to choose the best attacks.

%%%%% <smart_cheat>
$GMonsters exploit players weaknesses [smart_cheat]
Allow monsters to know what spell attacks you are resistant to, and to use this information to choose the best attacks.

%%%%% <stupid_monsters>
$GMonsters behave stupidly [stupid_monsters]
This changes the way many monsters behave. With this option set, they will cast spells less often, choose spells fairly randomly and follow the player down a corridor if they are in a pack. With it unset, they will cast spells more often, choose their most powerful spells by preference (or healing spells if they are hurt) and try to hide from the player's line of sight if the player is in a corridor. Many monsters will act as if this is set whatever its true state, however.

%%%%% <testing_carry>
$GAllow monsters to carry objects [testing_carry]
If this option is set, monsters which "pick up" objects will drop the objects they were carrying when you kill them. Note that monsters which "crush" objects are not affected by this option.

%%%%%
=== Object options ===

%%%%% <carry_query_flag>
$GPrompt before picking things up [carry_query_flag]
Forces the game to ask your permission before allowing you to pick up any object.

%%%%% <always_pickup>
$GPick things up by default [always_pickup]
Tells the game that walking onto an item should attempt to pick it up. Picking up objects in the manner takes no additional energy. Note the "g" and "-" commands, which can be used to "reverse" this option for a single turn.

%%%%% <stack_force_notes>
$GMerge inscriptions when stacking [stack_force_notes]
Force otherwise identical objects to merge, even if one has an empty inscription and the other does not. The resulting stack keeps the non-empty inscription.

%%%%% <stack_force_notes_all>
$GMerge all inscriptions when stacking [stack_force_notes_all] (21/5/2001)
Force otherwise identical objects to merge, even if they have differing inscriptions. The combined pile then has a somewhat random inscription.

%%%%% <stack_force_costs>
$GMerge discounts when stacking [stack_force_costs]
Force otherwise identical objects to merge, even if they have different discounts. The resulting stack keeps the largest discount. This option may cause you to lose "value", but will give you optimal pack usage. This is equivalent to inscribing every object with %.

%%%%% <show_labels>
$GShow labels in equipment listings [show_labels]
Display "labels" (what an object is being used for) for objects in all "equipment" listings.

%%%%% <show_weights>
$GShow weights in all object listings [show_weights]
Display "weights" (in pounds) of objects in all "inventory", "equipment", "store items", and "home items" listings.

%%%%% <stack_allow_items>
$GAllow weapons and armor to stack [stack_allow_items]
Allow identical weapons and armor to be combined into a stack. This also allows unidentified, but identical, ammo to be combined, which may result in the auto-identification of some of the ammo, but which makes it a lot easier to actually use unidentified ammo.

%%%%% <stack_allow_wands>
$GAllow wands/staffs/rods to stack [stack_allow_wands]
Allow identical wands/staffs/rods to be combined into a stack. This may force the items to be "unstacked" to use them, which may result in "overflow" of the stack. Also, the entire stack can be recharged (and possibly destroyed) at the same time.

%%%%% <equippy_chars>
$GDisplay 'equippy' chars [equippy_chars]
Display the character used for each equipped item below the gold display. This can act as a visual reminder of what you're wearing.

%%%%% <plain_descriptions>
$GPlain object descriptions [plain_descriptions]
Omit the reference to the flavour of an unidentified item in its name. Objects which were bought in a store, and the player's initial inventory, will always act as if this flag was set.

%%%%% <auto_destroy>
$GNo query to destroy known worthless items [auto_destroy]
It can sometimes be annoying that the Destroy command asks for confirmation when you are attempting to destroy a Broken sword {cursed}. If this option is set, no confirmation will be asked if you attempt to destroy an object which you know to be worthless. Of course, cursed artifacts cannot be destroyed even if this option is set.

%%%%% <confirm_wear>
$GConfirm to wear/wield known cursed items [confirm_wear]
Some players may occasionally, due to a typing mistake, find themselves wearing an item which they knew was cursed. If this option is set, you should be safe from such typing mistakes: you will be prompted if you attempt to wear or wield an item if your character knows it is cursed.

%%%%% <confirm_wear_all>
$GConfirm to wear/wield potentially cursed items [confirm_wear_all] (1/6/2001)
If this option is set, you will be asked to confirm any attempt to wear an object which isn't known by some method to be uncursed.

%%%%% <unify_commands>
$GUse a single 'u'se command for all objects [unify_commands]
This causes b, A, E, F, a, z, q, r and u to carry out whichever of the associated actions is most appropriate for the chosen item.

%%%%% <testing_stack>
$GAllow objects to stack on the floor [testing_stack]
Allows a cave grid to hold more than one object (or one kind of object).

%%%%% <show_piles>
$GShow stacks with a special colour/character [show_piles] (1.0.9)
Display stacks of items on the floor with a special character (& by default).

%%%%%
=== Performance options ===

%%%%% <view_reduce_lite>
$GReduce lite-radius when running [view_reduce_lite]
Reduce the "radius" of the player's "lite" to that of a "torch" when the player is "running", which makes running more "efficient", but is extremely annoying.

%%%%% <view_reduce_view>
$GReduce view-radius in town [view_reduce_view]
Reduce the "radius" of the player's "view" by half when the player is in town. This makes running faster in town, and also allows the player to ignore monsters in town which are more than ten grids away, which is usually safe, since none have distance attacks.

%%%%% <avoid_abort>
$GAvoid checking for user abort [avoid_abort]
Avoid checking to see if the user has pressed a key during resting or running or repeated commands. This not only makes the game much more efficient (on many systems), but also allows the use of certain obscure macro sequences, such as turning this option on, resting until done, turning this option off, and casting a spell. Note that the use of this option may be dangerous on certain "graphic" machines. Resting for long periods of time with this option set is dangerous since the resting may not stop until the user takes damage from starvation.

%%%%% <avoid_other>
$GAvoid processing special colours [avoid_other]
Avoid processing the "multi-hued" or "clear" attributes of monsters. This will cause all "multi-hued" monsters to appear "violet" and all "clear" monsters to appear "white", and will cause "trappers" and "lurkers" to be visible on some machines, but it may greatly increase efficiency especially when telepathy is active. Certain systems may choose to set this option if they are unable to support the special "colour" processing, but if they handle graphics "correctly", by using attr/char pairs with the "high bits" set, then not only will the game correctly avoid using any "dangerous" colour processing, but it will allow such processing to occur when it is not dangerous. So if you are using graphics, and you use a "normal" attr/char for the "floor" grids, then you can use the "special lighting effects" for floors.

%%%%% <flush_error>
$GFlush input on incorrect keypresses [flush_error] (1.0.7)
This option forces the game to flush all pending input when input is encountered which does not make sense to the game. If this option is not set, such input will be ignored (although it may still cause a beep).

%%%%% <flush_failure>
$GFlush input on various failures [flush_failure]
This option forces the game to flush all pending input whenever various "failures" occur, such as failure to cast a spell, failure to use a wand, etc. This is very useful if you use macros which include "directional" components with commands that can fail, since it will prevent you from walking towards monsters when your spells fail.

%%%%% <flush_disturb>
$GFlush input whenever disturbed [flush_disturb]
This option forces the game to flush all pending input whenever the character is "disturbed". This is useful if you use macros which take time, since it will prevent you from continuing your macro while being attacked by a monster.

%%%%% <fresh_before>
$GFlush output before every command [fresh_before]
This option forces the game to flush all output before every command. This will give you maximal information, but may slow down the game somewhat. Note that this option is only useful when using macros, resting, running, or repeating commands, since the outout is always flushed when the game is waiting for a keypress from the user.

%%%%% <fresh_after>
$GFlush output after certain things [fresh_after]
This option forces the game to flush all output after not only every player command, but also after every round of processing monsters and objects, and after every message, which will maximize your information, but may slow down the game a lot, especially on slower machines, and on faster machines you cannot see the results anyway.

%%%%% <fresh_message>
$GFlush output after every message [fresh_message]
This option forces the game to flush all output after every message displayed by the game. This will give you maximal information, but may slow down the game somewhat.

%%%%% <compress_savefile>
$GCompress messages in savefiles [compress_savefile]
Compress the savefile, by only saving the most recent "messages" that the player has received. This can cut the size of the savefile by a drastic amount, but will result in the loss of message information.

%%%%% <view_yellow_lite>
$GUse special colors for torch-lit grids [view_yellow_lite]
This option causes special colors to be used for "torch-lit" grids in certain situations (see "view_granite_lite" and "view_special_lite"). Turning this option off will slightly improve game speed.

%%%%% <view_bright_lite>
$GUse special colors for 'viewable' grids [view_bright_lite]
This option causes special colors to be used for non "viewable" grids in certain situations (see "view_granite_lite" and "view_special_lite"). When this option is set, floor grids which are normally drawn in "white" but which are not currently "viewable" by the player are instead drawn in "dark gray". This makes the "viewable" grids to appear "brighter" than the others, allowing the player to easily determine which floor grids are in "line of sight". Turning this option off will probably increase the speed of the game.

%%%%% <view_granite_lite>
$GUse special colors for wall grids (slow) [view_granite_lite]
This option activates a special color scheme for all "wall" grids which are normally drawn in "white" (as walls and rubble normally are). When the player is blind, we use "dark gray", else if the grid is torch-lit, we use "yellow" (or "white") depending on the "view_yellow_lite" option, else if the "view_bright_lite" option is set, and the grid is not in line of sight, or the grid is dark, or the grid is only "partially" lit, then we use "gray", otherwise we use the normal "white". Turning this option off will probably increase the speed of the game.

%%%%% <view_special_lite>
$GUse special colors for floor grids (slow) [view_special_lite]
This option activates a special color scheme for all "floor" grids which are normally drawn in "white" (as they normally are). When the player is blind, we use "dark gray", else if the grid is torch-lit, we use "yellow" (or "white") depending on the "view_yellow_lite" option, else if the grid is "dark", we use "dark gray", else if the "view_bright_lite" option is set, and the grid is not in line of sight, we use "gray", otherwise we use the normal "white". Turning this option off will probably increase the speed of the game.

%%%%% <rand_unbiased>
$GRandom numbers have bias removed [rand_unbiased]
This option causes a less biased, but slightly slower, RNG to be used for all calculations.

%%%%% <no_centre_run>
$GDo not centre view whilst running [no_centre_run]
This causes the game to act as if centre_view was turned off if the player is running at the time.

%%%%% <track_mouse>
$GTrack the cursor in various extra windows [track_mouse] (1.0.10)
This causes floor squares, objects and monsters to be displayed in extra windows as the mouse is moved over the map window.

%%%%? [NOT [EQU $SYS x11]]
This option is currently only effective for the x11 display module, although this will change as support is added.

%%%%? 1
%%%%%
=== Miscellaneous options ===

%%%%% <last_words>
$GGet last words when the character dies [last_words]
Display a random line from the "death.txt" file when your character dies. If this option is not selected, the "You die." message is displayed instead.

%%%%% <small_levels>
$GAllow unusually small dungeon levels [small_levels]
This option enables the creation of levels of varying sizes in dungeons (towers always have the smallest possible level size). Levels that are as small as tower levels (i.e. 1 'screen') are possible, yet they can be dangerous, especially for a low level character.

%%%%% <empty_levels>
$GAllow empty 'arena' levels [empty_levels]
Normal dungeon levels consist mostly of rock. If this option is in use, levels which have empty floor instead of solid rock may also be created (somewhat reminiscent of Nethack's "big-room" levels). These levels can be extremely deadly, especially with breathing monsters (since there are few obstructions to shield). Arena levels may have vaults, nests and pits in them like normal levels. Some arena levels are dark when they are created, but most are lit.

%%%%% <auto_haggle>
$GAuto-haggle in stores [auto_haggle]
Disable "haggling" in stores, resulting in a ten percent sales penalty on items which you would have otherwise been forced to haggle for. When this option is on, all prices listed in stores will be the actual price that you pay for an item, as opposed to the price that the shop-keeper will suggest.

%%%%% <verbose_haggle>
$GVerbose auto_haggle messages [verbose_haggle] (4/12/2000)
If this option is turned on, the messages produced by the game with auto_haggle turned on will be similar to those with it turned off. If it is turned off, the player need only select an item, optionally select a quantity, and confirm it.

%%%%% <auto_scum>
$GAuto-scum for good levels [auto_scum]
This allows you to force the generation of "good" levels in the dungeon. This option may be extremely slow on some machines, especially when generating high tower levels. The minimum "goodness" of the level is based on the dungeon level, so the deeper you go, the better the level will be. A lot of people consider this option to be cheating.

%%%%% <expand_look>
$GExpand the power of the look command [expand_look]
Expand the "look" command to allow the user to "look" at grids which are not actually in view of the player, allowing the examination of objects/monsters which have only been detected by spells, or sensed via telepathy.

%%%%% <expand_list>
$GExpand the power of the list commands [expand_list]
Expand the "listing" commands so that they "wrap" at the "edges" of the appropriate list. This allows the "look" and "target" commands to "cycle" through all appropriate grids forever, and the "identify symbol" to browse through all of the monsters of a given type.

%%%%% <view_perma_grids>
$GMap remembers all perma-lit grids [view_perma_grids]
Memorize all perma-lit floor grids which are seen by the player. This option allows you to keep track of which explored floor grids were perma-lit, but does not distinguish between dark floor grids, unexplored floor grids, and unknown grids. Turning off this option allows the player to always know which lit floor grids are in line of sight, but this is better accomplished by the "view_bright_lite" option. Note that any non-floor grids which is seen by the player are always memorized, and "object" which is seen by the player is memorized independantly from the memorization of the grid itself.

%%%%% <view_torch_grids>
$GMap remembers all torch-lit grids [view_torch_grids]
Memorize all (torch-lit) floor grids which are seen by the player. This option not only allows you to keep track of which floor grids have been explored, but also which ones are "dark", because the use of this option activates a special "colour scheme" for the display of floor grids, in which "dark" grids are drawn in "dark gray", "lit" grids are drawn in "white", and (if the "view_bright_lite" option is set) "lit" grids which are also in line of sight are drawn in "orange". Note that grids which are currently "torch-lit" are considered to be "lit", and are thus drawn in "white", unless the "view_yellow_lite" option is set, in which case they are drawn in "yellow".

%%%%% <dungeon_align>
$GGenerate dungeons with aligned rooms [dungeon_align]
Force all rooms to be "aligned" with the "panel" divisions. This results in a much "prettier" dungeon, but may result in fewer greater vaults.

%%%%% <dungeon_stair>
$GGenerate dungeons with connected stairs [dungeon_stair]
Always generate a staircase back to the level you came from, if you used a staircase to get to the level. This is more "realistic", and "safer", but less of a "challenge" for some people.

%%%%% <dungeon_small>
$GUsually generate small dungeon levels [dungeon_small]
If this option is set, the game will create small levels 15/16 of the time.

%%%%% <easy_open>
$GOpen/Disarm/Close without direction [easy_open]
If there is only one closed door next to the character, the game will not bother asking for a direction when the player asks to "o"pen something. The same applies for "c"losing doors and "D"isarming traps.

%%%%% <easy_disarm>
$GOpen/Disarm doors/traps on movement. [easy_disarm]
Moving into a closed door will attempt once to open it, and moving into a trap will attempt once to disarm it. If the player ever wishes to leave a known teleport trap as a guaranteed escape route, this option must therefore be off.

%%%%% <skip_chaos_features>
$GSkip chaos features in 'C'haracter display [skip_chaos_features]
Setting this option prevents chaos features from being displayed in the character display, although they are still available in the knowledge menu.

%%%%% <multi_stair>
$GStairs can be longer than one level [multi_stair]
Setting this option allows stairs to move you by anything up to 5 levels at a time.

%%%%% <options=N>
=== Miscellaneous numerical options ===

These include a range of options which are only similar in that they involve the user setting a number, rather than simply turning something on or off. They are set by pressing y to increase the value or n to decrease it.

As this is likely to involve pressing a key several times for one option, this menu does not advance the selected option if you press a key.

As the autosave feature (which saves the game at various points to guard against crashes and power failures) is controlled by such an option, all of the options which concern it are listed here.

%%%%% <autosave_l>
$GAutosave when entering new levels [autosave_l]
If this option is set, the program will attempt to save your character every time before creating a new dungeon level. Useful if you experience any game or computer crashes (or your dog enjoys kicking your power cords out of the wall like mine does!).

%%%%% <autosave_t> <autosave_freq>
$GTimed autosave [autosave_t] [autosave_freq]
If this option is set, the program will attempt to save your character every so many turns. This is controlled by the autosave_freq setting, which can be set to one of a range of values.

As an additional control, this can be disabled by setting autosave_t to FALSE.

%%%%% <autosave_q>
$GQuiet autosave [autosave_q] (21/5/2001)
If this option is set, no messages will be printed, or input required, as the game is being saved via one of the autosave options above.

%%%%% <base delay factor>
$GDelay (in ms) for various graphical effects [base delay factor]
This may be used to "slow down" the game, which is useful to allow you to "observe" the temporal effects of bolt, beam, and ball attacks.

%%%%% <hitpoint warning>
$GPercent of HP at which to give a special warning [hitpoint warning]
This value, if non-zero, is the percentage of maximal hitpoints at which the player is warned that he may die. It is also used as the cut-off for using red to display both hitpoints and mana.

%%%%%
=== Window options ===

See *****windowpri.txt*0[windowpri.txt] for details.

%%%%% <option=R>
=== Redraw options ===

These control where everything on the main window apart from the map (which is currently fixed) goes. They are controlled with the following keys:

n/N: Move to the next/previous display type.
x/X: Move the display one square left/right.
y/Y: Move the display one square down/up.
l/L: Increase/decrease the length allowed to this display.
Tab: Represent unused space with black dots/empty space.
?  : Show this help.

Negative x and y co-ordinates are interpreted as offsets from the right and bottom edge of the screen. This allows information to be shown on the bottom row without needing it to be updated if the window is resized.

There are many locations which are unsuitable due to (for instance) being covered up by the map. You may still use them, but no particular care has been taken to ensure that the resulting display is useful.

%%%%% <option=M>
=== Macro options ===

This menu allows you to interact with macros. You may load or save macros from user pref files, create macros of various types, or define keymaps. You must define a "current action", shown at the bottom of the screen, before you attempt to use any of the "create macro" commands, which use that "current action" as their action. This is a horrible interface, and will be fixed eventually.

%%%%% <option=V>
=== Visual options ===

This menu allows you to interact with visuals. You may load or save visuals from user pref files, or modify the attr/char mappings for the monsters, objects, and terrain features. You must use the "redraw" command (Ctrl-R) to redraw the map after changing attr/char mappings.

In the "Change" options, the following keys are valid:

n: Move to a valid object, monster, etc..
a: Change (by index) the colour used for this object.
c: Change (by index) the character used for this object.

Lower case letters (n, a, c) increase the specified value, wrapping at the end.
Upper case letters (N, A, C) decrease them.
Pressing Ctrl with the letter allows you to type in the desired number. As this may not be possible on all terminals, pressing ^ and then the letter gives the same effect.

%%%%% <option=K>
=== Colour options ===

This menu allows the user to interact with colors. This command only works on some systems.

In the "Modify" option, the following keys are valid:

      n: Move to the next colour.
r, g, b: Change the amount of red, blue or green in the indicated colour.
%%%%? [IOR [EQU $SYS win] [EQU $SYS w2k] [EQU $SYS ibm]]
      k: Change the representation of this colour in 16 colour mode.
%%%%? [NOT [IOR [EQU $SYS win] [EQU $SYS w2k] [EQU $SYS ibm]]]

There is also a k parameter, but this only has an effect in the Windows and IBM ports.
%%%%? 1

Lower case letters increase the specified value, wrapping at the end.
Uper case letters decrease them.

%%%%%
=== Spoiler options ===

Several of these options affect the things which are displayed about objects which the player has not used a scroll of *identify* or equivalent on. These affect how the object is portrayed on the character information screen ('C') and the object information display ('I').

%%%%% <spoil_base>
$GGain knowledge of normal items [spoil_base] (17/1/2001)
This displays the guaranteed features of a potion or a suit of chaos dragon scale mail.

%%%%% <spoil_ego>
$GGain knowledge of ego items [spoil_ego] (17/1/2001)
This displays the guaranteed features of an ego item of Free Action or of Permanence.

%%%%% <spoil_art>
$GGain knowledge of standard artifacts [spoil_art] (17/1/2001)
This displays the guaranteed features of the Star Essence of Polaris or of "Deathwreaker".

%%%%% <spoil_value>
$GGain knowledge of the apparent prices of items [spoil_value] (17/1/2001)
If you know enough about the way a shopkeeper calculates the value of an object, and know the values for each base item, ego-item and artefact, you can work out how much a shopkeeper would give for a particular item based on those of the above spoiler options which are set. It allows two extra options at object prompts: x (X if a confirmation prompt is required) selects the cheapest item in the selection and y (or Y) the dearest.  It cannot be set if spoil_base is unset as no meaningful valuation can be given unless the value of the base item is known.

%%%%% <spoil_dam>
$GGain knowledge of melee weapon damage. [spoil_dam] (1/6/2001)
This causes the game to calculate the damage a particular weapon would do against a variety of foes based on the information the player knows about it.

%%%%% <spoil_stat>
$GGain knowledge of the effects of stat changes [spoil_stat] (9/3/2001)
This tells you the effects of the stat changes wearing/wielding an object or consuming a stat boosting/restoring item will have on the player.

%%%%% <spoil_flag>
$GGain knowledge of the effects of various flags. [spoil_flag] (2/3/2002)
This tells you how much damage each of a monster's spell effects (but not breaths) does and informs the player about things which become evident simply from wearing/wielding it if the player has done so.

%%%%% <spoil_mon>
$GGain knowledge of monsters [spoil_mon] (17/1/2001)
This tells you the information which can be gained about each type of monster which can be gained through fighting and killing many of them, experiencing all that they can do and can be done to them... or by reading mon-info.spo.

%%%%%
=== Cheating options ===

Note that any use of these options prevents you from gaining a place on the high score table in the current game.

%%%%% <cheat_peek>
$GPeek into object creation [cheat_peek]
This tells you when objects are generated, and any interesting features these objects have.

%%%%% <cheat_hear>
$GPeek into monster creation [cheat_hear]
This tells you when unique or out of depth monsters are generated, and a few other things.

%%%%% <cheat_room>
$GPeek into dungeon creation [cheat_room]
This tells you what unusual rooms or level types are being created.

%%%%% <cheat_xtra>
$GPeek into something else [cheat_xtra]
Gives information about a variety of minor events including shop changes, auto-scum, death events, artefact creation, failed monster creation, random line selection and martial arts attacks.

%%%%% <cheat_item>
$GKnow complete item info [cheat_item]
Treats every item as if the player had read a scroll of *identify* on it.

%%%%% <cheat_live>
$GAllow player to avoid death [cheat_live]
Causes the player's character to be returned to town unscathed when he/she would otherwise have died.

%%%%% <cheat_skll>
$GPeek into skill rolls [cheat_skll]
This informs you about each use of a skill which does not take place on the surface.

%%%%% <cheat_wzrd>
$GWizard (Debug) Mode active [cheat_wzrd]
This sets cheat_live and cheat_skll, forces special monster drops to always occur, allows friendly uniques to be generated, causes amulets of adornment to remove the requirement for food, allows the debug commands (Ctrl+a) to be used and gives a variety of extra messages.

%%%%% <cheat_save>
$GDon't auto-save on in-game events [cheat_save] (1.0.15)
This prevents the game from being saved when it exits via the *****cmd=^X*[Save and Quit] command or on your character's death. Other things which may save the game (such as auto-save) work as normal.

%%%%% <option=B>
=== Birth options ===

%%%%% <score_quitter>
$GRemember scores of those who quit the game [score_quitter] (1.0.6)
This causes games which end with the player quitting to be recorded on the same basis as those which end with the player dying.

%%%%% <maximise_mode>
$GInclude race/template bonuses in stat calc [maximise_mode]
Normally, if a character should find potions that permanently increase his stats, the maximum that can be achieved without equipment bonuses is 18/100. If maximize mode is on (which is the default), then the race and template bonuses and penalties apply to this limit, so your half-troll will have a greater maximum possible strength (unassisted by his equipment) than a hobbit. With maximize mode off, all characters max out at 18/100 for all stats. This also affects the start of the game, because race and template bonuses are applied as if they were "rings" in maximize mode (at an exact rate of 0/10 percentile points equals 1 point for stats over 18), and as "potions" in non-maximize mode (drinking six potions of [stat] will probably increase your stat by more than 0/60 if it was at 18 to start with.) To cut a long story short and a 
confusing explanation simple, you get better starting stats in non-maximize mode, but can't get as good at what you're supposed to be best at in the later stages of the game.

%%%%% <preserve_mode>
$GArtifacts are not lost if you never saw them [preserve_mode]
If preserve mode is "off", you can get a level feeling that you *NEVER* get with preserve mode "on": a "special" feeling. This means that there is an artifact, a pit or a vault on the level: and while a pit or vault may not necessarily cause a special feeling, an artifact CERTAINLY will. This is principally of use in finding out which levels are *not* "special", i.e. which ones can be left in a hurry without worrying about leaving something behind - if it's not "special", there is no artifact unless a monster has dropped one when you killed it. This is particularly important because, with preserve mode off, no artifact can be generated more than once in the game. If it's on a level and you miss it, it's gone forever. With preserve mode "on", if you miss an artifact, it can turn up later. But you don't get the "special" feeling. (Chances are that a vault will provide a good level feeling anyway, and quite possibly a couple of good items which may or may not include an artifact.)

%%%%% <allow_quickstart>
$GAllow the player to start by using Quick-Start [allow_quickstart] (21/5/2001)
Quick-Start is a mechanism by which you can put character generation completely in the game's hands. It will generate a reasonable character according to its algorithm, choosing the race, template and stats automatically.

This option is provided so that players who never wish to take advantage of this can avoid the prompt it gives.

%%%%% <allow_pickstats>
$GAllow the player to choose pre-set stats [allow_pickstats] (21/5/2001)
If the preference files contain some pre-set stats and this option is set, the player will be given a list of character templates at the start of character generation and be able to choose one with a single keypress.

If this option is not set, the player will not get this prompt, but will still be able to choose pre-set stats by using the 'l' key on the stat modifying screen.

%%%%? [NOT [IOR [EQU $SYS mac] [EQU $SYS win] [EQU $SYS acn]]]
%%%%% <display_credits>
$GRequire a keypress to clear the initial screen [display_credits] (21/5/2001)
On some systems, the game only needs a keypress after initialisation rather than a savefile selection, etc.. As this doesn't give the game any additional information, unsetting this option prevents the game from waiting for this keypress.

%%%%? 1
%%%%% <use_autoroller>
$GAllow stats to be rolled repeatedly with minima [use_autoroller]
This causes the "roll" command in the birth screen to generate characters with the specified race, class and sex until one of them has stats at least equal to the entered ones instead of simply generating a single random stat set.

%%%%% <spend_points>
$GAllow stats to be chosen by spending points [spend_points]
This allows the player to create a specific character without rolling it as long as the stats are not too high.

%%%%% <speak_unique>
$GAllow shopkeepers and uniques to speak [speak_unique]
If this option is in use, shopkeepers may sometimes whisper rumours to you. Also certain monsters start boasting as they attack you, and, when they die, they say their 'last words'. A speaking monster may also (if the option is selected) be wanted by the law, in which case you get the reward if you kill it.

As this option adds a method of making money and gives warnings about where some uniques are, turning it off makes the game more difficult.

%%%%% <ironman_shop>
$GShops (except for libraries) are locked [ironman_shop]
This option closes all shops except for libraries (which are open as normal).

%%%%% <ironman_feeling>
$GLevel feelings are only given after 2500 turns [ironman_feeling] (1.0.1)
This option causes level feelings to be given after 2500 turns on the level instead of giving the feeling immediately. 

%%%%% <chaos_patrons>
$GChaos patrons give your character gifts [chaos_patrons]
This option causes chaos patrons to give the character gifts on improving its prowess at thaumaturgy or (for Broo) innate powers. These may not be entirely helpful, however...

%%%%% <option=Q>
=== Squelch options ===

This menu controls which objects the game will hide as the player walks over them. In the first menu, you may choose an object category from which to modify the squelch settings. You may also save the current settings or temporarily disable squelching altogether (useful for the *****cmd=^K*[reveal object command], which usually uses a keymap to do this).

This uses the following commands:
   a-r    - Enter the indicated sub-menu (to modify it, etc.).
  Ctrl-A  - Enable/disable auto-squelching.
  Ctrl-S  - Save the auto-squelch and inscription options to a file.

%%%%% <option=Qa>
In the second menu, you can change the squelch settings for any or all of the indicated objects according to taste. The settings available range from "none",
via various degrees of power and cursedness, to "all". Not all settings are
available for every object. You can also set a default inscription for each object.

This uses the following commands:
a-z, etc. - change the squelch setting for one object.
  Ctrl-A  - squelch all displayed objects.
  Ctrl-N  - unsquelch all displayed objects.
  Ctrl-S  - move the squelch setting for all displayed objects by one place.

%%%%%
Things to note about these options include:
1. No squelch settings are stored in the save file, so they must be saved if the player wishes to retain them from session to session.
2. As squelched objects are *****cmd=K*[hidden] rather than *****cmd=k*[destroyed] them, squelching will not identify cursed artefacts immediately. However, squelched objects in inventory (although not on the floor) can be destroyed by destroying object z.

%%%%% <option=I>
=== Inscription options ===

This menu controls what inscription an object which doesn't have an inscription
of its own will have active. This is useful as there are a number of special commands which can be included within inscriptions (see the *****cmd={*[inscribe command] for details).

In the first menu, you simply need to select a character for the type of object you want. There are a number of (hopefully self-explanatory) object categories and one labelled "Unidentified items" which allows you to set the inscription for (e.g.) all unidentified potions.

This uses the following commands:
a-z, etc. - choose a category of item (including unidentified items) within
            which to set the default inscription.
  Ctrl-S  - Save the inscriptions to a file.
  Escape  - Leave the menu, accepting any changes made.

%%%%% <option=Ia>
The items in the chosen which are available are displayed on the second menu. If there is enough space, each will list the inscription which is currently assigned to it in curly brackets.

Pressing the character in square brackets before an entry will allow you to change the default inscription for the item type or unidentified item category.

The "object" inscription will then be used for all similar objects, provided that you know what such objects look like. The "unidentified" inscription will be used for every object which uses the same set of unidentified descriptions as the listed one.

This means that a "Gold Ring" will use the inscription assigned to "Zircon Ring", but a "Plain Gold Ring" will not do so as no object can be represented as a "Zircon Ring" in one game but a "Plain Gold Ring" in the next. 

This uses the following commands:
a-z, etc. - change the default inscription for the selected item or unidentified item class.
  Ctrl-A  - change the default inscription for all of the displayed items.
  Ctrl-U  - remove an existing inscription from an item (prompted for).
  Escape  - Leave the menu, accepting any changes made.
