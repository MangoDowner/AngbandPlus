{\rtf1\ansi\deff0\deftab720{\fonttbl{\f0\fswiss MS Sans Serif;}{\f1\froman\fcharset2 Symbol;}{\f2\froman Times New Roman;}{\f3\froman Times New Roman;}{\f4\froman\fprq2 Times New Roman;}{\f5\fmodern Courier New;}}
{\colortbl\red0\green0\blue0;}
\deflang1033\pard\plain\f2\fs20 --------- MISC. DOCS ---------
\par 
\par Tore the on-line help system apart, and rewrote about half of it from scratch.  At long last, the various obsolete chunks of text from Moria are gone.  Set up a system of sub-menus.  Cleaned up a lot of formatting, spelling, style.  Added new sections designed to tie in neatly with the expanded object and spell information code.  More info on inscriptions, lighting, magical devices, spell projections, effects of spells on monsters, plenty more.  More cross-references.  Rewritten (and far shorter, since the help itself will now be the changes list) Oangband description.
\par 
\par 
\par --------- *_INFO.TXT FILES ---------
\par 
\par a_info.txt
\par -added descriptions to all artifacts.
\par -reorganized the artifact numbering system to allow more space for future additions.
\par -same with artifact activation indexing.
\par -tweaks to various artifacts.  Some are much rarer, such as the two Oangband amulets, or deeper, such as the Arkenstone of Thrain (that activation is *awesome*, despite my tweak to wizard lighting, and I can't afford to let people get their mitts on it too soon!).  Lots of other, various changes.
\par -several new artifact armours.
\par -fixed a sval error that prevented shadow cloak artifacts from being created.
\par -changes to various artifact weapon and shield depths, base object kinds, base damage dice, base armour class, and certain flags to accomodate changes in k_info.txt.
\par -lowered virtually all enchantments to armour classs granted by artifact gloves and footwear.
\par -added four artifact staffs, four wands, and four rods.
\par 
\par 
\par e_info.txt
\par -added gloves of Magic Mastery, "(Dwarven)" armour, Whips of the Balrog, some changes elsewhere.
\par -added descriptions for all ego items.
\par -all ego items that suffer penalties to various things now display negative values.  This will make more interesting ego-items possible in future.
\par 
\par 
\par k_info.txt
\par -complete reorganization of object list.  Now object kinds are all together,  there is lots and lots of space for new stuff to go where it belongs, and objects are sorted in sval order.
\par -heavy revisions to weapons.  replacement of lucerne hammer with (throwing) dart, reducing weights by between a fifth and a third for most weapons, tweaking level and cost, adding base armour classes to quarterstaffs, spears, pikes, and pole-mounted weapons, adding a flag that requires the weapon to be two-handed, and another that requires it for characters without massive strength.
\par -additions to all non-body armours.  Dwarven Boots, Ethereal Cloaks, Barbuts, Knight's Shields, and so on.
\par -new rod.  No, I'm not going to tell you what it does...
\par -new scroll of elemental attacks
\par -changes in the weight, base armour class, base damage dice, price, etc. of all existing shields.
\par -addition of descriptions to most item types.  Some accept the insertion of damage information.
\par -value of diggers increased to compensate for loss of value increase for a normal tunneling bonus.
\par -made scrolls of *id* a little more common.
\par -made chests a little rarer.
\par -added the base object kind templates for the twelve new magical device artifacts.
\par -and various minor tweaks.
\par 
\par 
\par r_info.txt
\par -reorganized hound melee damages.  Vibration hounds can now stun the player more easily, gravity hounds aren't so overly tough in melee, and plasma hounds inflict fire and electrical damage.  
\par -both Giant Paladins and Storm Trolls are now slightly less powerful.
\par -Lokkak and both kinds of titans are now found much deeper in the dungeon.
\par -The Cat Lord is now Tevildo, Prince of Cats.
\par -upped player ghost HPs a bit (they needed to be in line with that of other uniques), replaced the Werewolf template with that of a Wight.
\par -miscellanious minor tweaks.
\par 
\par 
\par t_info.txt
\par -created a file to hold themed level information.  It currently has six themes, each of which will appear (if at all) only once per character lifetime.  Much information about themed levels is hard-coded, including size, depth, and default monster restrictions.
\par 
\par v_info.txt
\par -corrected various minor errors, roughly halved the number of chests.  Chests are *rare*.
\par 
\par 
\par --------- SOURCE CODE ---------
\par 
\par attack.txt (new source file)
\par -whips of the Balrog do 3.0x flame damage if monster is not immune.
\par -special temporary elemental and holy attacks do extra damage like brands and slays do.  Paladin temporary elemental brands do not effect shooting.  1 time in twenty hits, a temporary Holy slay is cancelled.
\par -fixed bugs in combat code that allows the table "Deadliness_conversion" to be improperly accessed.
\par -players may bash their opponent automatically when engaging in melee combat.  Only players good at melee combat and wearing shields on their arm are likely to bash.  Bashing may hurt, stun, or confuse the monster, and cause the player to lose some or all of his combat blows.  Wearing a big, heavy shield is the most important way to start bashing effectively.
\par -regularized special attack types.  New special attack allows rogues to hit a monster once, then do a phase door.
\par -missile launchers of velocity and accuracy sometimes "supercharge" for a nearly guaranteed hit or a little extra damage.
\par -adjusted assassin bonus to deadliness with missile weapons downwards just a tad.  They were getting a little too cute with thse slings.
\par -made weapons of perfect balance less likely to break.  Now, normal weapons break 1 time in 10, throwing weapons 1 time in 50, and weapons of perfect balance 1 time in 100.
\par -fixed a bug that prevented assassins from auto-tracking monsters when firing or throwing.
\par \plain\f4\fs20 -ammo of backbiting is dangerous...\plain\f2\fs20 
\par 
\par 
\par birth.c
\par -added new races to player creation function.
\par -rangers get a short bow and 25 arrows.
\par 
\par 
\par cave.c
\par -the magic mapping function may now optionally effect an extended area, or map around any given coordinate.
\par 
\par 
\par cmd1.c
\par -players may "feel" objects on the ground instead of "seeing" them if blind.
\par -py_pickup function is now able to accomodate people who want convenience and those who want information by using the "pickup" variable to control access to Tim Baker's menu system.  Menus can be forced, semi-forced, or not forced.  Players can (depending on options and situation) pick up everything on the floor they have room for using either the old method of grabbing everything as the object list cycles or using the new style system of menus.
\par -trap of software bug contained a nasty real software bug, reported by Frank Muzzulini
\par -the second movement needed to enter trees and rubble is now automated.
\par -regularized code from Tim  Baker's Easy patch.
\par 
\par 
\par cmd2.c
\par -added confirmation dialogs to prevent the player leaving a themed level unless he really wants to.
\par -added a bunch of chest traps.
\par -fixed a bug that allowed both attacking and disarming or tunneling using control+a direction.
\par -glyphs can be disarmed.  This is good, because they are rationed.
\par -the pickup command takes 10 energy for each object picked up, up to a maximum of 100.
\par \plain\f4\fs20 -the first 20 objects dropped by the player will pile up under his feet.
\par -activation of automatic disarming and opening as player moves cleaned up.  Now is aware of the repeat-obvious option.
\par \plain\f2\fs20 
\par 
\par cmd3.c
\par -inventory and equipment listings show total metric weights, if an option is set.
\par -the "inspect" command now displays at least some information about virtually any object inspected, often (but not always) including general object kind, artifact lore or detailed listing of qualities (same as before, just reformatted), and specific object type information.
\par -players automatically move any equipped shield to and from their backs when wielding, taking off, and dropping weapons that need both hands.
\par -when the player attempts to destroy a known artifact, the inscription "special" will not appear.  The message "you cannot destroy this item" should be sufficient.
\par -"superstealth" aids stealing, but is lost in the process.
\par 
\par 
\par cmd4.c
\par -added a function to personalize, randomize, and print a challenge from a player ghost.  This prevents players from missing out on any player ghosts.  This is important, because they can now only appear once.
\par -If the player is on a themed level, a special level feeling will be printed instead of the standard ones.
\par 
\par 
\par cmd5.c
\par -warrior pseudo-id, starting at level 35.  learns about monster racial type and resistances.  It only takes a turn, but is sometimes incomplete.  the "browse" command gives the user more information on this ability.
\par -function to temporarily elemental brand a weapon.
\par -Athelas that the player makes himself is sold at 20% of normal price.
\par -function to rebalance weapons.
\par -rewrote the code that indexes spells for browsing, learning, and casting.  Combined the pray and cast functions.  Colorized various things for the spell realms.  For the first time, I can actually /understand/ all the spell code!
\par -
\par -added priestly prayer "Holding".  Can fully jam a door, or prevent a monster from either acting or being attacked for a short period.
\par -combined the Enchant Weapon and Armour prayers.
\par -various existing spells changed to use fire_sphere and fire_arc. 
\par -about twelve new or reworked spells, too many to conveniently list.
\par 
\par 
\par cmd6.c
\par -scroll of elemental attacks.
\par -made it possible for the effects of magical devices and non-artifact activatable items to become fully known through use, and made a message appear if the player has learnt something.  This increase in knowledge applies to all items of that type.
\par -upgraded and totally altered the effects of Staffs of Starlight.
\par -Staffs detect traps, doors, and stairs further away, and also magic map more of the dungeon.
\par -effects of twelve new artifact magical devices added, many with special functions to provide unique effects.
\par -some damages for magical items adjusted downwards.
\par -mages no longer get a speed bonus with wands and staffs.
\par -some new normal artifact activations added.  Ringil's activation greatly altered.  Carlammas's activation upgraded.  Some random activation timeouts shortened.
\par -various existing spells changed to use fire_sphere, fire_meteor, and fire_arc.
\par -activation added for whips of the balrog.
\par 
\par 
\par config.h
\par -undefined options to delay loading object, ego-item,  and artifact descriptions.
\par -created a new option to forbid the generation of themed levels.  It is normally undefined, but the "angband_lite" option will toggle it on.
\par -added undef ALLOW_TERROR to the "angband_lite" option.
\par \plain\f4\fs20 
\par 
\par defines.h
\par -added definitions for the six themed levels which are currently possible.  These definitions are the bit flags of an integer in player info that stores the current themed level (if any).  This means that up to 16 themed levels are possible.
\par -added some shields, changed some weapons, added a cloak and two kinds of footgear.
\par -added various other objects.
\par -added three new races.
\par -added some chest trap definitions.
\par -added three bit flags to the function which controls bolts, beams, and balls:
\par      CLOUD: A ball spell that does not lose strength away from the center, up to radius given.
\par      ARC:   Act as an arc spell (a portion of a caster-centered ball)
\par      SELF:  Explicitly affect (usually hurt) the caster.
\par -added a spell type definition, GF_HOLD.
\par -added an option to display metric measurments, removed testing_stack and testing_carry, moved some other options around
\par 
\par 
\par dungeon.c
\par -Adopted Ethan Sicotte's idea of providing an inscription-dependent notice when objects recharge.
\par -"superstealth" is timed out.
\par -timed esp is timed out.
\par -Maiar recover quickly from all temporary negative conditions.
\par -no random monsters are generated over time on themed levels.
\par -both the 'p' and the 'm' commands activate the same function, so mages can use the 'p' key, and priests the 'm' key, if they so desire.
\par \plain\f2\fs20 -the 'g' command maps to a function renamed "do_cmd_pickup",which always and only picks up objects underneath the player.\plain\f4\fs20 
\par 
\par 
\par files.c
\par -the character screen can calculate and display metric values for height, weight, and infravision range, if an option is set.  GSNband idea.
\par -'?' now exists on-line help, and ESC returns to the previous document.  I find this more inuitive, and it conforms with the option interface.
\par -maximized stats shown with a '!' on character screen.
\par -Finally fixed an outdated display of flags on the character screen, thanks to prodding from Frank Muzzulini.
\par -when dumping a character description to text, the last line of a 4-line character history was chopped off.
\par -Angband omission corrected; increased and sustained stats now appear as dark green numerals in the character screen's listing of equipment effects on stats.
\par -Maiar get half the score of any other race.
\par 
\par 
\par generate.c
\par -a little tweak to monster and symbol clone pits and nests:  I suspect there won't be any more Blue Worm Pits at 3500'.
\par -unique monsters are created less often by the code that restricts monster generation to members of any given racal char.
\par -themed levels can be generated.  They are rare, appear at most once per character lifetime, and use some special arrays in memory that are created and filled only when a themed level is asked for.  Be warned - they can be extremely dangerous!
\par -themed levels have various monster restrictions, and take advantage of miscellanious tweaks to the build_vault function.
\par 
\par 
\par init1.c
\par -the code now looks for \plain\f5\fs20 w\plain\f4\fs20 eapons that require and desire two-handed use.
\par -removed the blocks to some existing code allowing artifact, ego-item, and object descriptions.
\par -ego-objects can now have penalties to Skill, Deadliness, armour class, and pval.  All values from 0 to 128 are mapped to those values in the e_info array.  All values from -1 to -127 are mapped to values 129 to 255.  All other values are mapped to zero (for robustness' sake).
\par -added a function (by copying and modifing v_info.txt) to read the new "t_info.txt" file containing themed level descriptions.  Only one themed level (the one chosen in generate.c) will be loaded into memory.  This allows an arbitarily large t_info.txt file.
\par 
\par 
\par init2.c
\par -functions to load themed levels into memory and free that memory when done. 
\par -tweaked what stores sell to match altered weapons and shields.
\par -stores no longer sell scrolls of *ID*, since players have much less need for it, and knowledge should not be too easy.
\par -added a function (by copying and modifing) to initialize the new "t_info arrays.
\par 
\par 
\par info.c
\par \plain\f2\fs20 -added a table that displays information about the class of object.
\par -added a table that displays extra numerical information for fully identified magical devices.
\par -added a table that displays "user's tips" on every spell.  Most are fairly obvious, and hardly worth reading, but some are definately helpful.\plain\f4\fs20 
\par -added a function to grab and output extra numerical information about a magical device.
\par -added a function to build up an information string about an object or artifact.  Object kinds whose effects are fully known may provide extra quantitative information.  Standard artifacts and all ego items have associated information.
\par -rewrote the code that displays exact attribute and flag information about an object to print conformation more concisely, work with the other object code, and use the "c_roff" function.
\par -various changes to displayed information about artifact activations.  new artifacts and one ego-item added.
\par -the half-magic users no longer have a minimum failure rate of 5%.  This means a Rogue can do just as well with his kind of magic as a Mage can with his.
\par -function that prints a list of spells rewritten to take advantage of the new spell indexing system, also to add color and the spellbook name.  The function accepts a spellbook tval and sval, and prints all spells in that book.   It can therefore be far more easily expanded to read the spells contained in, say, staffs.
\par 
\par 
\par load1.c
\par -some of the artifact indexes are now greater than 128, so I fiddled with the table that converts old special names to artifact and ego-item names.
\par 
\par 
\par load2.c
\par -monster stasis is restored.
\par -complete knowledge of an object kind is restored.
\par -the index of any current themed level is loaded, as are flags indicating what themed levels have already been generated.
\par -timed "superstealth" is loaded.
\par -hackish new function to read oangband version information before the savefile loading code outputs various status and error messages.  This will help debugging considerably.
\par 
\par 
\par melee1.c
\par -stunned monsters aren't as good in melee.
\par -chance for thieves to steal from you now dependant on the relationship between your and their level, not just your level.  Players have perfect protection from theft only from lower-level thieves.
\par 
\par 
\par melee2.c
\par -pack monsters will chase the player everywhere in arena levels.
\par -monster will not waste time slowing an already (temporarily) slowed player.
\par -monsters near the player will now run away if they are at least as fast as him.  Two (very) minor speed optimizations to this function.
\par -slight tweaks to monster fear.  fear is still a little strange.
\par -monster non-magical (GF_ARROW) missile attacks upgraded by 33% (since they can now miss or be deflected).
\par -players with "superstealth" will almost never wake up monsters, regardless of aggravation status.  Monsters found at depths less than twice the player's own exp level will often not be able to find where he is at all.  If the monster fails to perceive the player, it can cast no spells and will move entirely randomly.
\par -low-level monsters can instantly recover from stunning more readily, but high-level monsters aren't entirely immune.  Stunning no longer paralyzes the monster.
\par -monsters held in stasis cannot perform any action.  speedy monsters take just as long to escape from stasis as average-speed monsters do.  Uniques will escape slightly more quickly.
\par -any changes to targeted monster conditions (fast, slow, etc.) will affect the monster health bar.
\par -stunned monsters more frequently fail non-innate spells.
\par -the player will be slowed for a longer time by a slowing spell that suceeds.
\par -on themed levels, monsters must be half as far away from the player as normal to be processed.
\par 
\par 
\par monster1.c
\par -rangers learn about monster blows and armour faster than anyone else.
\par -corrected a text string with swapped elements in the monster description code.
\par -added racial information for monsters with no player kills.  This allows effective probing for racial type *before* offing that tough unique.
\par -tweaked a few class alterations to player ghosts.
\par 
\par 
\par monster2.c
\par -various player ghost variables are cleared, and the ghost itself forgotten, when the player leaves a level containing a player ghost.
\par -player ghosts may only appear once.  once deleted, they will not show up again.
\par -the player can see monsters half as far away on themed levels, whether normally or with telepathy.
\par -option to forbid monsters carrying objects has been removed.
\par -extended the summoning code to allow scattered summons (up to 6 distance).
\par -added some specific summons (used in the new chest trap code)
\par 
\par 
\par object1.c
\par -code to describe objects and activations in various levels of detail moved to new source file "info.c".
\par -plenty of new object flavors added.
\par -introduced a hack in "flavor_init" to make spellbooks with no usable spells appear grey.
\par -inventory and equipment displays use metric weights if an option is set.
\par -strings that describe the use of a shield now vary, depending on whether that shield is being carried on the back or on an arm.
\par -the discount on objects that the player brands himself are not shown.
\par -new chest traps are described.
\par -if the player is wearing a shield on his back, the display of the shield's base and bonus AC is expanded to make it easier for the player to figure out why his armour class suddenly dropped.
\par -hack added to inventory color processing code to make spellbooks with no useable spells appear grey.  This warns the weaker spellcasters away from that expensive, useless book they were thinking about buying.
\par 
\par 
\par object2.c
\par -code to determine spell failure chance and print spells and information about spells moved to new source file "info.c".
\par -level boosting code made less generous.
\par -a new weapon, darts (light javelins), may sometimes appear in stacks of 2 to 4.
\par -fixed a bug that caused the chest traps table to be improperly accessed.
\par -option to forbid objects stacking has been removed.  I had to suppress a twinge of nostalga...
\par -reduced the magical AC bonuses for gloves and boots.  This makes up for the higher base ac of shields.
\par -made it impossible for melee weapons to have their damage dice sides boosted by more than 100%.  However slight, a chance for 150% reduces the interest of artifacts - not good.
\par -ammo is now 50% less likely to have boosted damage dice.
\par -diggers do not get value increases for tunneling bonuses unless they exceed the normal amount.
\par -various new ego-items added to generation code.  Whips of the Balrog can be activated.
\par -ego-item bonuses and penalties to Skill, Deadliness, armour class, and pval now only depend on information in e_info.txt.  Cursed or broken status no longer has any effect.
\par -function make_gold revised again.  now object level works normally for these items.
\par -staffs (if charges are identical) and wands (in all such cases) will stack together if they have known charges or are known to be empty.
\par -pseudo and fully ID-ed ammo without plusses will stack together.
\par -weapons of perfect balance will stack together if identical.
\par 
\par 
\par randart.c
\par -Object selection code rewritten.  It is now shorter, and no longer hardcodes all the object types.  
\par -Reduced magical AC for gloves and boots.
\par 
\par 
\par save2.c
\par -fixed a faulty number display in an error message.
\par -monster stasis is saved.
\par -complete knowledge of an object kind is saved.
\par -the index of any current themed level is saved, as are flags indicating what themed levels have already been generated.
\par -timed "superstealth" is saved.
\par 
\par 
\par spells1.c
\par -electricity may stun the player.
\par -added two "JL"s, for Julian Lighton, which I had earlier neglected to do.
\par -acid attacks now fail to attack armour one time in three.  People thought that the Water Hounds were getting a little out of hand, and I agreed.
\par -elemental attack only reduce unsustained stats.
\par -monsters held in stasis cannot be effected by spells.
\par -new spell type to do damage to only weak monsters.
\par -monster stunning from sound tweaked, monsters can be stunned by electricity.
\par -monster already slowed by more than 10 will not be slowed even further by a spell of slow monster.  Fair's fair - the player doesn't have to worry about that.
\par -Holding magics can fully jam a door or freeze a monster in place.
\par -objects are now not always destroyed by weak spells (less than 30 for acid, 20 for everything else) that melt, burn, freeze, or electrocute.  
\par -A special kind of Holding magic is more powerful, but only effects undead.
\par -shadow fairies are hurt 4/3rds as much by light, and ents are hurt 4/3rds as much by fire.
\par -arrows, boulders, and missiles can now miss or be deflected (but not very often).
\par -shields may sometimes offer partial protection against shards.
\par -monsters can be stunned by more spell types, and are slowed by gravity.  Appropriate monsters are immune, of course.
\par -players breathed on by gravity who get involuntarily teleported will now land somewhere outside the blast radius, preventing double jeopardy.  People who land in lava are unlikely to thank me, however...
\par -expanded the project() function to allow spells that form arcs, defined as balls centered on the caster constrained to form a cone centered on a line of projection.
\par -expanded the project() function to allow spells with a diameter containing the energy source that is different (usually greater than) than 10 feet.  The initial use of this capacity was to allow ball spells centered on the caster (which includes arcs) to do an intuitive amount of damage to adjacent monsters (this particular technique requires a source diameter of twenty feet)  No more excessive-looking damages in the spell code - if it says it does 200 damage unresisted, that what it'll do.
\par -ensured that the project() function would never try to affect more grids then the maximum (256), and so corrupt grids previously marked.  This was necesary after I started coding enormous arc spells.  Since I don't trust myself, I'll protect the code /from/ myself!
\par 
\par 
\par \plain\f2\fs20 spells2.c
\par -functions that detect traps, doors, and stairs may optionally display these features at (slightly) extended ranges.  Only staffs take advantage of this.
\par -lite_line reduced in strength again.  It now does 4d5 of damage to critters hurt by bright light.
\par -function to put undead in line-of-sight into stasis.
\par -functions to detect living creatures and to dispel weak monsters.
\par -made the earthquake function dump rubble on top of monsters instead of making them coexist with rock if they survive but can't escape.  Thanks to Tim Baker.
\par -fully identifying a flavored object will also fully identify all objects of that type, except if it is a variable ring or amulet.
\par -the same function now inflicts a variable amount of damage on players and monsters who can't find shelter.
\par -objects that the player brands himself are sold at 20% of normal price.
\par -new function to handle temporary elemental attacks.
\par -rewrote the recharging code again to make it easier to read and understand.
\par -new function to allow mages to perform "reverse recharging":  draining energy from magical items to get mana.
\par -new functions for staffs of starlight, the Staff of Gandalf, the Staff of Radagast, and so on.
\par -spells of earthquake and *destruction* now decrease the trap/glyph count when destroying these features.
\par -glyphs are now rationed.  maximum:  four.   Hack - because Rogues use the same global variable, they actually have no limit, but I don't see this becoming a problem.
\par -new function:  "fire_arc".  It is now possible to cast spells that form arcs around the caster.  This function accepts a value that controls how wide the arc may be, uses a increased value for diameter of energy source (see notes in code), and can even be used as a (albeit rather expensive) defined-length beam spell.
\par -two new functions to fire ball spells that do not lose strength up to a specified diameter (as opposed to a normal ball spell's ten feet) and that hurt the caster.  Even though it duplicates code, I added these new functions (instead of expanding "fire_ball") to make them more convenient to use.
\par 
\par 
\par store.c
\par -New races added to racial price adjustment table.  Realized that this table is so old that it dates back to the days when Hobbits were called "Halflings".  Now that's old!
\par -store pricing code tweaked in another attempt to fix a serious mac 68K-specific problem: prices of 47 million or 1.
\par -because objects that the player makes himself are heavily discounted, and this discount does not normally appear in the object description, a store owner will warn the player if he tries to sell all that Athelas he made!
\par -the BM will often sell potions and scrolls with a value less than 400 in *quantity*.  This is where middle and high-level players can use their money to buy useful utility objects that wouldn't be worth just carrying around one or two.
\par -listed store commands now include 'I' to inspect.  Zangband idea, parts of its code.
\par \plain\f4\fs20 -store displays use metric values if an option is set.  GSNband idea.
\par -mega-hack:  stores will not sell Longbows until the player is level 10.  Rangers can't be allowed them too soon.
\par -hack added to inventory color processing code to make spellbooks with no useable spells appear grey.  This warns the weaker spellcasters away from that expensive, useless book they were thinking about buying.\plain\f2\fs20 
\par 
\par 
\par tables.c
\par -The table with values for mana per level for each value of INT or WIS now calculates in 1/10th mana points.  DarkGod's idea.
\par -the strength input table to combat Skill has been deleted (for simplicity, and because strength is quite important enough).
\par -Standard Angband strength input table into the blow/rnd table restored.  This makes a high strength slightly more important.
\par -revised the help text for the blows table to reflect various changes.  Players will get three blows sooner, and get four blows later.  The table promotes a balance of strength and dexterity.
\par -there are now six possible shopkeepers per store.
\par -three new races added to the racial definition table.  Races now have level-dependant modifiers to abilities.  Currently, only the "must do" abilities thus change:  melee and archery/throwing.  I hope that, at long last, Half-Troll Warriors will be a little more smooth-paced.
\par -replaced the spellbook flags with indexes.  This kills all the blank spots in spellbooks and allows total flexibility in how and what spells go into what spellbooks.  The price paid was an executable almost a thousand bytes larger, and a maximum value for spell indexes of 255 (this can be easily increased to maxint, but doing so would take up more space).
\par -Drastically revised the spell lists for each class to take advantage of this.  Some classes will hardly be recognizable.
\par -added various new spells to the spell names table.
\par -reduced the size of the table that converts internal +dam values to Deadliness percentage modifiers by about 2/3rds.
\par -added the new traps to the chest traps table.
\par -cleaned up and reorganized the option tables, removed testing_stack and testing_carry, added an option to display metric measurements.
\par 
\par 
\par xtra1.c
\par \plain\f4\fs20 -dungeon depth is displayed in meters if two options are set.
\par -Mana increases much more smoothly with increases in spell stat.
\par -because of this, and because I thought spellcasters were too powerful early on with near-guarenteed three mana, I lowered mana by one.  Now, the cut-off point for three mana at level one is 18/30, and the cut-off point for five mana at level 2 is 18/50.
\par -gloves with the magic mastery flag no longer reduce mage and necro mana.
\par -ents do not love axes (and similar weapons).
\par -simplified the code that controls blows in combat.  All class-specific bonuses and penalties are gone.  After many attempts at reform, I am finally satisfied with how blows work.
\par -everyone gets two blows barehanded.
\par -all level modifiers are now divided by 50. This allows me to far more easily calculate maximum intrinsic bonuses.
\par -races also have bonuses and penalties to various skills.  Currently, only melee and archery/throwing actually have any effect.
\par -strength no longer affects combat Skill.
\par -shadow fairies never aggravate.  if they acquire that flag, cancel the aggravation, and reduce their stealth by three.
\par -ents never have feather fall.  They will learn to dig extremely well as they gain levels, but only with their hands.  They increase STR and CON, and decrease DEX as they age (gain levels).
\par \plain\f2\fs20   -Added code to calculate the effects of the player's moving his shield on and off his back, also added messages.  The character will automatically use his shield appropriately if conditions change.\plain\f4\fs20 
\par 
\par 
\par xtra2.c
\par -monsters cannot be hurt while in stasis.
\par -added a function to change the player's timed "superstealth", and "tim_esp" values.
\par -the player loses any special stealth magics if he does damage to any monster.
\par -looking at objects is more compatable with the roguelike keyset.
\par 
\par 
\par util.c
\par -fixed a small bug in the c_roff function that indented lines after a forced return.
\par -expanded the c_roff function to accept any reasonable left and right margins.  This makes it possible to print blocks of text anywhere I please.
\par -added a function to convert standard to metric weights.
\par -Tim Baker's repeat code is no longer #ifdef-ed.
\par -added a table that returns the angle to any coordinate within 15 squares of the origin.  This table requires a fair amount of input and output manipulation - see the comments for more info.  It is used in the "project()" function to delineate the erea of effect of arc spells.
\par 
\par 
\par variable.c
\par -themed levels have their own level feelings, which are stored in a global variable called "themed_feeling".
\par 
\par 
\par wizard1.c
\par -spoilers can be generated with metric weights, if an option is set.
\par 
\par 
\par z-rand.c
\par -slight effeciency tweak to the "rand_div" function.
\par \plain\f2\fs20 
\par 
\par 
\par And quite a lot of minor and possibly not-so-minor changes that I made and then forgot about.  This file is unusually incomplete.
\par }
 