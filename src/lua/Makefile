# Makefile.in generated by automake 1.6.3 from Makefile.am.
# src/lua/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = /bin/sh

srcdir = .
top_srcdir = ../..

prefix = /usr/local
exec_prefix = ${prefix}

bindir = ..
sbindir = ${exec_prefix}/sbin
libexecdir = ${exec_prefix}/libexec
datadir = ${prefix}/share
sysconfdir = ${prefix}/etc
sharedstatedir = ${prefix}/com
localstatedir = ${prefix}/var
libdir = ${exec_prefix}/lib
infodir = ${prefix}/info
mandir = ${prefix}/man
includedir = ${prefix}/include
oldincludedir = /usr/include
pkgdatadir = $(datadir)/angband
pkglibdir = $(libdir)/angband
pkgincludedir = $(includedir)/angband
top_builddir = ../..

ACLOCAL = ${SHELL} /Users/evan/Desktop/CatH/angband-3.0.3/missing --run aclocal-1.6
AUTOCONF = ${SHELL} /Users/evan/Desktop/CatH/angband-3.0.3/missing --run autoconf
AUTOMAKE = ${SHELL} /Users/evan/Desktop/CatH/angband-3.0.3/missing --run automake-1.6
AUTOHEADER = ${SHELL} /Users/evan/Desktop/CatH/angband-3.0.3/missing --run autoheader

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
INSTALL_PROGRAM = ${INSTALL}
INSTALL_DATA = ${INSTALL} -m 644
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = ${INSTALL}
INSTALL_HEADER = $(INSTALL_DATA)
transform = s,x,x,
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = 
host_triplet = powerpc-apple-darwin6.6

EXEEXT = 
OBJEXT = o
PATH_SEPARATOR = :
AMTAR = ${SHELL} /Users/evan/Desktop/CatH/angband-3.0.3/missing --run tar
ANGBAND_OBJS = maid-x11.o
AWK = awk
CC = gcc
DEFAULT_PATH = ./lib/
DEPDIR = .deps
GAMEGROUP = 
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
PACKAGE = angband
RANLIB = ranlib
STRIP = 
VERSION = 3.0.3
X_CFLAGS =  -I/usr/X11R6/include
X_EXTRA_LIBS = 
X_LIBS =  -L/usr/X11R6/lib
X_PRE_LIBS =  -lSM -lICE
am__include = include
am__quote = 
install_sh = /Users/evan/Desktop/CatH/angband-3.0.3/install-sh

noinst_LIBRARIES = liblua.a

noinst_PROGRAMS = tolua

liblua_a_SOURCES = \
  lapi.c ldebug.c lmem.c lstrlib.c lvm.c \
  tolua_lb.c lauxlib.c ldo.c lobject.c ltable.c \
  lzio.c tolua_rg.c lbaselib.c lfunc.c lparser.c \
  tolua_bd.c tolua_tm.c lcode.c lgc.c \
  lstate.c ltm.c tolua_eh.c tolua_tt.c ldblib.c \
  llex.c lstring.c lundump.c tolua_gp.c \
  lapi.h lauxlib.h lcode.h ldebug.h ldo.h lfunc.h \
  lgc.h llex.h llimits.h lmem.h lobject.h lopcodes.h \
  lparser.h lstate.h lstring.h ltable.h ltm.h lua.h \
  luadebug.h lualib.h lundump.h lvm.h lzio.h \
  tolua.h tolua_eh.h tolua_rg.h tolua_tm.h \
  tolua_tt.h


tolua_SOURCES = \
  tolua.c tolualua.c liolib.c


EXTRA_tolua_SOURCES = \
  array.lua basic.lua class.lua clean.lua code.lua \
  container.lua declaration.lua define.lua doit.lua \
  enumerate.lua feature.lua function.lua lua2c.lua \
  module.lua operator.lua package.lua typedef.lua \
  variable.lua verbatim.lua


tolua_LDADD = liblua.a
subdir = src/lua
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/src/autoconf.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)

liblua_a_AR = $(AR) cru
liblua_a_LIBADD =
am_liblua_a_OBJECTS = lapi.$(OBJEXT) ldebug.$(OBJEXT) lmem.$(OBJEXT) \
	lstrlib.$(OBJEXT) lvm.$(OBJEXT) tolua_lb.$(OBJEXT) \
	lauxlib.$(OBJEXT) ldo.$(OBJEXT) lobject.$(OBJEXT) \
	ltable.$(OBJEXT) lzio.$(OBJEXT) tolua_rg.$(OBJEXT) \
	lbaselib.$(OBJEXT) lfunc.$(OBJEXT) lparser.$(OBJEXT) \
	tolua_bd.$(OBJEXT) tolua_tm.$(OBJEXT) lcode.$(OBJEXT) \
	lgc.$(OBJEXT) lstate.$(OBJEXT) ltm.$(OBJEXT) tolua_eh.$(OBJEXT) \
	tolua_tt.$(OBJEXT) ldblib.$(OBJEXT) llex.$(OBJEXT) \
	lstring.$(OBJEXT) lundump.$(OBJEXT) tolua_gp.$(OBJEXT)
liblua_a_OBJECTS = $(am_liblua_a_OBJECTS)
noinst_PROGRAMS = tolua$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)

am_tolua_OBJECTS = tolua.$(OBJEXT) tolualua.$(OBJEXT) liolib.$(OBJEXT)
tolua_OBJECTS = $(am_tolua_OBJECTS)
tolua_DEPENDENCIES = liblua.a
tolua_LDFLAGS =

DEFS = -DHAVE_CONFIG_H
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)/src
CPPFLAGS = 
LDFLAGS =   -L/usr/X11R6/lib
LIBS = -lXaw -lXext  -lSM -lICE -lXmu -lXt -lX11  -lncurses 
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/lapi.Po ./$(DEPDIR)/lauxlib.Po \
	./$(DEPDIR)/lbaselib.Po ./$(DEPDIR)/lcode.Po \
	./$(DEPDIR)/ldblib.Po ./$(DEPDIR)/ldebug.Po \
	./$(DEPDIR)/ldo.Po ./$(DEPDIR)/lfunc.Po \
	./$(DEPDIR)/lgc.Po ./$(DEPDIR)/liolib.Po \
	./$(DEPDIR)/llex.Po ./$(DEPDIR)/lmem.Po \
	./$(DEPDIR)/lobject.Po ./$(DEPDIR)/lparser.Po \
	./$(DEPDIR)/lstate.Po ./$(DEPDIR)/lstring.Po \
	./$(DEPDIR)/lstrlib.Po ./$(DEPDIR)/ltable.Po \
	./$(DEPDIR)/ltm.Po ./$(DEPDIR)/lundump.Po \
	./$(DEPDIR)/lvm.Po ./$(DEPDIR)/lzio.Po \
	./$(DEPDIR)/tolua.Po ./$(DEPDIR)/tolua_bd.Po \
	./$(DEPDIR)/tolua_eh.Po ./$(DEPDIR)/tolua_gp.Po \
	./$(DEPDIR)/tolua_lb.Po ./$(DEPDIR)/tolua_rg.Po \
	./$(DEPDIR)/tolua_tm.Po ./$(DEPDIR)/tolua_tt.Po \
	./$(DEPDIR)/tolualua.Po
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CFLAGS = -g -O2 -fno-strength-reduce  -I/usr/X11R6/include
DIST_SOURCES = $(liblua_a_SOURCES) $(tolua_SOURCES) \
	$(EXTRA_tolua_SOURCES)
DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(liblua_a_SOURCES) $(tolua_SOURCES) $(EXTRA_tolua_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/lua/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

AR = ar

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
liblua.a: $(liblua_a_OBJECTS) $(liblua_a_DEPENDENCIES) 
	-rm -f liblua.a
	$(liblua_a_AR) liblua.a $(liblua_a_OBJECTS) $(liblua_a_LIBADD)
	$(RANLIB) liblua.a

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
tolua$(EXEEXT): $(tolua_OBJECTS) $(tolua_DEPENDENCIES) 
	@rm -f tolua$(EXEEXT)
	$(LINK) $(tolua_LDFLAGS) $(tolua_OBJECTS) $(tolua_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/lapi.Po
include ./$(DEPDIR)/lauxlib.Po
include ./$(DEPDIR)/lbaselib.Po
include ./$(DEPDIR)/lcode.Po
include ./$(DEPDIR)/ldblib.Po
include ./$(DEPDIR)/ldebug.Po
include ./$(DEPDIR)/ldo.Po
include ./$(DEPDIR)/lfunc.Po
include ./$(DEPDIR)/lgc.Po
include ./$(DEPDIR)/liolib.Po
include ./$(DEPDIR)/llex.Po
include ./$(DEPDIR)/lmem.Po
include ./$(DEPDIR)/lobject.Po
include ./$(DEPDIR)/lparser.Po
include ./$(DEPDIR)/lstate.Po
include ./$(DEPDIR)/lstring.Po
include ./$(DEPDIR)/lstrlib.Po
include ./$(DEPDIR)/ltable.Po
include ./$(DEPDIR)/ltm.Po
include ./$(DEPDIR)/lundump.Po
include ./$(DEPDIR)/lvm.Po
include ./$(DEPDIR)/lzio.Po
include ./$(DEPDIR)/tolua.Po
include ./$(DEPDIR)/tolua_bd.Po
include ./$(DEPDIR)/tolua_eh.Po
include ./$(DEPDIR)/tolua_gp.Po
include ./$(DEPDIR)/tolua_lb.Po
include ./$(DEPDIR)/tolua_rg.Po
include ./$(DEPDIR)/tolua_tm.Po
include ./$(DEPDIR)/tolua_tt.Po
include ./$(DEPDIR)/tolualua.Po

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(COMPILE) -c `cygpath -w $<`
CCDEPMODE = depmode=gcc
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS)

installdirs:

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-noinstLIBRARIES clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

uninstall-am: uninstall-info-am

.PHONY: GTAGS all all-am check check-am clean clean-generic \
	clean-noinstLIBRARIES clean-noinstPROGRAMS distclean \
	distclean-compile distclean-depend distclean-generic \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic tags uninstall \
	uninstall-am uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
