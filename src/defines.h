/* File: defines.h */

/*
 * Copyright (c) 1997 Ben Harrison, James E. Wilson, Robert A. Koeneke
 *
 * This software may be copied and distributed for educational, research,
 * and not for profit purposes provided that this copyright and statement
 * are included in all such copies.  Other copyrights may also apply.
 */

/*
 * Do not edit this file unless you know *exactly* what you are doing.
 *
 * Some of the values in this file were chosen to preserve game balance,
 * while others are hard-coded based on the format of old save-files, the
 * definition of arrays in various places, mathematical properties, fast
 * computation, storage limits, or the format of external text files.
 *
 * Changing some of these values will induce crashes or memory errors or
 * savefile mis-reads.  Most of the comments in this file are meant as
 * reminders, not complete descriptions, and even a complete knowledge
 * of the source may not be sufficient to fully understand the effects
 * of changing certain definitions.
 *
 * Lastly, note that the code does not always use the symbolic constants
 * below, and sometimes uses various hard-coded values that may not even
 * be defined in this file, but which may be related to definitions here.
 * This is of course bad programming practice, but nobody is perfect...
 *
 * For example, there are MANY things that depend on the screen being
 * 80x24, with the top line used for messages, the bottom line being
 * used for status, and exactly 22 lines used to show the dungeon.
 * Just because your screen can hold 46 lines does not mean that the
 * game will work if you try to use 44 lines to show the dungeon.
 *
 * You have been warned.
 */

/*
 * Name of the version/variant
 */
#define VERSION_NAME "EyAngband"

/*
 * Current version string
 */
#define VERSION_STRING	"0.5.0"

/*
 * Current version numbers
 */
#define VERSION_MAJOR	0
#define VERSION_MINOR	5
#define VERSION_PATCH	0
#define VERSION_EXTRA	0

/*
 * Maximum value storable in a "byte" (hard-coded)
 */
#define MAX_UCHAR		255

/*
 * Maximum value storable in a "s16b" (hard-coded)
 */
#define MAX_SHORT		32767

/*
 * Number of grids in each block (vertically)
 * Probably hard-coded to 11, see "generate.c"
 */
#define BLOCK_HGT		11

/*
 * Number of grids in each block (horizontally)
 * Probably hard-coded to 11, see "generate.c"
 */
#define BLOCK_WID		11

/*
 * Number of grids in each panel (vertically)
 * Must be a multiple of BLOCK_HGT
 */
#define PANEL_HGT		11

/*
 * Number of grids in each panel (horizontally)
 * Must be a multiple of BLOCK_WID
 */
#define PANEL_WID		33

#define ROW_MAP			1
#define COL_MAP			13

/*
 * Number of grids in each screen (vertically)
 * Must be a multiple of PANEL_HGT (at least 2x)
 */
#define SCREEN_HGT		(Term->hgt - ROW_MAP - 1)

/*
 * Number of grids in each screen (horizontally)
 * Must be a multiple of PANEL_WID (at least 2x)
 */
#define SCREEN_WID		(Term->wid - COL_MAP - 1)

/*
 * Maximum number of grids in each dungeon (vertically)
 * Must be a multiple of SCREEN_HGT
 * Must be less or equal to 256
 */
#define MAX_DUNGEON_HGT		66

/*
 * Maximum number of grids in each dungeon (horizontally)
 * Must be a multiple of SCREEN_WID
 * Must be less or equal to 256
 */
#define MAX_DUNGEON_WID		198

/*
 * Number of rooms to attempt to generate in dungeon.
 * 
 */
#define DUN_ROOMS	50

/*
 * Maximum numbers of rooms along each axis (currently 6x18)
 * Now defined in defines.h
 */
#define MAX_ROOMS_ROW	(MAX_DUNGEON_HGT / BLOCK_HGT)
#define MAX_ROOMS_COL	(MAX_DUNGEON_WID / BLOCK_WID)

/* 
 * Maximum amount of starting equipment
 */
#define MAX_START_ITEMS	3

/*
 * Maximum amount of allocations for an object
 */
#define MAX_OBJ_ALLOC	4

/*
 * Maximum number of high scores in the high score file
 */
#define MAX_HISCORES	100

/*
 * Maximum dungeon level.  The player can never reach this level
 * in the dungeon, and this value is used for various calculations
 * involving object and monster creation.  It must be at least 100.
 * Setting it below 128 may prevent the creation of some objects.
 */
#define MAX_DEPTH		128

/*
 * Maximum size of the "view" array (see "cave.c")
 * Note that the "view radius" will NEVER exceed 20, and even if the "view"
 * was octagonal, we would never require more than 1520 entries in the array.
 */
#define VIEW_MAX		1536

/*
 * Maximum size of the "temp" array (see "cave.c")
 * Note that we must be as large as "VIEW_MAX" for proper functioning
 * of the "update_view()" function, and we must also be as large as the
 * largest illuminatable room, but no room is larger than 800 grids.  We
 * must also be large enough to allow "good enough" use as a circular queue,
 * to calculate monster flow, but note that the flow code is "paranoid".
 */
#define TEMP_MAX		1536

/*
 * OPTION: Maximum number of macros (see "util.c")
 * Default: assume at most 256 macros are used
 */
#define MACRO_MAX		256

/*
 * OPTION: Maximum number of "quarks" (see "util.c")
 * Default: assume at most 512 different inscriptions are used
 */
#define QUARK_MAX		512

/*
 * OPTION: Maximum number of messages to remember (see "util.c")
 * Default: assume maximal memorization of 2048 total messages
 */
#define MESSAGE_MAX		2048

/*
 * OPTION: Maximum space for the message text buffer (see "util.c")
 * Default: assume that each of the 2048 messages is repeated an
 * average of three times, and has an average length of 48
 */
#define MESSAGE_BUF		32768

/*
 * Maximum amount of Angband windows.
 */
#define ANGBAND_TERM_MAX 8

/*
 * Maximum amount of sections in room description.
 */
#define ROOM_DESC_SECTIONS 15

/* 
 * Amount rolled to determine room desc.
 */
#define ROOM_DESC_CHANCE	1000

/*
 * Dungeon room types 
 */
#define ROOM_NORMAL			0 
#define ROOM_LARGE			1
#define ROOM_NEST_RODENT	2
#define ROOM_NEST_JELLY		3
#define ROOM_NEST_TREASURE	4
#define ROOM_NEST_VORTEX	5
#define ROOM_NEST_ANIMAL	6
#define ROOM_NEST_HORROR	7
#define ROOM_NEST_UNDEAD	8
#define ROOM_PIT_ORC		9
#define ROOM_PIT_TROLL		10
#define ROOM_PIT_PERSON		11
#define ROOM_PIT_GIANT		12
#define ROOM_PIT_DRAGON		13
#define ROOM_PIT_DEMON		14
#define ROOM_LESSER_VAULT	15
#define ROOM_GREATER_VAULT	16
#define ROOM_QUEST_VAULT	17
		
/*
 * Store index definitions (see "store.c", etc)
 */
#define STORE_GENERAL	0
#define STORE_ARMOR		1
#define STORE_WEAPON	2
#define STORE_TEMPLE	3
#define STORE_ALCHEMY	4
#define STORE_MAGIC		5
#define STORE_B_MARKET	6
#define STORE_HOME		7
#define STORE_BOOK		8
#define STORE_GUILD		9

/*
 * Total number of stores (see "store.c", etc)
 */
#define MAX_STORES		10

/*
 * Store constants
 */
#define STORE_BM_OLDDEPTH	15		/* Chance BM will generate items according to "old" method */
#define STORE_INVEN_MAX		24		/* Max number of discrete objs in inven */
#define STORE_CHOICES		40		/* Number of items to choose stock from */
#define STORE_OBJ_LEVEL		5		/* Magic Level for normal stores */
#define STORE_TURNOVER		9		/* Normal shop turnover, per day */
#define STORE_MIN_KEEP		6		/* Min slots to "always" keep full */
#define STORE_MAX_KEEP		18		/* Max slots to "always" keep full */
#define STORE_SHUFFLE		25		/* 1/Chance (per day) of an owner changing */
#define STORE_TURNS			1000	/* Number of turns between turnovers */

/*
 * Number of tval/min-sval/max-sval slots per ego_item
 */
#define EGO_TVALS_MAX		3
#define MONSTER_BLOW_MAX	4

/*
 * Misc constants
 */
#define TOWN_DAWN		10000	/* Number of turns from dawn to dawn XXX */
#define MON_MULT_ADJ	8		/* High value slows multiplication */
#define QUEST_TURNS		1200	/* Number of turns between quest failure checks */
#define FEELING_RATE	100		/* Amount of turns needed to get a level feeling */
#define INVIS_DELAY		3		/* Duration of invisiblity nullification (in 10*turns) */
#define BASE_MON_REGEN	100		/* Base monster regeneration speed */
#define INTEREST_OFFSET	10		/* Amount of levels OOD before a history is interesting */

/*
 * Constants relating to player "conditions" 
 */
#define DISEASE_RATE	(adult_nightmare_mode ? 500 : 1000)	/* High value slows disease */

/* 
 * Levels of resistances needed to ignore elemental damage
 */
#define RST_IGNORE_ELEM		10

/*
 * There is a 1/20 (5%) chance of inflating the requested object_level
 * during the creation of an object (see "get_obj_num()" in "object.c").
 * Lower values yield better objects more often.
 */
#define GREAT_OBJ	20

/*
 * Misc constants for object boosting (used for easy_mode and "luck").
 * These are chances out of 1000
 */
#define LUCK_INFLATE	100
#define LUCK_GOOD		50
#define LUCK_GREAT		15
#define EASY_INFLATE	200
#define EASY_GOOD		100
#define EASY_GREAT		40

/*
 * There is a 1/20 (5%) chance that ego-items with an inflated base-level are
 * generated when an object is turned into an ego-item (see make_ego_item()
 * in object2.c). As above, lower values yield better ego-items more often.
 */
#define GREAT_EGO	20

/*
 * There is a 1/50 (2%) chance of inflating the requested monster_level
 * during the creation of a monsters (see "get_mon_num()" in "monster.c").
 * Lower values yield harder monsters more often.
 */
#define NASTY_MON	50		/* 1/chance of inflated monster level */

/*
 * Refueling constants
 */
#define FUEL_TORCH	5000	/* Maximum amount of fuel in a torch */
#define FUEL_LAMP	15000	/* Maximum amount of fuel in a lantern */

/*
 * More maximum values
 */
#define MAX_SIGHT	20	/* Maximum view distance */
#define MAX_RANGE	18	/* Maximum range (spells, etc) */

/*
 * There is a 1/160 chance per round of creating a new monster
 */
#define MAX_M_ALLOC_CHANCE (adult_nightmare_mode ? 16 : 160)

/*
 * Normal levels get at least 14 monsters
 */
#define MIN_M_ALLOC_LEVEL	14

/*
 * The town starts out with 4 residents during the day
 */
#define MIN_M_ALLOC_TD		4

/*
 * The town starts out with 8 residents during the night
 */
#define MIN_M_ALLOC_TN		8

/*
 * A monster can only "multiply" (reproduce) if there are fewer than 100
 * monsters on the level capable of such spontaneous reproduction.  This
 * is a hack which prevents the "m_list[]" array from exploding due to
 * reproducing monsters.  Messy, but necessary.
 */
#define MAX_REPRO	100

/*
 * Player constants
 */
#define PY_MAX_EXP	99999999L	/* Maximum exp */
#define PY_MAX_GOLD	999999999L	/* Maximum gold */
#define PY_MAX_LEVEL	50		/* Maximum level */

/*
 * Player "food" crucial values
 */
#define PY_FOOD_MAX		15000	/* Food value (Bloated) */
#define PY_FOOD_FULL	10000	/* Food value (Normal) */
#define PY_FOOD_ALERT	2000	/* Food value (Hungry) */
#define PY_FOOD_WEAK	1000	/* Food value (Weak) */
#define PY_FOOD_FAINT	500		/* Food value (Fainting) */
#define PY_FOOD_STARVE	100		/* Food value (Starving) */

/*
 * Player regeneration constants
 */
#define PY_REGEN_NORMAL		197		/* Regen factor*2^16 when full */
#define PY_REGEN_WEAK		98		/* Regen factor*2^16 when weak */
#define PY_REGEN_FAINT		33		/* Regen factor*2^16 when fainting */
#define PY_REGEN_HPBASE		1442	/* Min amount hp regen*2^16 */
#define PY_REGEN_MNBASE		524		/* Min amount mana regen*2^16 */

/*
 * Player stunning constants 
 */
#define PY_STUN_KO			120 	/* Amount of stunning that knocks a player out */
#define PY_STUN_HEAVY		60		/* Amount of stunning that counts as "heavy" */

/*
 * Player cut constants 
 */
#define PY_CUT_MORTAL		1000	/* Mortal cut */
#define PY_CUT_DEEP			200		/* Deep gash */
#define PY_CUT_SEVERE		100		/* Severe cut */
#define PY_CUT_NASTY		50		/* Nasty cut */
#define PY_CUT_BAD			25		/* Bad cut */
#define PY_CUT_LIGHT		10		/* Light cut */

/*
 * Player fear constants 
 */
#define PY_FEAR_PANIC		75		/* Panicking */
#define PY_FEAR_TERROR		25		/* Terrified */
#define PY_FEAR_AFRAID		10		/* Afraid */

/*
 * Player confusion constants 
 */
#define PY_CONF_INSANE		200		/* Insane */
#define PY_CONF_BEFUDDLE	50		/* Befuddled */
#define PY_CONF_CONFUSE		25		/* Confused */

/*
 * Maximum number of "normal" pack slots, and the index of the "overflow"
 * slot, which can hold an item, but only temporarily, since it causes the
 * pack to "overflow", dropping the "last" item onto the ground.  Since this
 * value is used as an actual slot, it must be less than "INVEN_WIELD" (below).
 * Note that "INVEN_PACK" is probably hard-coded by its use in savefiles, and
 * by the fact that the screen can only show 23 items plus a one-line prompt.
 */
#define INVEN_PACK		23

/*
 * Indexes used for various "equipment" slots (hard-coded by savefiles, etc).
 */
#define INVEN_WIELD		24
#define INVEN_BOW		25
#define INVEN_LEFT		26
#define INVEN_RIGHT		27
#define INVEN_NECK		28
#define INVEN_LITE		29
#define INVEN_BODY		30
#define INVEN_OUTER		31
#define INVEN_ARM		32
#define INVEN_HEAD		33
#define INVEN_HANDS		34
#define INVEN_FEET		35
#define INVEN_MUSIC		36

/*
 * Total number of inventory slots (hard-coded).
 */
#define INVEN_MAX		37

/*
 * Actual number of inventory slots used 
 */
#define INVEN_TOTAL		((cp_ptr->flags & CF_MUSIC) ? INVEN_MAX : INVEN_MAX -1)

/*
 * Special 'Item' Identifier corresponding to all Squelched items.
 */
#define ALL_SQUELCHED	101

/*
 * A "stack" of items is limited to less than 100 items (hard-coded).
 * Rods and Talismans can only make small stacks
 */
#define MAX_STACK_SIZE		100
#define MAX_STACK_ROD		  5
#define MAX_STACK_TALIS		  6

/* 
 * Maximum number of objects allowed in a single dungeon grid. 
 * 
 * The main-screen has a minimum size of 24 rows, so we can always 
 * display 23 objects + 1 header line. 
 */ 
#define MAX_FLOOR_STACK		23 

/*
 * Indexes of the various "stats" (hard-coded by savefiles, etc).
 */
#define A_STR	0
#define A_INT	1
#define A_WIS	2
#define A_DEX	3
#define A_CON	4
#define A_CHR	5

/*
 * Total number of stats.
 */
#define A_MAX	6

/*
 * The highest meaningful stat value + 1 
 */
#define A_RANGE	31

/* 
 * The maximum "internal" stat
 */
#define A_CAP	20

/*
 * Macro for "current" stat values 
 */
#define p_stat(X) (p_ptr->stat_use[X] > (A_RANGE - 1) ? (A_RANGE - 1) : p_ptr->stat_use[X])

/* 
 * Indexes of the various "skills" (hard-coded by savefiles, etc)
 */
#define SK_DIS	0	/* Disarm */
#define SK_BYP	1	/* Bypass Trap */
#define SK_DEV	2	/* Magical device */
#define SK_SAV	3	/* Saving Throw */
#define SK_STL	4	/* Stealth */
#define SK_SRH	5	/* Search */
#define SK_FOS	6	/* Frequency of Searching */
#define SK_THN	7	/* To hit (melee) */
#define SK_THB	8	/* To hit (bow) */
#define SK_THT	9	/* To hit (throwing) */
#define SK_DIG	10	/* Digging */
#define SK_ALC	11	/* Alchemy */

/*
 * Total number of skills.
 */
#define SK_MAX	12

/* 
 * Indexes of the various "resistances" (hard-coded by savefiles, etc)
 */
#define RS_ACD	0	/* Acid */
#define RS_ELC	1	/* Electricty */
#define RS_FIR	2	/* Fire */
#define RS_CLD	3	/* Cold */
#define RS_WTR	4	/* Water */
#define RS_PSN	5	/* Poison */
#define RS_DIS	6	/* Disease */
#define RS_LIT	7	/* Light */
#define RS_DRK	8	/* Dark */
#define RS_SND	9	/* Sound */
#define RS_SHR	10	/* Shards */
#define RS_NEX	11	/* Nexus */
#define RS_NTH	12	/* Nether */
#define RS_CHS	13	/* Chaos */
#define RS_DSN	14	/* Disenchantment */
#define RS_TIM	15	/* Time */
#define RS_MNA	16	/* Mana */

/*
 * Total number of resistances
 */
#define RS_MAX	17

/*
 * Types of slays and brands 
 */
#define	SL_ANTI_EVIL		0	/* Damage mod vs. evil */
#define SL_ANTI_CHAOS		1	/* Damage mod vs. chaos */
#define	SL_ANTI_ANIMAL		2	/* Damage mod vs. animals */
#define	SL_ANTI_PLANT		3	/* Damage mod vs. plants */
#define	SL_ANTI_UNDEAD		4	/* Damage mod vs. undead */
#define	SL_ANTI_DEMON		5	/* Damage mod vs. demon */
#define	SL_ANTI_HUMANOID	6	/* Damage mod vs. humanoid */
#define	SL_ANTI_PERSON		7	/* Damage mod vs. person */
#define	SL_ANTI_FAERY		8	/* Damage mod vs. faery */
#define	SL_ANTI_DRAGON		9	/* Damage mod vs. dragon */
#define SL_ANTI_LYCANTHROPE	10	/* Damage mod vs. lycanthropes */
#define	SL_BRAND_ACID		11	/* Damage mod from acid */
#define	SL_BRAND_ELEC		12	/* Damage mod from electricty */
#define	SL_BRAND_FIRE		13	/* Damage mod from fire */
#define	SL_BRAND_COLD		14	/* Damage mod from cold */
#define	SL_BRAND_POIS		15	/* Damage mod from poison */
#define	SL_BRAND_LITE		16	/* Damage mod from lite */
#define	SL_BRAND_DARK		17	/* Damage mod from dark */

/*
 * Total number of resistances
 */
#define SL_MAX	18

/*
 * Player sex constants (hard-coded by save-files, arrays, etc)
 */
#define SEX_FEMALE		0
#define SEX_MALE		1

/*
 * Maximum number of player "sex" types (see "table.c", etc)
 */
#define SEX_MAX		2

/*
 * Special race constants, for use with special race abilities
 */
#define RACE_SPECIAL_NONE	0
#define RACE_SPECIAL_ANGEL	1
#define RACE_SPECIAL_DEMON	2

/*
 * How many different "levels" each race special goes through
 */

#define RACE_SPECIAL_LEVELS	11

/*
 * Maximum number of spells per spellbook
 */
#define MAX_BOOK_SPELLS	10

/* 
 * Maximum amount of sub-spells 
 */
#define MAX_SUB_SPELL	29
#define MAX_SUB_TYPE	9

/*** Screen Locations ***/

/*
 * Some screen locations for various display routines
 * Currently, row 8 and 15 are the only "blank" rows.
 * That leaves a "border" around the "stat" values.
 */

#define ROW_RACE		1
#define COL_RACE		0	/* <race name> */

#define ROW_CLASS		2
#define COL_CLASS		0	/* <class name> */

#define ROW_TITLE		3
#define COL_TITLE		0	/* <title> or <mode> */

#define ROW_LEVEL		4
#define COL_LEVEL		0	/* "LEVEL xxxxxx" */

#define ROW_EXP			5
#define COL_EXP			0	/* "NEXT xxxxxxx" */

#define ROW_GOLD		6
#define COL_GOLD		0	/* "AU xxxxxxxxx" */

#define ROW_EQUIPPY		7
#define COL_EQUIPPY		0	/* equippy chars */

#define ROW_STAT		8
#define COL_STAT		0	/* "xxx   xxxxxx" */

#define ROW_AC			15
#define COL_AC			0	/* "Cur AC xxxxx" */

#define ROW_HP			16
#define COL_HP			0	 /* "HP xxx/xxx" */

#define ROW_SP			17
#define COL_SP			0	/* "SP xxx/xxx" */

#define ROW_INFO		18
#define COL_INFO		0	/* Monster Health bar */

#define ROW_DISEASED	20
#define COL_DISEASED	0	/* "diseased" */

#define ROW_CUT			21
#define COL_CUT			0	/* <cut> */

#define ROW_STUN		22
#define COL_STUN		0	/* <stun> */

#define ROW_HUNGRY		(Term->hgt - 1)
#define COL_HUNGRY		0	/* "Weak" / "Hungry" / "Full" / "Gorged" */

#define ROW_BLIND		(Term->hgt - 1)
#define COL_BLIND		7	/* "Blind" */

#define ROW_CONFUSED	(Term->hgt - 1)
#define COL_CONFUSED	13	/* "Confused" */

#define ROW_AFRAID		(Term->hgt - 1)
#define COL_AFRAID		23	/* "Afraid" */

#define ROW_POISONED	(Term->hgt - 1)
#define COL_POISONED	30	/* "Poisoned" */

#define ROW_STATE		(Term->hgt - 1)
#define COL_STATE		39	/* <state> */

#define ROW_SPEED		(Term->hgt - 1)
#define COL_SPEED		49	/* "Slow (-NN)" or "Fast (+NN)" */

#define ROW_STUDY		(Term->hgt - 1)
#define COL_STUDY		59	/* "Study (NN)" */

#define ROW_DEPTH		(Term->hgt - 1)
#define COL_DEPTH		70	/* "Lev NNN" / "NNNN ft" */

#define ROW_MAP			1
#define COL_MAP			13

/*** Display modes for the character screen ***/

#define CSCREEN_MAIN	0	/* Display with skills/history */
#define CSCREEN_RESISTS	1	/* Display with resistances / equipment flags */
#define CSCREEN_ROLLER	2	/* Only the top left corner */
#define CSCREEN_DUMP	3	/* Special display with equipment bonuses for char dumps */
#define CSCREEN_BIRTH	4	/* Special display with class bonuses for birth */

/*** General index values ***/

/*
 * Quest types 
 */
#define QUEST_FIXED			1
#define QUEST_FIXED_U		2
#define QUEST_GUILD			3
#define QUEST_UNIQUE		4
#define QUEST_VAULT			5

/*
 * Quest reward types 
 */
#define REWARD_GOLD			1
#define REWARD_GOOD_ITEM	2
#define REWARD_GREAT_ITEM	3
#define REWARD_TAILORED		4

/*
 * Quest item name parts 
 */
#define QUEST_NAME_1	11
#define QUEST_NAME_2	14
#define QUEST_NAME_3	11

/*
 * Legal restrictions for "summon_specific()"
 */
#define SUMMON_ANIMALS		11
#define SUMMON_SPIDER		12
#define SUMMON_HOUND		13
#define SUMMON_FAERY		14
#define SUMMON_HYDRA		15
#define SUMMON_HORROR		16
#define SUMMON_DEMON		17
#define SUMMON_UNDEAD		18
#define SUMMON_DRAGON		19
/* xxx */
#define SUMMON_HI_DEMON		26
#define SUMMON_HI_UNDEAD	27
#define SUMMON_HI_DRAGON	28
/* xxx */
#define SUMMON_UNIQUE		31
#define SUMMON_KIN			32

/*
 * Spell types used by project(), and related functions.
 */
#define GF_ARROW			1
#define GF_MISSILE			2
#define GF_MANA				3
#define GF_HOLY_ORB			4
#define GF_LITE_WEAK		5
#define GF_DARK_WEAK		6
#define GF_WATER			7
#define GF_PLASMA			8
#define GF_ASTRAL			9
#define GF_ICE				10
#define GF_GRAVITY			11
#define GF_INERTIA			12
#define GF_FORCE			13
#define GF_TIME				14
#define GF_ACID				15
#define GF_ELEC				16
#define GF_FIRE				17
#define GF_COLD				18
#define GF_POIS				19
#define GF_DISEASE			20
#define GF_LITE				21
#define GF_DARK				22
#define GF_SOUND			23
#define GF_SHARD			24
#define GF_NEXUS			25
#define GF_NETHER			26
#define GF_CHAOS			27
#define GF_DISENCHANT		28
#define GF_KILL_WALL		29
#define GF_KILL_DOOR		30
#define GF_KILL_TRAP		31
#define GF_MAKE_WALL		32
#define GF_MAKE_DOOR		33
#define GF_MAKE_TRAP		34
#define GF_MAGIC_LOCK		35
#define GF_CALL_ALL			36
#define GF_AWAY_UNDEAD		37
#define GF_AWAY_EVIL		38
#define GF_AWAY_ALL			39
#define GF_SCARE_ALL		40
#define GF_DISP_PLANT		41
#define GF_DISP_ANIMAL		42
#define GF_DISP_UNDEAD		43
#define GF_DISP_DEMON		44
#define GF_DISP_EVIL		45
#define GF_DISP_ALL			46
#define GF_DISP_NON_EVIL	47
#define GF_CLONE_ALL		48
#define GF_POLY_ALL			49
#define GF_HEAL_ALL			50
#define GF_SPEED_ALL		51
#define GF_SLOW_ALL			52
#define GF_CONF_ALL			53
#define GF_SLEEP_ALL		54
#define GF_DRAIN_ALL		55
#define GF_BLIND_ALL		56
#define GF_CALM_ALL			57
#define GF_CALM_ANIMALS		58
#define GF_CALM_NON_EVIL	59
#define GF_CALM_NON_CHAOS	60
#define GF_PROBE			61

/*
 * Some constants for the monster "learn" code
 *
 * Most of these come from the "SM_xxx" flags
 */
#define DRS_FREE		1
#define DRS_MANA		2
#define DRS_BRAVE		3
#define DRS_NO_BLIND	4
#define DRS_NO_CONF		5
#define DRS_RES_ACID	6
#define DRS_RES_ELEC	7
#define DRS_RES_FIRE	8
#define DRS_RES_COLD	9
#define DRS_RES_POIS	10
#define DRS_RES_LITE	11
#define DRS_RES_DARK	12
#define DRS_RES_CONFU	13
#define DRS_RES_SOUND	14
#define DRS_RES_SHARD	15
#define DRS_RES_NEXUS	16
#define DRS_RES_NETHR	17
#define DRS_RES_CHAOS	18
#define DRS_RES_DISEN	19
#define DRS_RES_TIME	20
#define DRS_RES_DISEASE	21
#define DRS_RES_WATER	22
#define DRS_RES_MANA	23

/*
 * Constants for the player "learn" code
 */
#define LRN_PDEATH	1	/* Learn that the monster killed the player */
#define LRN_MDEATH	2	/* Learn that the player killed the monster */
#define LRN_FLAG1	3	/* Learn that the monster has a flag from r_ptr->flags1 */
#define LRN_FLAG2	4	/* Learn that the monster has a flag from r_ptr->flags2 */
#define LRN_FLAG3	5	/* Learn that the monster has a flag from r_ptr->flags3 */
#define LRN_FLAG4	6	/* Learn that the monster has a flag from r_ptr->flags4 */
#define LRN_S_FLAG1	7	/* Learn that the monster has a flag from r_ptr->s_flags1 */
#define LRN_S_FLAG2	8	/* Learn that the monster has a flag from r_ptr->s_flags2 */
#define LRN_S_FLAG3	9	/* Learn that the monster has a flag from r_ptr->s_flags3 */
#define LRN_BLOWS	10	/* Remember a blow */
#define LRN_CASTS	11	/* Remember a monster spell */
#define LRN_SIGHTS	12	/* Remember seeing the monster */
#define LRN_IGNORES	13	/* Remember that the monster ignored you */
#define LRN_WAKES	14	/* Remember that the monster woke up */
#define LRN_ITEM	15	/* Count item drops */
#define LRN_GOLD	16	/* Count gold drops */

/*
 * Number of keymap modes
 */
#define KEYMAP_MODES	2

/*
 * Mode for original keyset commands
 */
#define KEYMAP_MODE_ORIG	0

/*
 * Mode for roguelike keyset commands
 */
#define KEYMAP_MODE_ROGUE	1

/*** Feature Indexes (see "lib/edit/feature.txt") ***/

/* Nothing */
#define FEAT_NONE		0x00

/* Various */
#define FEAT_FLOOR		0x01
#define FEAT_LESS		0x02
#define FEAT_MORE		0x03
#define FEAT_OPEN		0x04
#define FEAT_BROKEN		0x05
#define FEAT_CLOSED		0x06
#define FEAT_CHEST		0x07
#define FEAT_QST_CHEST	0x08

/* Extra */
#define FEAT_SECRET		0x10
#define FEAT_RUBBLE		0x11

/* Seams */
#define FEAT_MAGMA		0x12
#define FEAT_QUARTZ		0x13
#define FEAT_MAGMA_H	0x14
#define FEAT_QUARTZ_H	0x15
#define FEAT_MAGMA_K	0x16
#define FEAT_QUARTZ_K	0x17

/* Walls */
#define FEAT_WALL_EXTRA	0x18
#define FEAT_WALL_INNER	0x19
#define FEAT_WALL_OUTER	0x1A
#define FEAT_WALL_SOLID	0x1B
#define FEAT_PERM_EXTRA	0x1C
#define FEAT_PERM_INNER	0x1D
#define FEAT_PERM_OUTER	0x1E
#define FEAT_PERM_SOLID	0x1F

/* Shops */
#define FEAT_SHOP_HEAD	0x20
#define FEAT_SHOP_TAIL	0x2F

/*** Trap indexes ***/

/* Trap indexes */
#define WG_TRAP_DOOR		1
#define WG_PIT_OPEN			2 
#define WG_PIT_SPIKED		3 
#define WG_PIT_POISON		4
#define WG_PIT_DAGGER		5
#define WG_RUNE_SUMMON		6
#define WG_RUNE_TELE		7
#define WG_RUNE_FORGET		8
#define WG_RUNE_CURSE1		9
#define WG_RUNE_CURSE2		10
#define WG_RUNE_SHRIEK		11
#define WG_SPOT_FIRE		12
#define WG_SPOT_ACID		13 
#define WG_SPOT_ELEC		14
#define WG_SPOT_DISEN		15
#define WG_DART_SLOW		16
#define WG_DART_LOSE_STR	17
#define WG_DART_LOSE_DEX	18
#define WG_DART_LOSE_CON	19
#define WG_GAS_BLIND		20
#define WG_GAS_CONF			21
#define WG_GAS_POISON		22
#define WG_GAS_SLEEP		23
#define WG_GAS_HALLUC		24
#define WG_BLADES			25
#define WG_BLADES_SPIN		26
#define WG_QUAKE			27
#define WG_ROCK				28
#define WG_GLYPH			29
#define WG_GLYPH_LESSER		30
#define WG_GLYPH_HOLY		31
#define WG_DOOR_LOCK		32
#define WG_MAGIC_LOCK		33
#define WG_ANTI_MONSTER		34
#define WG_CHEST_POISON		35
#define WG_CHEST_SUMMON		36
#define WG_CHEST_SHRIEK		37
#define WG_CHEST_CURSE		38
#define WG_CHEST_DISEN		39
#define WG_CHEST_LOSE_STR	40
#define WG_CHEST_LOSE_DEX	41
#define WG_CHEST_LOSE_CON	42
#define WG_CHEST_CONF		43
#define WG_CHEST_PARALYZE	44
#define WG_CHEST_HALLUC		45

/*** Artifact indexes (see "lib/edit/artifact.txt") ***/

/* "Special" Lites */
#define ART_GALADRIEL		1
#define ART_BEACON			2
#define ART_ELENDIL			3
#define ART_THRAIN			4
#define ART_WESTERNESSE		5

/* Lites */
#define ART_TIME_REDUCTION	6
#define ART_CHERADENINE		7

/* Amulets */
#define ART_CARLAMMAS		8
#define ART_INGWE			9
#define ART_HEARTSTONE		10
#define ART_DWARVES			11

/* Rings */
#define ART_CALFIN			12
#define ART_BARAHIR			13
#define ART_SATURN			14
#define ART_TULKAS			15
#define ART_NARYA			16
#define ART_NENYA			17
#define ART_VILYA			18
#define ART_POWER			19

/* Spell Books */
#define ART_NECRONOMICON	20
#define ART_CODEX           21

/* Instruments */
#define ART_PAN				22

/* Dragon Scale */
#define ART_TORTURESKIN		31
#define ART_RAZORBACK		32
#define ART_BLADETURNER		33

/* Body Armour */
#define ART_BRUTHA			34
#define ART_THALKETTOTH		35
#define ART_ARVEDUI			36
#define ART_WINTERWORN		37
#define ART_CASPANION		38
#define ART_BELEGENNON		39
#define ART_MORDENKAINEN	40
#define ART_CELEBORN		41
#define ART_HIMRING			42
#define ART_UNDERLIGHT		43
#define ART_SOULKEEPER		44

/* Shields */
#define ART_ELDER_FOREST	45
#define ART_THORIN			46
#define ART_ANARION			47
#define ART_FATEGUARD		48

/* Crowns and Helms */
#define ART_MORGOTH			54
#define ART_BERUTHIEL		55
#define ART_THRANDUIL		56
#define ART_THENGEL			57
#define ART_HAMMERHAND		58
#define ART_DOR				59
#define ART_HOLHENNETH		60
#define ART_GORLIM			61
#define ART_GONDOR			62
#define ART_ARCHMAGE		63
#define ART_NUMENOR			64
#define ART_FALLEN_STAR		65
#define ART_SHADOWS			66

/* Cloaks */
#define ART_COLLUIN			67
#define ART_HOLCOLLETH		68
#define ART_THINGOL			69
#define ART_THORONGIL		70
#define ART_COLANNON		71
#define ART_LUTHIEN			72
#define ART_TUOR			73
#define ART_SCARSHAWL		74
#define ART_MOONDANCER		75
#define ART_THOR			76
#define ART_ORODRETH		77

/* Gloves */
#define ART_RAAL			78
#define ART_PAURNIMMEN		79
#define ART_PAURAEGEN		80
#define ART_PAURNEN			81
#define ART_CAMBELEG		82
#define ART_CAMLOST			83
#define ART_FINGOLFIN		84
#define ART_GLADIATORS		85

/* Boots */
#define ART_LONG_JOURNEY	86
#define ART_DAL				87
#define ART_THROR			88
#define ART_SILENT			89
#define ART_FEANOR			90
#define ART_HERMES			91

/* Swords */
#define ART_MAEDHROS		92
#define ART_ANGRIST			93
#define ART_DETHANC			94
#define ART_RILIA			95
#define ART_IDROST			96
#define ART_ADROST			97
#define ART_CALRIS			98
#define ART_ARUNRUTH		99
#define ART_GLAMDRING		100
#define ART_ORCRIST			101
#define ART_GURTHANG		102
#define ART_ZARCUTHRA		103
#define ART_DIONURE			104
#define ART_MORMEGIL		105
#define ART_GONDRICAM		106
#define ART_CRISDURIAN		107
#define ART_AGLARANG		108
#define ART_RINGIL			109
#define ART_ANDURIL			110
#define ART_ANGUIREL		111
#define ART_ELVAGIL			112
#define ART_FORASGIL		113
#define ART_CARETH			114
#define ART_STING			115
#define ART_HARADEKKET		116
#define ART_DOOMCALLER		117
#define ART_TERRORBLADE		118
#define ART_GUARDIAN		119

/* Polearms */
#define ART_MELKOR			120
#define ART_THEODEN			121
#define ART_PAIN			122
#define ART_OSONDIR			123
#define ART_TIL				124
#define ART_AEGLOS			125
#define ART_OROME			126
#define ART_NIMLOTH			127
#define ART_EORLINGAS		128
#define ART_DURIN			129
#define ART_EONWE			130
#define ART_BALLI			131
#define ART_LOTHARANG		132
#define ART_LAWGIVER		133
#define ART_MUNDWINE		134
#define ART_BARUKKHELED		135
#define ART_WRATH			136
#define ART_ULMO			137
#define ART_POSEIDON		138
#define ART_AVAVIR			139
#define ART_REAPER			140

/* Blunt */
#define ART_GROND			141
#define ART_SKULLBASHER		142
#define ART_TOTILA			143
#define ART_THUNDERFIST		144
#define ART_BLOODSPIKE		145
#define ART_FIRESTAR		146
#define ART_TARATOL			147
#define ART_AULE			148
#define ART_NAR				149
#define ART_ERIRIL			150
#define ART_OLORIN			151
#define ART_DEATHWREAKER	152
#define ART_TURMIL			153
#define ART_GRAND_WIZARDRY	154
#define ART_GOTHMOG			155
#define ART_OIOND			156

/* Bows */
#define ART_HELLWIND		157
#define ART_AMROD			158
#define ART_AMRAS			159
#define ART_BELTHRONDING	160
#define ART_BARD			161
#define ART_CUBRAGOL		162
#define ART_SUNSTRIKE		163
#define ART_UMBAR			164

/* Digging Tools */
#define ART_GLOD			165
#define ART_NAIN			166

/*** Ego-Item indexes (see "lib/edit/ego_item.txt") ***/

/* Body Armor */
#define EGO_RESIST_ACID			1
#define EGO_RESIST_ELEC			2
#define EGO_RESIST_FIRE			3
#define EGO_RESIST_COLD			4
#define EGO_RESISTANCE			5
#define EGO_RESIST_WATER		6
#define EGO_HEALTH				7
#define EGO_ELVENKIND			8
#define EGO_VULNERABILITY1		9
/* Robes */
#define EGO_PERMANENCE			10
#define EGO_MANA				11
#define EGO_DWARVEN				12
#define EGO_BLACKROCK_STUD		13

/* Shields */
#define EGO_ENDURE_ACID			15
#define EGO_ENDURE_ELEC			16
#define EGO_ENDURE_FIRE			17
#define EGO_ENDURE_COLD			18
#define EGO_ENDURANCE			19
#define EGO_PRESERVATION		20
#define EGO_PERFECT_HEALTH		21
#define EGO_VULNERABILITY2		22
#define EGO_UMAGIC				23

/* Crowns and Helms */
#define EGO_INTELLIGENCE		24
#define EGO_WISDOM				25
#define EGO_BEAUTY				26
#define EGO_MAGI				27
#define EGO_MIGHT				28
#define EGO_LORDLINESS			29
#define EGO_SEEING				30
#define EGO_LITE				31
#define EGO_REGENERATION		32
#define EGO_TELEPATHY			33
#define EGO_SERENITY			34
#define EGO_NIGHT_AND_DAY		35
#define EGO_WIZARDRY			36
#define EGO_TELEPORTATION		37
#define EGO_DULLNESS			38
#define EGO_SICKLINESS			39

/* Cloaks */
#define EGO_PROTECTION			40
#define EGO_STEALTH				41
#define EGO_AMAN				42
#define EGO_INVISIBILITY		43
#define EGO_CLOAK_MAGI			44
#define EGO_KINGS				45
#define EGO_IRRITATION			46
#define EGO_ENVELOPING			47

/* Gloves */
#define EGO_FREE_ACTION			48
#define EGO_SLAYING				49
#define EGO_AGILITY				50
#define EGO_POWER				51
#define EGO_THIEVERY			52
#define EGO_SPELLCASTING		53
#define EGO_COMBAT				54
#define EGO_WEAKNESS			55
#define EGO_CLUMSINESS			56

/* Boots */
#define EGO_SLOW_DESCENT		57
#define EGO_QUIET				58
#define EGO_MOTION				59
#define EGO_SPEED				60
#define EGO_STABILITY			61
#define	EGO_BOOTS_ELVEN			62
#define EGO_SLOWNESS			63
#define EGO_NOISE				64

/* Weapons */
#define EGO_BRAND_ACID			65
#define EGO_STAR_BRAND_ACID		66
#define EGO_BRAND_ELEC			67
#define EGO_STAR_BRAND_ELEC		68	
#define EGO_BRAND_FIRE			69
#define EGO_STAR_BRAND_FIRE		70
#define EGO_BRAND_COLD			71
#define EGO_STAR_BRAND_COLD		72
#define EGO_BRAND_LITE			73
#define EGO_BRAND_SUN			74
#define EGO_BRAND_DARK			75
#define EGO_BRAND_MOON			76
#define EGO_BRAND_POIS			77
#define EGO_STAR_BRAND_POIS		78
#define EGO_SLAY_PLANT			79
#define EGO_KILL_PLANT			80
#define EGO_SLAY_ANIMAL			81
#define EGO_KILL_ANIMAL			82
#define EGO_SLAY_DEMON			83
#define EGO_KILL_DEMON			84
#define EGO_SLAY_HUMANOID		85
#define EGO_KILL_HUMANOID		86
#define EGO_SLAY_PERSON			87
#define EGO_KILL_PERSON			88
#define EGO_SLAY_UNDEAD			89
#define EGO_KILL_UNDEAD			90
#define EGO_SLAY_DRAGON			91
#define EGO_KILL_DRAGON			92
#define EGO_SLAY_FAERY			93
#define EGO_KILL_FAERY			94
#define EGO_SLAY_EVIL			95
#define EGO_SLAY_CHAOS			96
#define EGO_SLAY_NATURE			97
#define EGO_CARNAGE				98	
#define EGO_BLESS_BLADE			99	
#define EGO_HA					100
#define EGO_UNHOLY				101
#define EGO_DF					102
#define EGO_GONDOLIN			103
#define EGO_WEST				104
#define EGO_ATTACKS				105
#define EGO_FURY				106
#define EGO_DEVASTATION			107
#define EGO_TERROR				108
#define EGO_LAW					109
#define EGO_MORGUL				110
#define EGO_DIGGING				111
#define EGO_EARTHQUAKES			112
#define EGO_SHARPNESS			113
#define EGO_SWASHBUCKLING		114
#define EGO_HACKING				115	
#define EGO_CRUSHING			116		
#define EGO_BLUDGEONING			117
#define EGO_SCINTILLATING		118

/* Bows */
#define EGO_ACCURACY			119
#define EGO_DISTANCE			120
#define EGO_LOTHERIEN			121
#define EGO_HARADRIM			122
#define EGO_EXTRA_MIGHT			123
#define EGO_EXTRA_SHOTS			124
#define EGO_BOW_LITE			125
#define EGO_BOW_DARK			126
#define EGO_NAZGUL				127

/* Ammo */
#define EGO_HURT_PLANT			128
#define EGO_HURT_ANIMAL			129
#define EGO_HURT_EVIL			130
#define EGO_HURT_CHAOS			131
#define EGO_HURT_UNDEAD			132
#define EGO_HURT_DEMON			133
#define EGO_HURT_DRAGON			134
#define EGO_HURT_FAERY			135
#define EGO_HURT_HUMANOID		136
#define EGO_HURT_PERSON			137
#define EGO_HURT_HOLY_MIGHT		138
#define EGO_AMMO_ACID			139
#define EGO_AMMO_ELEC			140
#define EGO_AMMO_FIRE			141
#define EGO_AMMO_COLD			142
#define EGO_POISON				143
#define EGO_AMMO_LITE			144
#define EGO_AMMO_DARK			145
#define EGO_WOUNDING			146
#define EGO_WIND				147
#define EGO_BACKBITING			148

/* Special */
#define EGO_SHATTERED			149
#define EGO_BLASTED				150

/*** Object "tval" and "sval" codes ***/

/*
 * The values for the "tval" field of various objects.
 *
 * This value is the primary means by which items are sorted in the
 * player inventory, followed by "sval" and "cost".
 *
 * Note that a "BOW" with tval = 19 and sval S = 10*N+P takes a missile
 * weapon with tval = 16+N, and does (xP) damage when so combined.  This
 * fact is not actually used in the source, but it kind of interesting.
 *
 */

#define TV_QUEST		5	/* Quest Items */
#define TV_ARROW		15	/* Ammo for bows */
#define TV_BOW			20	/* Bows */
#define TV_BLUNT		21	/* Blunt Weapons */
#define TV_POLEARM		22	/* Axes and Pikes */
#define TV_SWORD		23	/* Edged Weapons */
#define TV_DIGGING		25	/* Shovels/Picks */
#define TV_BOOTS		30	/* Boots */
#define TV_GLOVES		31	/* Gloves */
#define TV_HEADGEAR		32	/* Helms/Crowns */
#define TV_SHIELD		34	/* Shields */
#define TV_CLOAK		35	/* Cloaks */
#define TV_BODY_ARMOR	36	/* Body Armor */
#define TV_DRAG_ARMOR	38	/* Dragon Scale Mail */
#define TV_LITE			39	/* Refueling Lites */
#define TV_LITE_SPECIAL	40	/* Artifact lights */
#define TV_AMULET		41	/* Amulets (including Specials) */
#define TV_RING			45	/* Rings (including Specials) */
#define TV_MUSIC		50  /* Musical Instrument */
#define TV_STAFF		55	/* Staves */
#define TV_WAND			65	/* Wands */
#define TV_TALISMAN		66	/* Talismans */
#define TV_ROD			67	/* Rods */
#define TV_SCROLL		70	/* Scrolls */
#define TV_POTION		75	/* Potions */
#define TV_POWDER		76	/* Powders */
#define TV_FLASK		77	/* Flasks of oil */
#define TV_FOOD			80	/* Food/Mushrooms */
#define TV_MAGIC_BOOK	90	/* Spellbooks */
#define TV_GOLD			100	/* Gold can only be picked up by players */

/* The "sval" codes for TV_ARROW */
#define SV_ARROW_NORMAL		0	
#define SV_ARROW_TOUGH		1	
#define SV_ARROW_FLIGHT		2
#define SV_ARROW_SILVER_TIP	3	
#define SV_ARROW_IRON_TIP	4	
#define SV_ARROW_BITER		5
#define SV_ARROW_STINGER	6	
#define SV_ARROW_SEEKER		7
#define SV_ARROW_BLACKROCK	8	
#define SV_ARROW_DREAD		9

/* The "sval" codes for TV_BOW */
#define SV_SHORT_BOW		0	
#define SV_HUNTING_BOW		1
#define SV_GRIPPLI_BOW		2
#define SV_LONG_BOW			3
#define SV_ELVEN_BOW		4
#define SV_WAR_BOW			5
#define SV_GREAT_BOW		6

/* The "sval" codes for TV_DIGGING */
#define SV_SHOVEL			0
#define SV_PICK				1
#define SV_MATTOCK			2

/* The "sval" values for TV_BLUNT */
#define SV_CLUB					0	
#define SV_BULLWHIP				1	
#define SV_TRUNCHEON			2	
#define SV_CHAINWHIP			3   
#define SV_GRAIN_FLAIL			4	
#define SV_SAP					5	
#define SV_CLAW_HAMMER			6	
#define SV_NUNCHAKU				7	
#define SV_BLACKJACK			8	
#define SV_CAT_O_NINE_TAILS		9	
#define SV_QUARTERSTAFF			10	
#define SV_MACE					11	
#define SV_CUDGEL				12	
#define SV_THREE_PIECE_STAFF	13	
#define SV_BALL_AND_CHAIN		14  
#define SV_WAR_HAMMER			15	
#define SV_MAUL					16  
#define SV_FLANGED_MACE			17	
#define SV_SPIKED_CLUB			18	
#define SV_BATTLESTAFF			19	
#define SV_FLAIL				20	
#define SV_MORNING_STAR			21	
#define SV_LEAD_FILLED_MACE		22	
#define SV_BACULUS				23	
#define SV_DOUBLE_BALL_FLAIL	24  
#define SV_LEAD_FILLED_CLUB		25	
#define SV_DIRE_FLAIL			26	
#define SV_BEC_DE_CORBIN		27	
#define SV_BEC_DE_FAUCON		28	
#define SV_GREAT_HAMMER			29  

#define SV_GROND				50	

/* The "sval" values for TV_POLEARM */
#define SV_HATCHET				0	
#define SV_SHORTSPEAR			1	
#define SV_CLEAVER				2	
#define SV_HAND_AXE				3	
#define SV_TRIDENT				4	
#define SV_SICKLE				5	
#define SV_TOMAHAWK				6	
#define SV_ANKUS				7	
#define SV_BILLHOOK				8   
#define SV_SWORDSPEAR			9	
#define SV_LONGSPEAR			10	
#define SV_AWL_PIKE				11	
#define SV_SCYTHE				12	
#define SV_PIKE					13	
#define SV_FORKED_SPEAR			14	
#define SV_VOLGUE				15	
#define SV_GUISARME				16	
#define SV_PARTISAN				17	
#define SV_CROWBILL				18	
#define SV_GRIM_SCYTHE			19	
#define SV_BROAD_AXE			20	
#define SV_GLAIVE				21	
#define SV_BEAKED_AXE			22	
#define SV_HALBERD				23	
#define SV_BATTLE_AXE			24	
#define SV_HACHE				25	
#define SV_LOCHBAR_AXE			26	
#define SV_POLLAXE				27	
#define SV_SPETUM				28	
#define SV_GREAT_AXE			29	

/* The "sval" codes for TV_SWORD */
#define SV_DAGGER				0	
#define SV_SHORT_SWORD			1	
#define SV_DIRK					2	
#define SV_RAPIER				3	
#define SV_MAIN_GAUCHE			4	
#define SV_GLADIUS				5	
#define SV_STILETTO				6	
#define SV_THINBLADE			7	
#define SV_SAEX					8	
#define SV_FLAMBERGE			9	
#define SV_BROAD_SWORD			10	
#define SV_LONG_SWORD			11	
#define SV_FALCHION				12	
#define SV_CUTLASS				13	
#define SV_SCIMITAR				14	
#define SV_SABRE				15	
#define SV_TULWAR				16  
#define SV_SPATHA				17	
#define SV_ESTOC				18	
#define SV_KATANA				19  
#define SV_BASTARD_SWORD		20	
#define SV_TWO_HANDED_SWORD		21	
#define SV_BACKSWORD			22	
#define SV_CLAYMORE				23	
#define SV_WAR_SWORD			24	
#define SV_ESPADON				25	
#define SV_FLAMMARD				26	
#define SV_GREAT_SWORD			27	
#define SV_ZWEIHANDER			28	
#define SV_EXECUTIONERS_SWORD	29	

/* The "sval" codes for TV_BOOTS */
#define SV_PAIR_OF_LEATHER_SANDALS		0
#define SV_PAIR_OF_SOFT_LEATHER_BOOTS	1
#define SV_PAIR_OF_HARD_LEATHER_BOOTS	2
#define SV_PAIR_OF_SPIKED_LEATHER_BOOTS	3
#define SV_PAIR_OF_METAL_SHOD_BOOTS		4

/* The "sval" codes for TV_GLOVES */
#define SV_SET_OF_SILK_GLOVES		0
#define SV_SET_OF_LEATHER_GLOVES	1
#define SV_SET_OF_GAUNTLETS			2
#define SV_SET_OF_CESTI				4

/* The "sval" codes for TV_HEADGEAR */
#define SV_HARD_LEATHER_CAP		1
#define SV_METAL_CAP			2
#define SV_IRON_HELM			3
#define SV_STEEL_HELM			4
#define SV_KNIGHTS_HELM			6
#define SV_IRON_CROWN			10
#define SV_SILVER_CROWN			11
#define SV_GOLDEN_CROWN			12
#define SV_JEWELED_CROWN		13
#define SV_MORGOTH				50

/* The "sval" codes for TV_SHIELD */
#define SV_WOODEN_SHIELD			1
#define SV_SMALL_LEATHER_SHIELD		2
#define SV_SMALL_METAL_SHIELD		3
#define SV_LARGE_LEATHER_SHIELD		4
#define SV_LARGE_METAL_SHIELD		5
#define SV_KITE_SHIELD				7
#define SV_SHIELD_OF_DEFLECTION		10

/* The "sval" codes for TV_CLOAK */
#define SV_CLOAK					1
#define SV_FUR_CLOAK				2
#define SV_ELVEN_CLOAK				3
#define SV_SHADOW_CLOAK				4

/* The "sval" codes for TV_BODY_ARMOR */
#define SV_CLOTH_SHIRT				 0
#define SV_ROBE						 1
#define SV_WIZARD_ROBE				 2	
#define SV_SOFT_LEATHER_ARMOR		 3
#define SV_HARD_LEATHER_ARMOR		 4
#define SV_LEATHER_SCALE_MAIL		 6
#define SV_METAL_SCALE_MAIL			 8
#define SV_CHAIN_MAIL				10
#define SV_AUGMENTED_CHAIN_MAIL		11
#define SV_DOUBLE_CHAIN_MAIL		12
#define SV_BAR_CHAIN_MAIL			13
#define SV_METAL_BRIGANDINE_ARMOUR	14
#define SV_PARTIAL_PLATE_ARMOUR		17
#define SV_METAL_LAMELLAR_ARMOUR	18
#define SV_FULL_PLATE_ARMOUR		19
#define SV_RIBBED_PLATE_ARMOUR		20

/* The "sval" codes for TV_DRAG_ARMOR */
#define SV_DRAGON_BLACK			 1
#define SV_DRAGON_BLUE			 2
#define SV_DRAGON_WHITE			 3
#define SV_DRAGON_RED			 4
#define SV_DRAGON_GREEN			 5
#define SV_DRAGON_GOLD			 6
#define SV_DRAGON_SILVER		 7
#define SV_DRAGON_MULTIHUED		 8
#define SV_DRAGON_SHADOW		 9
#define SV_DRAGON_SPIRIT		10
#define SV_DRAGON_ETHEREAL		11
#define SV_DRAGON_CHAOS			12
#define SV_DRAGON_TIME			13
#define SV_DRAGON_POWER			14

/* The sval codes for TV_LITE */
#define SV_TORCH				0
#define SV_LANTERN				1
/* Magic Lanterns start here */
#define SV_LANTERN_SHADOWS		2
#define SV_LANTERN_INFRAVISION	3
#define SV_LANTERN_BRIGHTNESS	4
#define SV_LANTERN_SIGHT		5
#define SV_LANTERN_FEARLESS		6
#define SV_LANTERN_INT			7
#define SV_LANTERN_WIS			8
#define SV_LANTERN_TELEPATHY	9
/* Artifact Lanterns */
#define SV_LANTERN_TIME			10
#define SV_LANTERN_CHERADENINE	11

/* "Sval" limit -- maximum amount of rechargable lights */
#define SV_LANTERN_MAX			12
#define SV_LANTERN_FIRST_MAGIC	2

/* The sval codes for TV_LITE_SPECIAL */
#define SV_LITE_GALADRIEL	1
#define SV_LITE_BEACON		2
#define SV_LITE_ELENDIL		3
#define SV_LITE_THRAIN		4
#define SV_LITE_PALANTIR	5

/* The "sval" codes for TV_AMULET */
#define SV_AMULET_DOOM			 0
#define SV_AMULET_TELEPORT		 1
#define SV_AMULET_UNMAGIC		 2
#define SV_AMULET_FORTUNE		 3
#define SV_AMULET_SLOW_DIGEST	 4
#define SV_AMULET_HOLD_LIFE		 5
#define SV_AMULET_RESIST_ACID	 6
#define SV_AMULET_RESIST_WATER	 7
#define SV_AMULET_RESIST_TIME	 8
#define SV_AMULET_RESISTANCE	 9
#define SV_AMULET_SEARCHING		10
#define SV_AMULET_INFRAVISION	11
#define SV_AMULET_BRIGHTNESS	12
#define SV_AMULET_WISDOM		13
#define SV_AMULET_INTELLIGENCE	14
#define SV_AMULET_CHARISMA		15
#define SV_AMULET_POWER			16
#define SV_AMULET_THE_MAGI		17
#define SV_AMULET_SUSTENANCE	18
#define SV_AMULET_INVISIBILITY	19
/* Artifact amulets */
#define SV_AMULET_CARLAMMAS		20
#define SV_AMULET_INGWE			21
#define SV_AMULET_HEARTSTONE	22
#define SV_AMULET_DWARVES		23

/* "Sval" limit -- maximum amount of amulets */
#define SV_AMULET_MAX			24

/* The sval codes for TV_RING */
#define SV_RING_WOE					 0
#define SV_RING_AGGRAVATION			 1
#define SV_RING_TELEPORTATION		 2
#define SV_RING_DRAIN_LIFE			 3
#define SV_RING_FEATHER_FALL		 4
#define SV_RING_SUSTAIN_STR_CHR		 5
#define SV_RING_SUSTAIN_CON_DEX		 6
#define SV_RING_SUSTAIN_INT_WIS		 7
#define SV_RING_SUSTAIN_ALL			 8
#define SV_RING_RESIST_FIRE_COLD	 9
#define SV_RING_RESIST_ACID_ELEC	10
#define SV_RING_FREE_ACTION			11
#define SV_RING_BRAVERY				12
#define SV_RING_RESIST_CONFU		13
#define SV_RING_RESIST_POIS			14
#define SV_RING_RESIST_DISEASE		15
#define SV_RING_RESIST_DISEN		16
#define SV_RING_PROTECTION			17
#define SV_RING_LIGHTNING			18
#define SV_RING_ACID				19
#define SV_RING_FLAMES				20
#define SV_RING_ICE					21
#define SV_RING_SEE_INVIS			22
#define SV_RING_SEARCHING			23
#define SV_RING_STR					24
#define SV_RING_DEX					25
#define SV_RING_CON					26
#define SV_RING_GREATNESS			27
#define SV_RING_ACCURACY			28
/* xxx */
/* xxx */
#define SV_RING_SPEED				31
#define SV_RING_MANA				32
#define SV_RING_HEALTH				33
/* Artifact rings */
#define SV_RING_CALFIN				34
#define SV_RING_BARAHIR				35
#define SV_RING_SATURN				36
#define SV_RING_TULKAS				37
#define SV_RING_NARYA				38
#define SV_RING_NENYA				39
#define SV_RING_VILYA				40
#define SV_RING_POWER				41

/* "Sval" limit -- maximum amount of rings */
#define SV_RING_MAX					43

/* The "sval" codes for TV_MUSIC */
#define SV_MUSIC_LYRE			0
#define SV_MUSIC_HORN			1
#define SV_MUSIC_FLUTE			2
#define SV_MUSIC_LUTE			3
#define SV_MUSIC_DRUM			4
#define SV_MUSIC_HARP			5
#define SV_MUSIC_PIPE_PAN		6

/* "Sval" limit - maximum amount of musical instruments */
#define SV_MUSIC_MAX			7

/* The "sval" codes for TV_STAFF */
#define SV_STAFF_DARKNESS		 0
#define SV_STAFF_SLOWNESS		 1
#define SV_STAFF_HASTE_MONSTERS	 2
#define SV_STAFF_SUMMONING		 3
#define SV_STAFF_TELEPORTATION	 4
#define SV_STAFF_IDENTIFY		 5
#define SV_STAFF_REMOVE_CURSE	 6
#define SV_STAFF_STARLITE		 7
#define SV_STAFF_LITE			 8
#define SV_STAFF_MAPPING		 9
#define SV_STAFF_DETECT_GOLD	10
#define SV_STAFF_DETECT_ITEM	11
#define SV_STAFF_DETECT_TRAP	12
#define SV_STAFF_DETECT_DOOR	13
#define SV_STAFF_DETECT_INVIS	14
#define SV_STAFF_DETECT_EVIL	15
#define SV_STAFF_CURE_LIGHT		16
#define SV_STAFF_CURING			17
#define SV_STAFF_HEALING		18
#define SV_STAFF_THE_MAGI		19
#define SV_STAFF_SLEEP_MONSTERS	20
#define SV_STAFF_SLOW_MONSTERS	21
#define SV_STAFF_SPEED			22
#define SV_STAFF_PROBING		23
#define SV_STAFF_DISPEL_EVIL	24
#define SV_STAFF_POWER			25
#define SV_STAFF_HOLINESS		26
#define SV_STAFF_GENOCIDE		27
#define SV_STAFF_EARTHQUAKES	28
#define SV_STAFF_DESTRUCTION	29
#define SV_STAFF_BARRIERS		30

/* The "sval" codes for TV_WAND */
#define SV_WAND_HEAL_MONSTER	 0
#define SV_WAND_HASTE_MONSTER	 1
#define SV_WAND_CLONE_MONSTER	 2
#define SV_WAND_TELEPORT_AWAY	 3
#define SV_WAND_CALL_MONSTER	 4
#define SV_WAND_TRAP_DOOR_DEST	 5
#define SV_WAND_STONE_TO_MUD	 6
#define SV_WAND_LITE			 7
#define SV_WAND_SLEEP_MONSTER	 8
#define SV_WAND_SLOW_MONSTER	 9
#define SV_WAND_CONFUSE_MONSTER	10
#define SV_WAND_FEAR_MONSTER	11
#define SV_WAND_CALM_MONSTER	12
#define SV_WAND_BLIND_MONSTER	13
#define SV_WAND_DRAIN_LIFE		14
#define SV_WAND_POLYMORPH		15
#define SV_WAND_STINKING_CLOUD	16
#define SV_WAND_MAGIC_MISSILE	17
#define SV_WAND_ACID_BOLT		18
#define SV_WAND_ELEC_BOLT		19
#define SV_WAND_FIRE_BOLT		20
#define SV_WAND_COLD_BOLT		21
#define SV_WAND_ANNIHILATION	22
#define SV_WAND_DRAGON_FIRE		23
#define SV_WAND_DRAGON_COLD		24
#define SV_WAND_DRAGON_BREATH	25
#define SV_WAND_WONDER			26

/* The "sval" codes for TV_TALISMAN */
#define SV_TALIS_TELEPORT_AWAY	 0
#define SV_TALIS_DISARMING		 1
#define SV_TALIS_STONE_TO_MUD	 2
#define SV_TALIS_LITE			 3
#define SV_TALIS_DRAIN_LIFE		 4
#define SV_TALIS_POLYMORPH		 5
#define SV_TALIS_ACID_BOLT		 6
#define SV_TALIS_ELEC_BOLT		 7
#define SV_TALIS_FIRE_BOLT		 8
#define SV_TALIS_COLD_BOLT		 9
#define SV_TALIS_FORCE_BOLT		10
#define SV_TALIS_R_ACID_BOLT	11
#define SV_TALIS_R_ELEC_BOLT	12
#define SV_TALIS_R_FIRE_BOLT	13
#define SV_TALIS_R_COLD_BOLT	14
#define SV_TALIS_ACID_BALL		15
#define SV_TALIS_ELEC_BALL		16
#define SV_TALIS_FIRE_BALL		17
#define SV_TALIS_COLD_BALL		18

/* "Sval" limit -- maximum amount of talismans */
#define SV_TALIS_MAX			19

/* The "sval" codes for TV_ROD */
#define SV_ROD_SUMMON			 0
#define SV_ROD_DARKNESS			 1
#define SV_ROD_DETECT_TRAP		 2
#define SV_ROD_DETECT_DOOR		 3
#define SV_ROD_IDENTIFY			 4
#define SV_ROD_RECALL			 5
#define SV_ROD_ILLUMINATION		 6
#define SV_ROD_MAPPING			 7
#define SV_ROD_DETECTION		 8
#define SV_ROD_PROBING			 9
#define SV_ROD_CURING			10
#define SV_ROD_SATISFY_HUNGER	11
#define SV_ROD_HEALING			12
#define SV_ROD_RESTORATION		13
#define SV_ROD_SPEED			14

/* The "sval" codes for TV_SCROLL */
#define SV_SCROLL_DARKNESS				 0
#define SV_SCROLL_AGGRAVATE_MONSTER		 1
#define SV_SCROLL_CURSE_EQUIP			 2
#define SV_SCROLL_STAR_CURSE_EQUIP		 3
#define SV_SCROLL_SUMMON_MONSTER		 4
#define SV_SCROLL_SUMMON_UNDEAD			 5
#define SV_SCROLL_SUMMON_DRAGON			 6
#define SV_SCROLL_TRAP_CREATION			 7
#define SV_SCROLL_TAINT					 8
#define SV_SCROLL_PHASE_DOOR			 9 
#define SV_SCROLL_TELEPORT				10
#define SV_SCROLL_TELEPORT_LEVEL		11
#define SV_SCROLL_WORD_OF_RECALL		12
#define SV_SCROLL_ALTER_REALITY			13
#define SV_SCROLL_IDENTIFY				14
#define SV_SCROLL_STAR_IDENTIFY			15
#define SV_SCROLL_REMOVE_CURSE			16
#define SV_SCROLL_STAR_REMOVE_CURSE		17
#define SV_SCROLL_ENCHANT_ARMOR			18
#define SV_SCROLL_ENCHANT_WEAPON		19
#define SV_SCROLL_STAR_ENCHANT_ARMOR	20
#define SV_SCROLL_STAR_ENCHANT_WEAPON	21
/* xxx */
#define SV_SCROLL_RECHARGING			23
#define SV_SCROLL_ELEMENTAL_BRAND		24
#define SV_SCROLL_LIGHT					25
#define SV_SCROLL_MAPPING				26
#define SV_SCROLL_DETECT_GOLD			27
#define SV_SCROLL_DETECT_ITEM			28
#define SV_SCROLL_DETECT_TRAP			29
#define SV_SCROLL_DETECT_DOOR			30
#define SV_SCROLL_DETECT_INVIS			31
#define SV_SCROLL_ABSORB_HIT			32
#define SV_SCROLL_BLESSING				33
#define SV_SCROLL_HOLY_CHANT			34
#define SV_SCROLL_HOLY_PRAYER			35
/* xxx */
#define SV_SCROLL_PROTECTION_FROM_EVIL	37
#define SV_SCROLL_RUNE_OF_PROTECTION	38
#define SV_SCROLL_TRAP_DOOR_DESTRUCTION	39
/* xxx */
#define SV_SCROLL_STAR_DESTRUCTION		41
#define SV_SCROLL_DISPEL_UNDEAD			42
/* xxx */
#define SV_SCROLL_GENOCIDE				44
#define SV_SCROLL_MASS_GENOCIDE			45
#define SV_SCROLL_ACQUIREMENT			46
#define SV_SCROLL_STAR_ACQUIREMENT		47

/* "Sval" limit -- maximum amount of scrolls */
#define SV_SCROLL_MAX					48

/* The "sval" codes for TV_POTION */
#define SV_POTION_WATER					 0
#define SV_POTION_APPLE_JUICE			 1
#define SV_POTION_SLIME_MOLD			 2
/* xxx (fixed color) */	
#define SV_POTION_SLOWNESS				 4
#define SV_POTION_SALT_WATER			 5
#define SV_POTION_POISON				 6
#define SV_POTION_BLINDNESS				 7
#define SV_POTION_DISEASE				 8
#define SV_POTION_CONFUSION				 9
#define SV_POTION_SLEEP					10
#define SV_POTION_LOSE_EXP				11
#define SV_POTION_DEFORM				12
#define SV_POTION_RUINATION				13
#define SV_POTION_DEC_STR				14
#define SV_POTION_DEC_INT				15
#define SV_POTION_DEC_WIS				16
#define SV_POTION_DEC_DEX				17
#define SV_POTION_DEC_CON				18
#define SV_POTION_DEC_CHR				19
#define SV_POTION_DETONATIONS			20
#define SV_POTION_DEATH					21
#define SV_POTION_RISK					22
#define SV_POTION_STEALTH				23
#define SV_POTION_INFRAVISION			24
#define SV_POTION_DETECT_INVIS			25
#define SV_POTION_SPEED					26
#define SV_POTION_SATISFY_HUNGER		27
#define SV_POTION_BOLDNESS				28
#define SV_POTION_HEROISM				29
#define SV_POTION_BERSERK_STRENGTH		30
#define SV_POTION_CURE_LIGHT			31
#define SV_POTION_CURE_SERIOUS			32
#define SV_POTION_CURE_CRITICAL			33
#define SV_POTION_HEALING				34
#define SV_POTION_STAR_HEALING			35
#define SV_POTION_LIFE					36
#define SV_POTION_CURE_POISON			38
#define SV_POTION_CURE_DISEASE			39
#define SV_POTION_RESTORE_MANA			40
#define SV_POTION_RESTORE_EXP			41
#define SV_POTION_RES_STR				42
#define SV_POTION_RES_INT				43
#define SV_POTION_RES_WIS				44
#define SV_POTION_RES_DEX				45
#define SV_POTION_RES_CON				46
#define SV_POTION_RES_CHR				47
#define SV_POTION_INC_STR				48
#define SV_POTION_INC_INT				49
#define SV_POTION_INC_WIS				50
#define SV_POTION_INC_DEX				51
#define SV_POTION_INC_CON				52
#define SV_POTION_INC_CHR				53
#define SV_POTION_AUGMENTATION			54
#define SV_POTION_ENLIGHTENMENT			55
#define SV_POTION_STAR_ENLIGHTENMENT	56
#define SV_POTION_EXPERIENCE			58
#define SV_POTION_RESIST_HEAT			59
#define SV_POTION_RESIST_COLD			60
#define SV_POTION_RESISTANCE			61
#define SV_POTION_STAR_RESISTANCE		62
#define SV_POTION_INVISIBILITY			63

/* "Sval" limit -- maximum amount of potions */
#define SV_POTION_MAX					64

/* The "sval" codes for TV_POWDER */
#define SV_POWDER_HASTE			 0
#define SV_POWDER_HEAL			 1
#define SV_POWDER_CONFUSE		 2
#define SV_POWDER_STARTLE		 3
#define SV_POWDER_SLEEP			 4
#define SV_POWDER_SLOW			 5
#define SV_POWDER_CALM			 6
#define SV_POWDER_POLYMORPH		 7
#define SV_POWDER_FLASH			 8
#define SV_POWDER_DARKNESS		 9
#define SV_POWDER_POISON		10
#define SV_POWDER_FIRE1			11
#define SV_POWDER_COLD1			12
#define SV_POWDER_FIRE2			13
#define SV_POWDER_COLD2			14
#define SV_POWDER_ENERGY		15

/* "Sval" limit -- maximum amount of powders */
#define SV_POWDER_MAX			16

/* The sval codes for TV_FLASK */
#define SV_FLASK_LANTERN	0
#define SV_FLASK_BURNING	1

/* The "sval" codes for TV_FOOD */
#define SV_FOOD_POISON			 0
#define SV_FOOD_BLINDNESS		 1
#define SV_FOOD_PARANOIA		 2
#define SV_FOOD_CONFUSION		 3
#define SV_FOOD_HALLUCINATION	 4
#define SV_FOOD_PARALYSIS		 5
#define SV_FOOD_NAIVITY			 6
#define SV_FOOD_STUPIDITY		 7
#define SV_FOOD_AMNESIA			 8
#define SV_FOOD_DISEASE			 9
#define SV_FOOD_CURE_POISON		10
#define SV_FOOD_CURE_DISEASE	11
#define SV_FOOD_CURE_CONFUSION	12
#define SV_FOOD_CURE_LIGHT		13
#define SV_FOOD_CURE_SERIOUS	14
#define SV_FOOD_STONE_SKIN		15
#define SV_FOOD_CLEAR_MIND		16
#define SV_FOOD_RESTORE_STR		17
#define SV_FOOD_RESTORE_CON		18
#define SV_FOOD_RESTORE_DEX		19
#define SV_FOOD_RESTORING		20
/* regular food */
#define SV_FOOD_APPLE			30
#define SV_FOOD_JERKY			31
#define SV_FOOD_RATION			32
#define SV_FOOD_SLIME_MOLD		33
#define SV_FOOD_WAYBREAD		34
#define SV_FOOD_AMBROSIA		35
#define SV_FOOD_MYSTERY_MEAT	36

/* "Sval" limits -- first "normal" food, number of mushrooms */
#define SV_FOOD_MIN_FOOD		30
#define SV_FOOD_MAX_SHROOM		21

/* The "sval" codes for TV_MAGIC_BOOK */
#define SV_BOOK_MAGE1			 0
#define SV_BOOK_MAGE2			 1
#define SV_BOOK_MAGE3			 2
#define SV_BOOK_MAGE4			 3
#define SV_BOOK_MAGE5			 4
#define SV_BOOK_MAGE6			 5
#define SV_BOOK_MAGE7			 6
#define SV_BOOK_MAGE8			 7
#define SV_BOOK_MAGE9			 8
#define SV_BOOK_RANGER			 9
#define SV_BOOK_PRIEST1			10
#define SV_BOOK_PRIEST2			11
#define SV_BOOK_PRIEST3			12
#define SV_BOOK_PRIEST4			13
#define SV_BOOK_PRIEST5			14
#define SV_BOOK_PRIEST6			15
#define SV_BOOK_PRIEST7			16
#define SV_BOOK_PRIEST8			17
#define SV_BOOK_PRIEST9			18
/* xxx */
#define SV_BOOK_MYSTIC1			20
#define SV_BOOK_MYSTIC2			21
#define SV_BOOK_NECRONOMICON	22
#define SV_BOOK_CODEX			23

/* "Sval" limit - maximum amount of spellbooks */
#define SV_BOOK_MAX				24

/* 
 * Special "k_info" hard coded values - 
 */
#define MAX_GOLD		18	/* Number of "gold" entries */

/*
 * Item Materials
 */
#define MATERIAL_NONE			0
#define MATERIAL_FOOD			1
#define MATERIAL_PAPER			2
#define MATERIAL_LIQUID			3
#define MATERIAL_POWDER			4
#define MATERIAL_CLOTH			5
#define MATERIAL_S_WOOD			6
#define MATERIAL_H_WOOD			7
#define MATERIAL_BONE			8
#define MATERIAL_STONE			9
#define MATERIAL_GEM			10
#define MATERIAL_LEATHER		11
#define MATERIAL_STEEL			12
#define MATERIAL_METAL_CHARGED	13
#define MATERIAL_BLACKROCK		14
#define MATERIAL_DRAGON			15
#define MATERIAL_EXOTIC			16
#define MATERIAL_METAL_OTHER	17

/* Object origins */
#define ORIGIN_NONE			0
#define ORIGIN_BIRTH		1
#define ORIGIN_STORE		2
#define ORIGIN_FLOOR		3
#define ORIGIN_DROP_UNKNOWN	4
#define ORIGIN_DROP_KNOWN	5
#define ORIGIN_REWARD		6
#define ORIGIN_ACQUIRE		7
#define ORIGIN_MORGOTH		8
#define ORIGIN_CHEAT		9
#define ORIGIN_MIXED		10
#define ORIGIN_CHEST		11

/* Prefix Flags */
#define PXF_SHOP		0x0001L	/* Can be created in shops */ 
#define PXF_GOOD		0x0002L	/* Allowed on good items */

/*** Monster blow constants ***/

/*
 * New monster blow methods
 */
#define RBM_HIT		1
#define RBM_TOUCH	2
#define RBM_PUNCH	3
#define RBM_KICK	4
#define RBM_GRAB	5
#define RBM_CLAW	6
#define RBM_BITE	7
#define RBM_STING	8
#define RBM_KISS	9
#define RBM_BUTT	10
#define RBM_CRUSH	11
#define RBM_ENGULF	12
#define RBM_CRAWL	13
#define RBM_DROOL	14
#define RBM_SPIT	15
#define RBM_GAZE	16
#define RBM_WAIL	17
#define RBM_SPORE	18
#define RBM_BEG		19
#define RBM_INSULT	20
#define RBM_MOAN	21

#define RBM_MAX		22

/*
 * Monster blow effects
 */
#define RBE_HURT		 1
#define RBE_POISON		 2
#define RBE_UN_BONUS	 3
#define RBE_UN_POWER	 4
#define RBE_EAT_GOLD	 5
#define RBE_EAT_ITEM	 6
#define RBE_EAT_FOOD	 7
#define RBE_EAT_LITE	 8
#define RBE_ACID		 9
#define RBE_ELEC		10
#define RBE_FIRE		11
#define RBE_COLD		12
#define RBE_BLIND		13
#define RBE_CONFUSE		14
#define RBE_TERRIFY		15
#define RBE_PARALYZE	16
#define RBE_LOSE_STR	17
#define RBE_LOSE_INT	18
#define RBE_LOSE_WIS	19
#define RBE_LOSE_DEX	20
#define RBE_LOSE_CON	21
#define RBE_LOSE_CHR	22
#define RBE_LOSE_ALL	23
#define RBE_SHATTER		24
#define RBE_EXP_1		25
#define RBE_EXP_2		26
#define RBE_EXP_3		27
#define RBE_EXP_4		28
#define RBE_DISEASE		29
#define RBE_RUST		30
#define RBE_ROT			31
#define RBE_HALLU		32
#define RBE_TAINT		33

#define RBE_MAX			34

/*** Function flags ***/

/*
 * Bit flags for the "project()" function
 *
 *   JUMP: Jump directly to the target location (this is a hack)
 *   BEAM: Work as a beam weapon (affect every grid passed through)
 *   THRU: Continue "through" the target (used for "bolts"/"beams")
 *   STOP: Stop as soon as we hit a monster (used for "bolts")
 *   GRID: Affect each grid in the "blast area" in some way
 *   ITEM: Affect each object in the "blast area" in some way
 *   KILL: Affect each monster in the "blast area" in some way
 *   HIDE: Hack -- disable "visual" feedback from projection
 */
#define PROJECT_JUMP	0x01
#define PROJECT_BEAM	0x02
#define PROJECT_THRU	0x04
#define PROJECT_STOP	0x08
#define PROJECT_GRID	0x10
#define PROJECT_ITEM	0x20
#define PROJECT_KILL	0x40
#define PROJECT_HIDE	0x80

/*
 * Bit flags for spellbooks
 */
#define SBF_MYSTIC		0x01
#define SBF_MAGIC		0x02
#define SBF_PRAYER		0x04
#define SBF_CODEX		0x08
#define SBF_NECRONOM	0x10
#define SBF_GOOD		0x20
#define SBF_ARTIFACT	0x40

#define SBF_TYPE_MASK \
			(SBF_MYSTIC | SBF_MAGIC | SBF_PRAYER | SBF_CODEX | SBF_NECRONOM)

/*
 * Bit flags for the "enchant()" function
 */
#define ENCH_TOHIT	0x01
#define ENCH_TOAC	0x02

/*
 * Bit flags for the "target_set" function
 *
 *	KILL: Target monsters
 *	LOOK: Describe grid fully
 *	XTRA: Currently unused flag
 *	GRID: Select from all grids
 */
#define TARGET_KILL		0x01
#define TARGET_LOOK		0x02
#define TARGET_XTRA		0x04
#define TARGET_FREE		0x08

/*
 * Bit flags for the "monster_desc" function
 */
#define MDESC_OBJE		0x01	/* Objective (or Reflexive) */
#define MDESC_POSS		0x02	/* Possessive (or Reflexive) */
#define MDESC_IND1		0x04	/* Indefinites for hidden monsters */
#define MDESC_IND2		0x08	/* Indefinites for visible monsters */
#define MDESC_PRO1		0x10	/* Pronominalize hidden monsters */
#define MDESC_PRO2		0x20	/* Pronominalize visible monsters */
#define MDESC_HIDE		0x40	/* Assume the monster is hidden */
#define MDESC_SHOW		0x80	/* Assume the monster is visible */

/*
 * Bit flags for the "get_item" function
 */
#define USE_EQUIP		0x01	/* Allow equip items */
#define USE_INVEN		0x02	/* Allow inven items */
#define USE_FLOOR		0x04	/* Allow floor items */
#define CAN_SQUELCH		0x10	/* Allow selection of all squelched items */
#define CAPITAL_HACK	0x20	/* Allow different behavior in case of capitals */

/*** Player flags ***/

/*
 * Bit flags for the "p_ptr->notice" variable
 */
#define PN_COMBINE		0x00000001L	/* Combine the pack */
#define PN_REORDER		0x00000002L	/* Reorder the pack */
/* xxx */
#define PN_SQUELCH		0x00000100L /* Squelch items */
/* xxx (many) */

/*
 * Bit flags for the "p_ptr->update" variable
 */
#define PU_BONUS		0x00000001L	/* Calculate bonuses */
#define PU_TORCH		0x00000002L	/* Calculate torch radius */
/* xxx (many) */
#define PU_HP			0x00000010L	/* Calculate chp and mhp */
#define PU_MANA			0x00000020L	/* Calculate csp and msp */
#define PU_SPELLS		0x00000040L	/* Calculate spells */
/* xxx (many) */
#define PU_FORGET_VIEW	0x00010000L	/* Forget field of view */
#define PU_UPDATE_VIEW	0x00020000L	/* Update field of view */
/* xxx (many) */
#define PU_FORGET_FLOW	0x00100000L	/* Forget flow data */
#define PU_UPDATE_FLOW	0x00200000L	/* Update flow data */
/* xxx (many) */
#define PU_MONSTERS		0x10000000L	/* Update monsters */
#define PU_DISTANCE		0x20000000L	/* Update distances */
#define PU_ROOM_INFO	0x40000000L	/* Display room description */
#define PU_PANEL		0x80000000L	/* Update panel */

/*
 * Bit flags for the "p_ptr->redraw" variable
 */
#define PR_MISC			0x00000001L	/* Display Race/Class */
#define PR_TITLE		0x00000002L	/* Display Title */
#define PR_LEV			0x00000004L	/* Display Level */
#define PR_EXP			0x00000008L	/* Display Experience */
#define PR_STATS		0x00000010L	/* Display Stats */
#define PR_ARMOR		0x00000020L	/* Display Armor */
#define PR_HP			0x00000040L	/* Display Hitpoints */
#define PR_MANA			0x00000080L	/* Display Mana */
#define PR_GOLD			0x00000100L	/* Display Gold */
#define PR_DEPTH		0x00000200L	/* Display Depth */
#define PR_EQUIPPY		0x00000400L	/* Display equippy chars */
#define PR_HEALTH		0x00000800L	/* Display Health Bar */
#define PR_CUT			0x00001000L	/* Display Extra (Cut) */
#define PR_STUN			0x00002000L	/* Display Extra (Stun) */
#define PR_HUNGER		0x00004000L	/* Display Extra (Hunger) */
#define PR_DISEASED		0x00008000L	/* Display Extra (Disease) */
#define PR_BLIND		0x00010000L	/* Display Extra (Blind) */
#define PR_CONFUSED		0x00020000L	/* Display Extra (Confused) */
#define PR_AFRAID		0x00040000L	/* Display Extra (Afraid) */
#define PR_POISONED		0x00080000L	/* Display Extra (Poisoned) */
#define PR_STATE		0x00100000L	/* Display Extra (State) */
#define PR_SPEED		0x00200000L	/* Display Extra (Speed) */
#define PR_STUDY		0x00400000L	/* Display Extra (Study) */
/* xxx */
#define PR_EXTRA		0x01000000L	/* Display Extra Info */
#define PR_BASIC		0x02000000L	/* Display Basic Info */
/* xxx */
#define PR_MAP			0x08000000L	/* Display Map */

/*
 * Bit flags for the "p_ptr->window" variable (etc)
 */
#define PW_INVEN		0x00000001L	/* Display inven/equip */
#define PW_EQUIP		0x00000002L	/* Display equip/inven */
#define PW_PLAYER_0		0x00000004L	/* Display player (basic) */
#define PW_PLAYER_1		0x00000008L	/* Display player (extra) */
#define PW_CONDITION	0x00000010L	/* Display player conditions */
#define PW_VISIBLE		0x00000020L	/* Show visible monster list */
#define PW_MESSAGE		0x00000040L	/* Display messages */
#define PW_OVERHEAD		0x00000080L	/* Display overhead view */
#define PW_MONSTER		0x00000100L	/* Display monster recall */
#define PW_OBJECT		0x00000200L	/* Display object recall */
#define PW_ROOM_INFO	0x00000400L	/* Display room description */
/* xxx */
/* xxx */
/* xxx */
/* xxx */
/* xxx */

/*** Cave flags ***/

/*
 * Special cave grid flags
 */
#define CAVE_MARK	0x01	/* memorized feature */
#define CAVE_GLOW	0x02	/* self-illuminating */
#define CAVE_ICKY	0x04	/* part of a vault */
#define CAVE_ROOM	0x08	/* part of a room */
#define CAVE_SEEN	0x10	/* seen flag */
#define CAVE_VIEW	0x20	/* view flag */
#define CAVE_TEMP	0x40	/* temp flag */
#define CAVE_WALL	0x80	/* wall flag */

/*** Object flags ***/

/*
 * Artifact awareness flags 
 */
#define A_STATUS_CREATED	0x01	/* Artifact was created */
#define A_STATUS_AWARE		0x02	/* Artifact was seen in this game */
#define A_STATUS_KNOWN		0x04	/* Artifact was *identified* this game */
#define A_STATUS_HISTORY	0x08	/* Artifact was seen in an historical game */
#define A_STATUS_MEMORY		0x10	/* Artifact was *identified* in a previous game */
#define A_STATUS_LOST		0x20	/* Artifact was lost in non-perserve mode */
#define A_STATUS_ACTIVATE	0x40	/* Artifact activation is known */

/*
 * Special Object Flags
 */
#define IDENT_SENSE		0x01	/* Item has been "sensed" */
#define IDENT_EMPTY		0x02	/* Item charges are known */
#define IDENT_KNOWN		0x04	/* Item abilities are known */
#define IDENT_HYPER		0x08	/* Item has been hypercharged */

#define IDENT_MENTAL	0x20	/* Item information is known */
#define IDENT_CURSED	0x40	/* Item is temporarily cursed */
#define IDENT_BROKEN	0x80	/* Item is permanently worthless */

/*
 * The special inscriptions.
 */
#define INSCRIP_NULL		100
#define INSCRIP_TERRIBLE	100+1
#define INSCRIP_WORTHLESS	100+2
#define INSCRIP_CURSED		100+3
#define INSCRIP_BROKEN		100+4
#define INSCRIP_AVERAGE		100+5
#define INSCRIP_GOOD		100+6
#define INSCRIP_EXCELLENT	100+7
#define INSCRIP_SPECIAL		100+8
#define INSCRIP_UNCURSED	100+9
#define INSCRIP_INDESTRUCT	100+10

/*
 * Number of special inscriptions, plus one.
 */
#define MAX_INSCRIP			11

/*
 * Modes of object_flags_aux()
 */
#define OBJECT_INFO_FULL	1	/* Full info */
#define OBJECT_INFO_KNOWN	2	/* Only flags known to the player */
#define OBJECT_INFO_RANDOM	3	/* Only known random flags */

/*
 * These are the base types for automatic squelching on creation.
 * I've combined some of the tvals to make this list a little more
 * reasonable.
 */
#define SQ_TYPE_AMMO	1
#define SQ_TYPE_BOW		2
#define SQ_TYPE_WEAPON1	3
#define SQ_TYPE_WEAPON2	4
#define SQ_TYPE_BODY	5
#define SQ_TYPE_CLOAK	6
#define SQ_TYPE_HELM	7
#define SQ_TYPE_BOOT	8
#define SQ_TYPE_RING	9
#define SQ_TYPE_STAFF	10
#define SQ_TYPE_WAND	11
#define SQ_TYPE_ROD		12
#define SQ_TYPE_SCROLL	13
#define SQ_TYPE_POTION	14
#define SQ_TYPE_AMULET	15
#define SQ_TYPE_BOOK	16
#define SQ_TYPE_FOOD	17
#define SQ_TYPE_POWDER	18
#define SQ_TYPE_MUSIC	19
#define SQ_TYPE_MISC	20
#define SQ_TYPE_LITE	21

#define MAX_SQ_TYPES	21

/*
 * Some bit-flags for the "smart" field of "monster_type".
 *
 * Most of these map to the "TR2_xxx" flags.
 */
#define SM_IMM_FREE		0x00000010
#define SM_IMM_MANA		0x00000020	/* Immunity to mana drain, not mana attacks */
#define SM_IMM_BRAVE	0x00000040
#define SM_IMM_BLIND	0x00000080
#define SM_IMM_CONF		0x00000100
#define SM_RES_ACID		0x00000200
#define SM_RES_ELEC		0x00000400
#define SM_RES_FIRE		0x00000800
#define SM_RES_COLD		0x00001000
#define SM_RES_POIS		0x00002000
#define SM_RES_LITE		0x00004000
#define SM_RES_DARK		0x00008000
#define SM_RES_SOUND	0x00010000
#define SM_RES_SHARD	0x00020000
#define SM_RES_NEXUS	0x00040000
#define SM_RES_NETHR	0x00080000
#define SM_RES_CHAOS	0x00100000
#define SM_RES_DISEN	0x00200000
#define SM_RES_TIME		0x00400000
#define SM_RES_MANA		0x00800000	/* Resistance to mana attacks */
#define SM_RES_DISEASE	0x01000000
#define SM_RES_WATER	0x02000000

/*
 * Note that "flags1" contains all flags dependant on "pval", plus all "sustains".
 *
 * Note that "flags2" contains all "resistances" (including special resistance flags,
 * immunity flags, and resistance flags).  
 *
 * Note that "flags3" contains everything else (including eight good flags,
 * six unused flags, five bad flags, four damage ignoring flags, six weird
 * flags, and three cursed flags).
 *
 * Note that "flags4" contains weapon flags.
 */

#define TR1_STR				0x00000001L	/* STR += "pval" */
#define TR1_INT				0x00000002L	/* INT += "pval" */
#define TR1_WIS				0x00000004L	/* WIS += "pval" */
#define TR1_DEX				0x00000008L	/* DEX += "pval" */
#define TR1_CON				0x00000010L	/* CON += "pval" */
#define TR1_CHR				0x00000020L	/* CHR += "pval" */
#define TR1_XXX1			0x00000040L
#define TR1_XXX2			0x00000080L
#define TR1_STEALTH			0x00000100L	/* Stealth += "pval" */
#define TR1_SEARCH			0x00000200L	/* Search += "pval" */
#define TR1_INFRA			0x00000400L	/* Infra += "pval" */
#define TR1_TUNNEL			0x00000800L	/* Tunnel += "pval" */
#define TR1_SPEED			0x00001000L	/* Speed += "pval" */
#define TR1_BLOWS			0x00002000L	/* Blows += "pval" */
#define TR1_SHOTS			0x00004000L	/* Shots += "pval" */
#define TR1_MANA			0x00008000L	/* Mana += "pval * 10" (at least )*/  
#define TR1_HEALTH			0x00010000L	/* Health += "pval * 10" (at least) */
#define TR1_MIGHT			0x00020000L	/* Bow Might += "pval" */
#define TR1_RANGE			0x00040000L /* Bow Range += "pval" */
#define TR1_XXX3			0x00080000L
#define TR1_XXX4			0x00100000L
#define TR1_XXX5			0x00200000L
#define TR1_XXX6			0x00400000L
#define TR1_XXX7			0x00800000L
#define TR1_XXX8			0x01000000L
#define TR1_XXX9			0x02000000L
#define TR1_SUST_STR		0x04000000L	/* Sustain STR */
#define TR1_SUST_INT		0x08000000L	/* Sustain INT */
#define TR1_SUST_WIS		0x10000000L	/* Sustain WIS */
#define TR1_SUST_DEX		0x20000000L	/* Sustain DEX */
#define TR1_SUST_CON		0x40000000L	/* Sustain CON */
#define TR1_SUST_CHR		0x80000000L	/* Sustain CHR */

#define TR2_FREE_ACT		0x00000001L	/* Free action */
#define TR2_HOLD_LIFE		0x00000002L	/* Hold life */
#define TR2_BRAVERY			0x00000004L	/* Bravery */
#define TR2_NO_BLIND		0x00000008L	/* No blindness */
#define TR2_NO_DISEASE		0x00000010L	/* No disease (condition) */
#define TR2_NO_STUN			0x00000020L	/* No stun (condition) */
#define TR2_NO_POISON		0x00000040L	/* No poison (condition) */
#define TR2_NO_CUT			0x00000080L	/* No cuts (condition) */
#define TR2_NO_CONF			0x00000100L	/* No Confusion (condition) */
#define TR2_XXX1			0x00000200L
#define TR2_XXX2			0x00000400L
#define TR2_XXX3			0x00000800L
#define TR2_XXX4			0x00001000L
#define TR2_XXX5			0x00002000L
#define TR2_XXX6			0x00004000L
#define TR2_XXX7			0x00008000L
#define TR2_XXX8			0x00010000L
#define TR2_XXX9			0x00020000L
#define TR2_XXX10			0x00040000L
#define TR2_THROWING		0x00080000L	/* Object does full damage when thrown */
#define TR2_XXX11			0x00100000L
#define TR2_XXX12			0x00200000L
#define TR2_XXX13			0x00400000L
#define TR2_XXX14			0x00800000L
#define TR2_XXX15			0x01000000L
#define TR2_XXX16			0x02000000L
#define TR2_XXX17			0x04000000L
#define TR2_XXX18			0x08000000L
#define TR2_BLESSED			0x10000000L	/* Weapon has been blessed */
#define TR2_WOUNDING		0x20000000L	/* Weapon causes cuts */ 
#define TR2_TERROR			0x40000000L	/* Weapon causes fear */ 
#define TR2_IMPACT			0x80000000L	/* Earthquake blows */

#define TR3_SLOW_DIGEST		0x00000001L	/* Slow digest */
#define TR3_FEATHER	 		0x00000002L	/* Feather Falling */
#define TR3_REGEN			0x00000004L	/* Regeneration */
#define TR3_TELEPATHY		0x00000008L	/* Telepathy */
#define TR3_SEE_INVIS		0x00000010L	/* See invis */
#define TR3_INVIS			0x00000020L	/* Invisibility*/
#define TR3_GLOW			0x00000040L	/* Perma-lite */
#define TR3_LUCK			0x00000080L	/* Luck */
#define TR3_LITE1			0x00000100L
#define TR3_LITE2			0x00000200L
#define TR3_LITE3			0x00000400L
#define TR3_LITE4			0x00000800L
#define TR3_IGNORE_ELEM		0x00001000L	/* Item ignores elemental damage */
#define TR3_IGNORE_NON_ELEM	0x00002000L	/* Item ignores non-elemental damage */
#define TR3_IGNORE_DISEN	0x00004000L	/* Item ignores Disenchantment */  
#define TR3_XXX1			0x00008000L
#define TR3_XXX2			0x00010000L
#define TR3_EASY_KNOW		0x00020000L	/* Item is known if aware */
#define TR3_HIDE_TYPE		0x00040000L	/* Item hides description */
#define TR3_XXX3			0x00080000L	/* Item shows Tohit */
#define TR3_XXX4			0x00100000L
#define TR3_XXX5			0x00200000L
#define TR3_XXX6			0x00400000L
#define TR3_TAINT			0x00800000L /* Item is tainted */
#define TR3_DRAIN_ITEM		0x01000000L	/* Drains other items */ 
#define TR3_DISRUPT			0x02000000L	/* Interferes with spellcasting */
#define TR3_TELEPORT		0x04000000L	/* Random teleportation */
#define TR3_AGGRAVATE		0x08000000L	/* Aggravate monsters */
#define TR3_DRAIN_EXP		0x10000000L	/* Experience drain */
#define TR3_LIGHT_CURSE		0x20000000L	/* Item has Light Curse */
#define TR3_HEAVY_CURSE		0x40000000L	/* Item has Heavy Curse */
#define TR3_PERMA_CURSE		0x80000000L	/* Item has Perma Curse */

/*
 * Hack -- flag set 1 -- mask for "pval-dependant" flags.
 * Note that all "pval" dependant flags must be in "flags1".
 */
#define TR1_PVAL_MASK \
	(TR1_STR | TR1_INT | TR1_WIS | TR1_DEX | TR1_CON | TR1_CHR | \
	 TR1_STEALTH | TR1_SEARCH | TR1_INFRA | TR1_TUNNEL | TR1_MANA | \
	 TR1_HEALTH | TR1_SPEED | TR1_BLOWS | TR1_SHOTS | TR1_MIGHT | TR1_RANGE)

/*
 * Hack -- flag set 1 -- mask for "pval-dependant" flags, except might and range
 * (used for display purposes).
 * Note that all "pval" dependant flags must be in "flags1".
 */
#define TR1_PVAL_DISPLAY_FLAG \
	(TR1_STR | TR1_INT | TR1_WIS | TR1_DEX | TR1_CON | TR1_CHR | \
	 TR1_STEALTH | TR1_SEARCH | TR1_INFRA | TR1_TUNNEL | TR1_MANA | \
	 TR1_HEALTH | TR1_SPEED | TR1_BLOWS | TR1_SHOTS)

/*
 * Flag set 3 -- mask for "lite" flags.
 */
#define TR3_LITE_MASK \
	(TR3_LITE1 | TR3_LITE2 | TR3_LITE3 | TR3_LITE4 )
/*
 * Flag set 3 -- mask for "low usefulness" flags (for random ego items).
 */
#define TR3_LOW_USE_MASK \
	(TR3_SLOW_DIGEST | TR3_FEATHER )

/*
 * Flag set 3 -- mask for "medium usefulness" flags (for random ego items).
 */
#define TR3_MID_USE_MASK \
	(TR3_REGEN | TR3_GLOW | TR3_SEE_INVIS | TR3_LUCK )

/*
 * Flag set 3 -- mask for "high usefulness" flags (for random ego items).
 */
#define TR3_HIGH_USE_MASK \
	(TR3_TELEPATHY | TR3_INVIS )

/*
 * Hack -- special "xtra" object flag info (type)
 */
#define OBJECT_XTRA_TYPE_SUSTAIN	1
#define OBJECT_XTRA_TYPE_RESIST		2 /* Either mid(75%) or high(25%) resist */
#define OBJECT_XTRA_TYPE_POWER		3

#define OBJECT_XTRA_TYPE_MID_RESIST		4
#define OBJECT_XTRA_TYPE_HIGH_RESIST	5

/*
 * Hack -- special "xtra" object flag info (base flag value)
 */
#define OBJECT_XTRA_BASE_SUSTAIN	TR1_SUST_STR
#define OBJECT_XTRA_BASE_POWER		TR3_SLOW_DIGEST

/*
 * Hack -- special "xtra" object flag info (number of flags)
 */
#define OBJECT_XTRA_SIZE_SUSTAIN	6
#define OBJECT_XTRA_SIZE_POWER		8

/*** Class flags ***/

#define CF_EXTRA_SHOT		0x00000001L	/* Extra shots */
#define CF_BRAVERY_30		0x00000002L	/* Gains resist fear at plev 30 */
#define CF_BLESS_WEAPON		0x00000004L	/* Requires blessed/blunt weapons */
#define CF_NO_GLOVE			0x00000008L	/* Gloves disturb spellcasting */
#define CF_POWER			0x00000010L	/* Powerful spells */
#define CF_EXTRA_MANA		0x00000020L	/* Extra mana */
#define CF_ZERO_FAIL		0x00000040L	/* Fail rates reach 0% */
#define CF_BEAM				0x00000080L	/* Higher chance of spells beaming */
#define CF_MYSTIC_CAST		0x00000100L	/* Allow casting of mystic spells when dark/confused */
#define CF_EXTRA_SPELL		0x00000200L	/* Allow faster acquisition of spells */
#define CF_PSEUDO_ID_HEAVY	0x00000400L	/* Allow heavy pseudo-id */
#define CF_CHOOSE_SPELLS	0x00000800L	/* Allow choice of spells */
#define CF_SUB_SPELLS		0x00001000L	/* Allow player to use sub-spells */
#define CF_LORE				0x00002000L	/* Identify acts as *identify* for artifacts */
#define CF_BETTER_CRITICAL	0x00004000L	/* Better critical hits */
#define CF_BETTER_SHOT		0x00008000L	/* Better critical hits with missiles */
#define CF_BETTER_THROW		0x00010000L /* Better critical hits with thrown objects */
#define CF_INFLUENCE		0x00020000L	/* Better offensive condition spells */
#define CF_TRAP_KNOW		0x00040000L	/* Better description when examining traps */
#define CF_TRAP_PLACE		0x00080000L	/* Allow player to place traps */
#define CF_APPRAISE			0x00100000L	/* Allow player to sense approximate price of objects */
#define CF_MUSIC			0x00200000L /* Allow use of musical instruments */
#define CF_BETTER_BLOWS		0x00400000L /* You get more blows in melee */
#define CF_WORSE_BLOWS		0x00800000L /* You get less blows in melee */
#define CF_WEAPON_GOOD		0x01000000L /* Start with a "good" weapon */
#define CF_WEAPON_NONE		0x02000000L /* Start with no weapon */
#define CF_XXX1				0x04000000L 
#define CF_PSEUDO_ID1		0x08000000L	/* Very slow light sensing */ 
#define CF_PSEUDO_ID2		0x10000000L	/* Slow light sensing */
#define CF_PSEUDO_ID3		0x20000000L	/* Fast light sensing */
#define CF_PSEUDO_ID4		0x40000000L	/* Slow heavy sensing */
#define CF_PSEUDO_ID5		0x80000000L	/* Fast heavy sensing */

#define CF_PSEUDO_ID_MASK \
	(CF_PSEUDO_ID1 | CF_PSEUDO_ID2 | CF_PSEUDO_ID3 | CF_PSEUDO_ID4 | CF_PSEUDO_ID5)

/*** Monster flags ***/

/*
 * Monster placement modes 
 */
#define PLACE_NO_UNIQUE	1	/* No uniques allowed */
#define PLACE_UNIQUE	2	/* Force a unique */
#define PLACE_LAST_EGO	3	/* Use the same ego-monster as last time */

/*
 * Special Monster Flags (all temporary)
 */
#define MFLAG_VIEW	0x01	/* Monster is in line of sight */
/* xxx */
#define MFLAG_NICE	0x20	/* Monster is still being nice */
#define MFLAG_SHOW	0x40	/* Monster is recently memorized */
#define MFLAG_MARK	0x80	/* Monster is currently memorized */

/*
 * New monster race bit flags
 *
 * Note that flags from the first set are not cumulative for uniques/normal monsters
 */
#define RF1_UNIQUE			0x00000001	/* Force creation of unique Monster */
#define RF1_EGO				0x00000002	/* Force creation of ego monster */
#define RF1_ATTR_MIMIC		0x00000004	/* Gains a random color for mimics*/
#define RF1_ATTR_CLEAR		0x00000008	/* Absorbs color */
#define RF1_ATTR_MULTI		0x00000010	/* Changes color */
#define RF1_CHAR_CLEAR		0x00000020	/* Absorbs character */
#define RF1_STUPID			0x00000040	/* Monster is stupid */
#define RF1_SMART			0x00000080	/* Monster is smart */
#define RF1_XXX1			0x00000100	
#define RF1_XXX2			0x00000200	
#define RF1_MULTIPLY		0x00000400	/* Monster reproduces */
#define RF1_XXX3			0x00000800	
#define RF1_COMPANION		0x00001000	/* Arrive with a unique from same level */
#define RF1_GRP_9			0x00002000	/* Arrive with a group of 9 */
#define RF1_GRP_18			0x00004000	/* Arrive with a group of 18 */
#define RF1_GRP_27			0x00008000	/* Arrive with a group of 24 */
#define RF1_GRP_ESCORT		0x00010000	/* Arrive with a group of escorts */
#define RF1_GRP_PEER		0x00020000	/* Arrive with a group of similar ego-type */
#define RF1_RAND_25			0x00040000	/* Moves randomly (25%) */
#define RF1_RAND_50			0x00080000	/* Moves randomly (50%) */
#define RF1_ONLY_GOLD		0x00100000	/* Drop only gold */
#define RF1_ONLY_ITEM		0x00200000	/* Drop only items */
#define RF1_DROP_60			0x00400000	/* Drop an item/gold (60%) */
#define RF1_DROP_90			0x00800000	/* Drop an item/gold (90%) */
#define RF1_DROP_1D2		0x01000000	/* Drop 1d2 items/gold */
#define RF1_DROP_2D2		0x02000000	/* Drop 2d2 items/gold */
#define RF1_DROP_3D2		0x04000000	/* Drop 3d2 items/gold */
#define RF1_DROP_4D2		0x08000000	/* Drop 4d2 items/gold */
#define RF1_DROP_GOOD		0x10000000	/* Drop good items */
#define RF1_DROP_GREAT		0x20000000	/* Drop great items */
#define RF1_DROP_MIMIC		0x40000000	/* Drop an item according to char and attr */
#define RF1_DROP_CHOSEN		0x80000000	/* Drop "chosen" items */

/*
 * New monster race bit flags
 */
#define RF2_NEVER_BLOW		0x00000001	/* Never make physical blow */
#define RF2_NEVER_MOVE		0x00000002	/* Never make physical move */
#define RF2_NEVER_FAIL		0x00000004	/* Monster never fails in spellcasting */
#define RF2_OPEN_DOOR		0x00000008	/* Monster can open doors */
#define RF2_BASH_DOOR		0x00000010	/* Monster can bash doors */
#define RF2_PICK_LOCK		0x00000020
#define RF2_PASS_WALL		0x00000040	/* Monster can pass walls */
#define RF2_KILL_WALL		0x00000080	/* Monster can destroy walls */
#define RF2_MOVE_BODY		0x00000100	/* Monster can move monsters */
#define RF2_KILL_BODY		0x00000200	/* Monster can kill monsters */
#define RF2_TAKE_ITEM		0x00000400	/* Monster can pick up items */
#define RF2_KILL_ITEM		0x00000800	/* Monster can crush items */
#define RF2_SEE_INVIS 		0x00001000	/* Monster can see invisible players */
#define RF2_REGENERATE		0x00002000	/* Monster regenerates */
#define RF2_WIDE_BREATH		0x00004000	/* Monster has strong breath */
#define RF2_XXX1			0x00008000
#define RF2_INVISIBLE		0x00010000	/* Monster avoids vision */
#define RF2_COLD_BLOOD		0x00020000	/* Monster avoids infra */
#define RF2_XXX2			0x00040000
#define RF2_EMPTY_MIND		0x00080000	/* Monster avoids telepathy */
#define RF2_WEIRD_MIND		0x00100000	/* Monster avoids telepathy? */
#define RF2_EVASIVE			0x00200000	/* Monster can avoid attacks */
#define RF2_HAS_LITE		0x00400000	/* Monster carries light */
#define RF2_HURT_LITE		0x00800000	/* Hurt by lite */
#define RF2_HURT_ROCK		0x01000000	/* Hurt by rock remover */
#define RF2_HURT_DARK		0x02000000	/* Hurt by darkness */
#define RF2_HURT_ACID		0x04000000	/* Hurt by acid */
#define RF2_HURT_ELEC		0x08000000	/* Hurt by elec */
#define RF2_HURT_FIRE		0x10000000	/* Hurt by fire */
#define RF2_HURT_COLD		0x20000000	/* Hurt by cold */
#define RF2_XXX3			0x40000000
#define RF2_NO_TRAP			0x80000000 /* Monster will avoid traps */

/*
 * New monster race bit flags
 */
#define RF3_XXX1			0x00000001
#define RF3_XXX2			0x00000002
#define RF3_XXX3			0x00000004
#define RF3_XXX4			0x00000008
#define RF3_NO_BLIND		0x00000010	/* Cannot be blinded */
#define RF3_NO_FEAR			0x00000020	/* Cannot be scared */
#define RF3_NO_STUN			0x00000040	/* Cannot be stunned */
#define RF3_NO_SLEEP		0x00000080	/* Cannot be slept */
#define RF3_NO_CUT			0x00000100	/* Cannot be cut */
#define RF3_NO_CALM			0x00000200	/* Cannot be calmed */
#define RF3_NO_CONF			0x00000400	/* Resist confusion and cannot be confused*/
#define RF3_RES_ACID		0x00000800	/* Resist acid a lot */
#define RF3_RES_ELEC		0x00001000	/* Resist elec a lot */
#define RF3_RES_FIRE		0x00002000	/* Resist fire a lot */
#define RF3_RES_COLD		0x00004000	/* Resist cold a lot */
#define RF3_RES_POIS		0x00008000	/* Resist poison a lot and cannot be poisoned*/
#define RF3_RES_NETH		0x00010000	/* Resist Nether */
#define RF3_RES_LITE		0x00020000	/* Resist Light */
#define RF3_RES_DARK		0x00040000	/* Resist Dark */
#define RF3_RES_SOUN		0x00080000	/* Resist Sound */
#define RF3_RES_CHAO		0x00100000	/* Resist Chaos */
#define RF3_RES_DISE		0x00200000	/* Resist Disenchant */
#define RF3_RES_NEXU		0x00400000	/* Resist Nexus */
#define RF3_RES_TIME		0x00800000	/* Resist Time */
#define RF3_RES_INER		0x01000000	/* Resist Inertia */
#define RF3_RES_GRAV		0x02000000	/* Resist Gravity */
#define RF3_RES_SHAR		0x04000000	/* Resist Shards */
#define RF3_RES_PLAS		0x08000000	/* Resist Plasma */
#define RF3_RES_FORCE		0x10000000	/* Resist Force */
#define RF3_RES_MANA		0x20000000	/* Resist Mana somewhat*/
#define RF3_RES_WATER		0x40000000	/* Resist Water */
#define RF3_RES_DISEASE		0x80000000	/* Resist Disease a lot */

/*
 * New monster race bit flags
 */
#define RF4_EVIL			0x00000001	/* Evil */
#define RF4_CHAOTIC			0x00000002	/* Chaotic */
#define RF4_XXX1			0x00000004
#define RF4_PERSON			0x00000008	/* Person */
#define RF4_HUMANOID		0x00000010	/* Humanoid */
#define RF4_FAERY			0x00000020	/* Faery */
#define RF4_DRAGON			0x00000040	/* Dragon */
#define RF4_DEMON			0x00000080	/* Demon */
#define RF4_UNDEAD			0x00000100	/* Undead */
#define RF4_ANIMAL			0x00000200	/* Animal */
#define RF4_PLANT			0x00000400	/* Plant */
#define RF4_LYCANTHROPE		0x00000800	/* Lycanthrope */
#define RF4_XXX2			0x00001000
#define RF4_PRIEST			0x00002000	/* Priest */
#define RF4_WARRIOR			0x00004000	/* Warrior */
#define RF4_ROGUE			0x00008000	/* Rogue */
#define RF4_MAGE			0x00010000	/* Mage */
#define RF4_XXX3			0x00020000
#define RF4_XXX4			0x00040000
#define RF4_XXX5			0x00080000
#define RF4_XXX6			0x00100000
#define RF4_XXX7			0x00200000
#define RF4_XXX8			0x00400000	
#define RF4_XXX9			0x00800000
#define RF4_XXX10			0x01000000
#define RF4_XXX11			0x02000000
#define RF4_XXX12			0x04000000
#define RF4_XXX13			0x08000000
#define RF4_XXX14			0x10000000
#define RF4_XXX15			0x20000000
#define RF4_MALE			0x40000000	/* Male gender */
#define RF4_FEMALE			0x80000000	/* Female gender */

/*
 * New monster race bit flags
 */
#define SRF1_SHRIEK			0x00000001	/* Shriek for help */
#define SRF1_XXX1			0x00000002
#define SRF1_XXX2			0x00000004
#define SRF1_XXX3			0x00000008
#define SRF1_ARROW_1		0x00000010	/* Fire an arrow (light) */
#define SRF1_ARROW_2		0x00000020	/* Fire an arrow (heavy) */
#define SRF1_ARROW_3		0x00000040	/* Fire missiles (light) */
#define SRF1_ARROW_4		0x00000080	/* Fire missiles (heavy) */
#define SRF1_BR_ACID		0x00000100	/* Breathe Acid */
#define SRF1_BR_ELEC		0x00000200	/* Breathe Elec */
#define SRF1_BR_FIRE		0x00000400	/* Breathe Fire */
#define SRF1_BR_COLD		0x00000800	/* Breathe Cold */
#define SRF1_BR_POIS		0x00001000	/* Breathe Poison */
#define SRF1_BR_NETH		0x00002000	/* Breathe Nether */
#define SRF1_BR_LITE		0x00004000	/* Breathe Lite */
#define SRF1_BR_DARK		0x00008000	/* Breathe Dark */
#define SRF1_BR_SOUN		0x00010000	/* Breathe Sound */
#define SRF1_BR_CHAO		0x00020000	/* Breathe Chaos */
#define SRF1_BR_DISE		0x00040000	/* Breathe Disenchant */
#define SRF1_BR_NEXU		0x00080000	/* Breathe Nexus */
#define SRF1_BR_TIME		0x00100000	/* Breathe Time */
#define SRF1_BR_INER		0x00200000	/* Breathe Inertia */
#define SRF1_BR_GRAV		0x00400000	/* Breathe Gravity */
#define SRF1_BR_SHAR		0x00800000	/* Breathe Shards */
#define SRF1_BR_PLAS		0x01000000	/* Breathe Plasma */
#define SRF1_BR_FORCE		0x02000000	/* Breathe Force */
#define SRF1_BR_MANA		0x04000000	/* Breathe Mana */ 
#define SRF1_BR_WATER		0x08000000	/* Breathe Water */ 
#define SRF1_BR_DISEASE		0x10000000	/* Breathe Disease */
#define SRF1_XXX4			0x20000000
#define SRF1_XXX5			0x40000000
#define SRF1_XXX6			0x80000000

/*
 * New monster race bit flags
 */
#define SRF2_BA_ACID		0x00000001	/* Acid Ball */
#define SRF2_BA_ELEC		0x00000002	/* Elec Ball */
#define SRF2_BA_FIRE		0x00000004	/* Fire Ball */
#define SRF2_BA_COLD		0x00000008	/* Cold Ball */
#define SRF2_BA_POIS		0x00000010	/* Poison Ball */
#define SRF2_BA_NETH		0x00000020	/* Nether Ball */
#define SRF2_BA_WATE		0x00000040	/* Water Ball */
#define SRF2_BA_MANA		0x00000080	/* Mana Storm */
#define SRF2_BA_DARK		0x00000100	/* Darkness Storm */
#define SRF2_DRAIN_MANA		0x00000200	/* Drain Mana */
#define SRF2_MIND_BLAST		0x00000400	/* Blast Mind */
#define SRF2_BRAIN_SMASH	0x00000800	/* Smash Brain */
#define SRF2_CAUSE_1		0x00001000	/* Cause Light Wound */
#define SRF2_CAUSE_2		0x00002000	/* Cause Serious Wound */
#define SRF2_CAUSE_3		0x00004000	/* Cause Critical Wound */
#define SRF2_CAUSE_4		0x00008000	/* Cause Mortal Wound */
#define SRF2_BO_ACID		0x00010000	/* Acid Bolt */
#define SRF2_BO_ELEC		0x00020000	/* Elec Bolt (unused) */
#define SRF2_BO_FIRE		0x00040000	/* Fire Bolt */
#define SRF2_BO_COLD		0x00080000	/* Cold Bolt */
#define SRF2_XXX1			0x00100000
#define SRF2_BO_NETH		0x00200000	/* Nether Bolt */
#define SRF2_BO_WATE		0x00400000	/* Water Bolt */
#define SRF2_BO_MANA		0x00800000	/* Mana Bolt */
#define SRF2_BO_PLAS		0x01000000	/* Plasma Bolt */
#define SRF2_BO_ICEE		0x02000000	/* Ice Bolt */
#define SRF2_MISSILE		0x04000000	/* Magic Missile */
#define SRF2_SCARE			0x08000000	/* Frighten Player */
#define SRF2_BLIND			0x10000000	/* Blind Player */
#define SRF2_CONF			0x20000000	/* Confuse Player */
#define SRF2_SLOW			0x40000000	/* Slow Player */
#define SRF2_HOLD			0x80000000	/* Paralyze Player */

/*
 * New monster race bit flags
 */
#define SRF3_HASTE			0x00000001	/* Speed self */
#define SRF3_XXX1			0x00000002
#define SRF3_HEAL			0x00000004	/* Heal self */
#define SRF3_XXX2			0x00000008
#define SRF3_BLINK			0x00000010	/* Teleport Short */
#define SRF3_TPORT			0x00000020	/* Teleport Long */
#define SRF3_BLINK_TO		0x00000040	/* Move monster near player */
#define SRF3_XXX3			0x00000080
#define SRF3_TELE_TO		0x00000100	/* Move player to monster */
#define SRF3_TELE_AWAY		0x00000200	/* Move player far away */
#define SRF3_TELE_LEVEL		0x00000400	/* Move player vertically */
#define SRF3_DARKNESS		0x00000800	/* Create Darkness */
#define SRF3_FORGET			0x00001000	/* Cause amnesia */
#define SRF3_TRAPS1			0x00002000
#define SRF3_TRAPS2			0x00004000
#define SRF3_TRAPS3			0x00008000
#define SRF3_S_KIN			0x00010000	/* Summon Kin */
#define SRF3_S_HI_DEMON		0x00020000	/* Summon Greater Demons */
#define SRF3_S_MONSTER		0x00040000	/* Summon Monster */
#define SRF3_S_MONSTERS		0x00080000	/* Summon Monsters */
#define SRF3_S_ANIMALS		0x00100000	/* Summon Animals */
#define SRF3_S_SPIDER		0x00200000	/* Summon Spiders */
#define SRF3_S_HOUND		0x00400000	/* Summon Hounds */
#define SRF3_S_FAERY		0x00800000	/* Summon Faeries */
#define SRF3_S_HYDRA		0x01000000	/* Summon Hydras */
#define SRF3_S_HORROR		0x02000000	/* Summon Horrors */
#define SRF3_S_DEMON		0x04000000	/* Summon Demon */
#define SRF3_S_UNDEAD		0x08000000	/* Summon Undead */
#define SRF3_S_DRAGON		0x10000000	/* Summon Dragon */
#define SRF3_S_HI_UNDEAD	0x20000000	/* Summon Greater Undead */
#define SRF3_S_HI_DRAGON	0x40000000	/* Summon Ancient Dragon */
#define SRF3_S_UNIQUE		0x80000000	/* Summon Unique Monster */

/*
 * Hack -- Bit masks to control what spells are considered
 */

/*
 * Choose "intelligent" spells when desperate
 */

#define SRF1_INT_MASK \
	(0L)

#define SRF2_INT_MASK \
	(SRF2_HOLD | SRF2_SLOW | SRF2_CONF | SRF2_BLIND | SRF2_SCARE)

#define SRF3_INT_MASK \
	(SRF3_BLINK |  SRF3_TPORT | SRF3_TELE_LEVEL | SRF3_TELE_AWAY | \
	 SRF3_HEAL | SRF3_HASTE | SRF3_TRAPS1 | SRF3_TRAPS2 | SRF3_TRAPS3 |\
	 SRF3_S_KIN | SRF3_S_MONSTER | SRF3_S_MONSTERS | SRF3_S_FAERY | \
	 SRF3_S_ANIMALS | SRF3_S_SPIDER | SRF3_S_HOUND | SRF3_S_HYDRA | \
	 SRF3_S_HORROR | SRF3_S_DRAGON | SRF3_S_UNDEAD | SRF3_S_DEMON | \
	 SRF3_S_HI_DRAGON | SRF3_S_HI_UNDEAD | SRF3_S_HI_DEMON | \
	 SRF3_S_UNIQUE)

/*
 * "Bolt" spells that may hurt fellow monsters
 */
#define SRF1_BOLT_MASK \
	(SRF1_ARROW_1 | SRF1_ARROW_2 | SRF1_ARROW_3 | SRF1_ARROW_4)

#define SRF2_BOLT_MASK \
	(SRF2_BO_ACID | SRF2_BO_ELEC | SRF2_BO_FIRE | SRF2_BO_COLD | \
	 SRF2_BO_NETH | SRF2_BO_WATE | SRF2_BO_MANA | SRF2_BO_PLAS | \
	 SRF2_BO_ICEE | SRF2_MISSILE)

#define SRF3_BOLT_MASK \
	(0L)

/*
 * Spells that allow the caster to escape
 */
#define SRF1_ESCAPE_MASK \
	(0L)

#define SRF2_ESCAPE_MASK \
	(0L)

#define SRF3_ESCAPE_MASK \
	(SRF3_BLINK | SRF3_TPORT | SRF3_TELE_AWAY | SRF3_TELE_LEVEL)

/*
 * Spells that hurt the player directly
 */
#define SRF1_ATTACK_MASK \
	(SRF1_ARROW_1 | SRF1_ARROW_2 | SRF1_ARROW_3 | SRF1_ARROW_4 | \
	 SRF1_BR_ACID | SRF1_BR_ELEC | SRF1_BR_FIRE | SRF1_BR_COLD | SRF1_BR_POIS | \
	 SRF1_BR_NETH | SRF1_BR_LITE | SRF1_BR_DARK | SRF1_BR_SOUN | SRF1_BR_CHAO | \
	 SRF1_BR_DISE | SRF1_BR_NEXU | SRF1_BR_TIME | SRF1_BR_INER | SRF1_BR_GRAV | \
	 SRF1_BR_SHAR | SRF1_BR_PLAS | SRF1_BR_FORCE | SRF1_BR_MANA | SRF1_BR_WATER | \
	 SRF1_BR_DISEASE)

#define SRF2_ATTACK_MASK \
	(SRF2_BA_ACID | SRF2_BA_ELEC | SRF2_BA_FIRE | SRF2_BA_COLD | SRF2_BA_POIS | \
	 SRF2_BA_NETH | SRF2_BA_WATE | SRF2_BA_MANA | SRF2_BA_DARK | \
	 SRF2_MIND_BLAST | SRF2_BRAIN_SMASH | SRF2_CAUSE_1 | SRF2_CAUSE_2 | \
	 SRF2_CAUSE_3 | SRF2_CAUSE_4 | SRF2_BO_ACID | SRF2_BO_ELEC | SRF2_BO_FIRE | \
	 SRF2_BO_COLD | SRF2_BO_NETH | SRF2_BO_WATE | SRF2_BO_MANA | SRF2_BO_PLAS | \
	 SRF2_BO_ICEE | SRF2_MISSILE)

#define SRF3_ATTACK_MASK \
	(0L)

/*
 * Spells that require sight
 */
#define SRF1_SIGHT_MASK \
	(SRF1_SHRIEK | SRF1_ARROW_1 | SRF1_ARROW_2 | SRF1_ARROW_3 | SRF1_ARROW_4 | \
	 SRF1_BR_ACID | SRF1_BR_ELEC | SRF1_BR_FIRE | SRF1_BR_COLD | SRF1_BR_POIS | \
	 SRF1_BR_NETH | SRF1_BR_LITE | SRF1_BR_DARK | SRF1_BR_SOUN | SRF1_BR_CHAO | \
	 SRF1_BR_DISE | SRF1_BR_NEXU | SRF1_BR_TIME | SRF1_BR_INER | SRF1_BR_GRAV | \
	 SRF1_BR_SHAR | SRF1_BR_PLAS | SRF1_BR_FORCE | SRF1_BR_MANA | SRF1_BR_WATER | \
	 SRF1_BR_DISEASE)

#define SRF2_SIGHT_MASK \
	(SRF2_BA_ACID | SRF2_BA_ELEC | SRF2_BA_FIRE | SRF2_BA_COLD | SRF2_BA_POIS | \
	 SRF2_BA_NETH | SRF2_BA_WATE | SRF2_BA_MANA | SRF2_BA_DARK | \
	 SRF2_MIND_BLAST | SRF2_BRAIN_SMASH | SRF2_CAUSE_1 | SRF2_CAUSE_2 | \
	 SRF2_CAUSE_3 | SRF2_CAUSE_4 | SRF2_BO_ACID | SRF2_BO_ELEC | SRF2_BO_FIRE | \
	 SRF2_BO_COLD | SRF2_BO_NETH | SRF2_BO_WATE | SRF2_BO_MANA | SRF2_BO_PLAS | \
	 SRF2_BO_ICEE | SRF2_MISSILE | SRF2_BLIND | SRF2_SCARE | SRF2_CONF | SRF2_SLOW | \
     SRF2_HOLD)

#define SRF3_SIGHT_MASK \
	(SRF3_BLINK_TO | SRF3_TELE_TO | SRF3_FORGET | SRF3_TELE_AWAY | SRF3_TELE_LEVEL)

/*
 * Summoning spells
 */
#define SRF1_SUMMON_MASK \
	(0L)

#define SRF2_SUMMON_MASK \
	(0L)

#define SRF3_SUMMON_MASK \
	(SRF3_S_KIN | SRF3_S_MONSTER | SRF3_S_MONSTERS | SRF3_S_ANIMALS | \
	 SRF3_S_SPIDER | SRF3_S_HOUND | SRF3_S_HYDRA | SRF3_S_HORROR | \
	 SRF3_S_DEMON | SRF3_S_UNDEAD | SRF3_S_DRAGON | SRF3_S_HI_UNDEAD | \
	 SRF3_S_FAERY | SRF3_S_HI_DEMON | SRF3_S_HI_DRAGON | SRF3_S_UNIQUE)

/*
 * Spells that improve the caster's tactical position if it's too close
 */
#define SRF1_TACTIC_CLOSE_MASK \
	(0L)

#define SRF2_TACTIC_CLOSE_MASK \
	(0L)

#define SRF3_TACTIC_CLOSE_MASK \
	(SRF3_BLINK)

/*
 * Spells that improve the caster's tactical position if it's too far
 */
#define SRF1_TACTIC_FAR_MASK \
	(0L)

#define SRF2_TACTIC_FAR_MASK \
	(0L)

#define SRF3_TACTIC_FAR_MASK \
	(SRF3_BLINK_TO | SRF3_TELE_TO)

/*
 * Annoying spells
 */
#define SRF1_ANNOY_MASK \
	(SRF1_SHRIEK)

#define SRF2_ANNOY_MASK \
	(SRF2_DRAIN_MANA | SRF2_MIND_BLAST | SRF2_BRAIN_SMASH | SRF2_SCARE | \
	 SRF2_BLIND | SRF2_CONF | SRF2_SLOW | SRF2_HOLD)

#define SRF3_ANNOY_MASK \
	(SRF3_TELE_TO | SRF3_DARKNESS | SRF3_TRAPS1 | SRF3_TRAPS2 | SRF3_TRAPS3 | SRF3_FORGET)

/*
 * Spells that increase the caster's relative speed
 */
#define SRF1_HASTE_MASK \
	(0L)

#define SRF2_HASTE_MASK \
	(SRF2_SLOW | SRF2_HOLD)

#define SRF3_HASTE_MASK \
	(SRF3_HASTE)

/*
 * Healing spells
 */
#define SRF1_HEAL_MASK \
	(0L)

#define SRF2_HEAL_MASK \
	(0L)

#define SRF3_HEAL_MASK \
	(SRF3_HEAL)

/*
 * Innate spell-like effects
 */
#define SRF1_INNATE_MASK \
	(SRF1_SHRIEK | SRF1_ARROW_1 | SRF1_ARROW_2 | SRF1_ARROW_3 | SRF1_ARROW_4 | \
	 SRF1_BR_ACID | SRF1_BR_ELEC | SRF1_BR_FIRE | SRF1_BR_COLD | SRF1_BR_POIS | \
	 SRF1_BR_NETH | SRF1_BR_LITE | SRF1_BR_DARK | SRF1_BR_SOUN | SRF1_BR_CHAO | \
	 SRF1_BR_DISE | SRF1_BR_NEXU | SRF1_BR_TIME | SRF1_BR_INER | SRF1_BR_GRAV | \
	 SRF1_BR_SHAR | SRF1_BR_PLAS | SRF1_BR_FORCE | SRF1_BR_MANA |  SRF1_BR_WATER | \
	 SRF1_BR_DISEASE)

#define SRF2_INNATE_MASK \
	(0L)

#define SRF3_INNATE_MASK \
	(0L)

/*** Trap flags ***/

#define WGF_PLAYER			0x00000001	/* Affects players */
#define WGF_MONSTER			0x00000002	/* Affects monsters */
#define WGF_XXX1			0x00000004
#define WGF_XXX2			0x00000008
#define WGF_FLOOR			0x00000010	/* A trap that lies on the floor */
#define WGF_GLYPH			0x00000020	/* A glyph that lies on the floor */
#define WGF_CHEST			0x00000040	/* A trap that lies on a chest */
#define WGF_LOCK			0x00000080	/* A lock that lies on a door */
#define WGF_XXX3			0x00000100
#define WGF_XXX4			0x00000200
#define WGF_TRAP_DOOR		0x00000400	/* It's a trap door */
#define WGF_PIT				0x00000800	/* It's a pit */
#define WGF_RUNE			0x00001000	/* It's a rune */
#define WGF_SPOT			0x00002000	/* It's an elemental trap */
#define	WGF_DART			0x00004000	/* It's a dart trap */
#define WGF_GAS				0x00008000	/* It's a gas trap */
#define WGF_SLOTS			0x00010000	/* It's deadly slots */
#define WGF_ROCKS			0x00020000	/* It's a falling rock */
#define WGF_XXX5			0x00040000
#define	WGF_XXX6			0x00080000
#define WGF_TRAPS1			0x00100000	/* Can be placed by monsters with SRF3_TRAPS1 */
#define WGF_TRAPS2			0x00200000	/* Can be placed by monsters with SRF3_TRAPS2 */
#define WGF_TRAPS3			0x00400000	/* Can be placed by monsters with SRF3_TRAPS3 */
#define WGF_XXX7			0x00800000
#define WGF_XXX8			0x01000000
#define WGF_XXX9			0x02000000
#define WGF_XXX10			0x04000000
#define WGF_ATTR_CLEAR		0x08000000	/* Absorbs color */
#define WGF_XXX11			0x10000000
#define WGF_XXX12			0x20000000
#define WGF_DETECT			0x40000000	/* Trap can be detected/searched */
#define WGF_DISARM			0x80000000	/* Player can disarm this trap */

/* Types with descriptions */
#define WGF_TYPE_MASK \
	(WGF_GLYPH | WGF_LOCK | WGF_RUNE | WGF_SPOT | WGF_DART | \
	 WGF_GAS | WGF_SLOTS | WGF_ROCKS | WGF_PIT | WGF_TRAP_DOOR)

/*** Option Definitions ***/

/*
 * Option indexes
 *
 * These values are hard-coded by savefiles (and various pieces of code).
 */
#define OPT_NORMAL					63 /* Regular options */
#define OPT_BIRTH					19 /* Birth/adult options */
#define OPT_CHEAT					9  /* Cheat/score options */
#define OPT_SQUELCH					2  /* Squelch options */

/*
 * Option indexes (normal)
 *
 * These values are hard-coded by savefiles.
 */
#define OPT_rogue_like_commands		0 
#define OPT_quick_messages			1
#define OPT_floor_query_flag		2
#define OPT_carry_query_flag		3
#define OPT_carry_heavy_query		4
#define OPT_use_old_target			5
#define OPT_always_pickup			6
#define OPT_always_repeat			7
#define OPT_depth_in_feet			8
#define OPT_stack_force_notes		9
#define OPT_stack_force_costs		10
#define OPT_show_labels				11
#define OPT_show_weights			12
#define OPT_ring_bell				13
#define OPT_show_flavors			14
#define OPT_run_ignore_stairs		15
#define OPT_run_ignore_doors		16
#define OPT_run_cut_corners			17
#define OPT_disturb_move			18
#define OPT_disturb_near			19
#define OPT_disturb_panel			20
#define OPT_disturb_state			21
#define OPT_disturb_minor			22
#define OPT_verify_destroy			23
#define OPT_use_command				24
#define OPT_expand_look				25
#define OPT_expand_list				26
#define OPT_view_perma_grids		27
#define OPT_view_torch_grids		28
#define OPT_dungeon_align			29
#define OPT_view_reduce_lite		30
#define OPT_hidden_player			31
#define OPT_avoid_abort				32
#define OPT_avoid_other				33
#define OPT_flush_failure			34
#define OPT_flush_disturb			35
#define OPT_fresh_before			36
#define OPT_fresh_after				37
#define OPT_compress_savefile		38
#define OPT_hilite_player			39
#define OPT_view_yellow_lite		40
#define OPT_view_bright_lite		41
#define OPT_view_granite_lite		42
#define OPT_view_special_lite		43
#define OPT_easy_direction 			44
#define OPT_easy_alter				45
#define OPT_easy_floor 				46
#define OPT_show_piles				47
#define OPT_center_player			48
#define OPT_run_avoid_center		49
#define OPT_scroll_target			50
#define OPT_auto_more				51
#define OPT_view_monster_lite		52
#define OPT_verify_leave_quest		53
#define OPT_always_show_lists		54
#define OPT_display_room_desc		55
#define OPT_display_insc_msg		56
#define OPT_display_recharge_msg	57
#define OPT_inscribe_unique			58
#define OPT_spellbook_menu			59
#define OPT_show_trap_piles			60
#define OPT_view_player_color		61
#define OPT_allow_prefix_colors		62

/*
 * Option indexes (birth and adult)
 */
#define OPT_birth_point_based		0
#define OPT_birth_auto_roller		1
#define OPT_birth_preserve			2
#define OPT_birth_ironman			3
#define OPT_birth_no_stores			4
#define OPT_birth_no_artifacts		5
#define OPT_birth_autoscum			6
#define OPT_birth_no_feelings		7
#define OPT_birth_start_kit			8
#define OPT_birth_smart_packs		9
#define OPT_birth_smart_cheat		10
#define OPT_birth_flow_by_sound		11
#define OPT_birth_flow_by_smell		12
#define OPT_birth_random_hp			13
#define OPT_birth_force_small_lev	14
#define OPT_birth_easy_mode			15
#define OPT_birth_nightmare_mode	16
#define OPT_birth_retain_squelch	17
#define OPT_birth_weighted_roller	18

/*
 * Option indexes (cheat and score)
 */
#define OPT_cheat_peek				0
#define OPT_cheat_hear				1
#define OPT_cheat_room				2
#define OPT_cheat_know				3
#define OPT_cheat_live				4
#define OPT_cheat_no_save			5
#define OPT_cheat_debug				6
#define OPT_cheat_wizard			7
#define OPT_cheat_no_respawn		8

/*
 * Option indexes (squelch)
 */
#define OPT_squelch_junk			0
#define OPT_auto_squelch			1

/*
 * No option (for menues)
 */
#define OPT_NONE					255

/*
 * Hack -- Option symbols
 */
#define rogue_like_commands		op_ptr->opt[OPT_rogue_like_commands]
#define quick_messages			op_ptr->opt[OPT_quick_messages]
#define floor_query_flag		op_ptr->opt[OPT_floor_query_flag]
#define carry_query_flag		op_ptr->opt[OPT_carry_query_flag]
#define carry_heavy_query		op_ptr->opt[OPT_carry_heavy_query]
#define use_old_target			op_ptr->opt[OPT_use_old_target]
#define always_pickup			op_ptr->opt[OPT_always_pickup]
#define always_repeat			op_ptr->opt[OPT_always_repeat]
#define depth_in_feet			op_ptr->opt[OPT_depth_in_feet]
#define stack_force_notes		op_ptr->opt[OPT_stack_force_notes]
#define stack_force_costs		op_ptr->opt[OPT_stack_force_costs]
#define show_labels				op_ptr->opt[OPT_show_labels]
#define show_weights			op_ptr->opt[OPT_show_weights]
#define ring_bell				op_ptr->opt[OPT_ring_bell]
#define show_flavors			op_ptr->opt[OPT_show_flavors]
#define run_ignore_stairs		op_ptr->opt[OPT_run_ignore_stairs]
#define run_ignore_doors		op_ptr->opt[OPT_run_ignore_doors]
#define run_cut_corners			op_ptr->opt[OPT_run_cut_corners]
#define disturb_move			op_ptr->opt[OPT_disturb_move]
#define disturb_near			op_ptr->opt[OPT_disturb_near]
#define disturb_panel			op_ptr->opt[OPT_disturb_panel]
#define disturb_state			op_ptr->opt[OPT_disturb_state]
#define disturb_minor			op_ptr->opt[OPT_disturb_minor]
#define verify_destroy			op_ptr->opt[OPT_verify_destroy]
#define use_command				op_ptr->opt[OPT_use_command]
#define expand_look				op_ptr->opt[OPT_expand_look]
#define expand_list				op_ptr->opt[OPT_expand_list]
#define view_perma_grids		op_ptr->opt[OPT_view_perma_grids]
#define view_torch_grids		op_ptr->opt[OPT_view_torch_grids]
#define dungeon_align			op_ptr->opt[OPT_dungeon_align]
#define view_reduce_lite		op_ptr->opt[OPT_view_reduce_lite]
#define hidden_player			op_ptr->opt[OPT_hidden_player]
#define avoid_abort				op_ptr->opt[OPT_avoid_abort]
#define avoid_other				op_ptr->opt[OPT_avoid_other]
#define flush_failure			op_ptr->opt[OPT_flush_failure]
#define flush_disturb			op_ptr->opt[OPT_flush_disturb]
#define fresh_before			op_ptr->opt[OPT_fresh_before]
#define fresh_after				op_ptr->opt[OPT_fresh_after]
#define compress_savefile		op_ptr->opt[OPT_compress_savefile]
#define hilite_player			op_ptr->opt[OPT_hilite_player]
#define view_yellow_lite		op_ptr->opt[OPT_view_yellow_lite]
#define view_bright_lite		op_ptr->opt[OPT_view_bright_lite]
#define view_granite_lite		op_ptr->opt[OPT_view_granite_lite]
#define view_special_lite		op_ptr->opt[OPT_view_special_lite]
#define easy_direction			op_ptr->opt[OPT_easy_direction]
#define easy_alter				op_ptr->opt[OPT_easy_alter]
#define easy_floor				op_ptr->opt[OPT_easy_floor]
#define show_piles				op_ptr->opt[OPT_show_piles]
#define show_trap_piles			op_ptr->opt[OPT_show_trap_piles]
#define center_player			op_ptr->opt[OPT_center_player]
#define run_avoid_center		op_ptr->opt[OPT_run_avoid_center]
#define scroll_target			op_ptr->opt[OPT_scroll_target]
#define auto_more				op_ptr->opt[OPT_auto_more]
#define view_monster_lite		op_ptr->opt[OPT_view_monster_lite]
#define verify_leave_quest		op_ptr->opt[OPT_verify_leave_quest]
#define always_show_lists		op_ptr->opt[OPT_always_show_lists]
#define display_room_desc		op_ptr->opt[OPT_display_room_desc]
#define display_insc_msg		op_ptr->opt[OPT_display_insc_msg]
#define display_recharge_msg	op_ptr->opt[OPT_display_recharge_msg]
#define inscribe_unique			op_ptr->opt[OPT_inscribe_unique]
#define spellbook_menu			op_ptr->opt[OPT_spellbook_menu]
#define view_player_color		op_ptr->opt[OPT_view_player_color]
#define allow_prefix_colors		op_ptr->opt[OPT_allow_prefix_colors]
#define birth_point_based		op_ptr->opt_birth[OPT_birth_point_based]
#define birth_auto_roller		op_ptr->opt_birth[OPT_birth_auto_roller]
#define birth_preserve			op_ptr->opt_birth[OPT_birth_preserve]
#define birth_ironman			op_ptr->opt_birth[OPT_birth_ironman]
#define birth_no_stores			op_ptr->opt_birth[OPT_birth_no_stores]
#define birth_no_artifacts		op_ptr->opt_birth[OPT_birth_no_artifacts]
#define birth_autoscum      	op_ptr->opt_birth[OPT_birth_autoscum]
#define birth_no_feelings	    op_ptr->opt_birth[OPT_birth_no_feelings]
#define birth_start_kit			op_ptr->opt_birth[OPT_birth_start_kit]
#define birth_smart_packs		op_ptr->opt_birth[OPT_birth_smart_packs]
#define birth_smart_cheat		op_ptr->opt_birth[OPT_birth_smart_cheat]
#define birth_flow_by_sound		op_ptr->opt_birth[OPT_birth_flow_by_sound]
#define birth_flow_by_smell		op_ptr->opt_birth[OPT_birth_flow_by_smell]
#define birth_random_hp			op_ptr->opt_birth[OPT_birth_random_hp]
#define	birth_force_small_lev	op_ptr->opt_birth[OPT_birth_force_small_lev]
#define	birth_easy_mode			op_ptr->opt_birth[OPT_birth_easy_mode]
#define	birth_nightmare_mode	op_ptr->opt_birth[OPT_birth_nightmare_mode]
#define birth_retain_squelch	op_ptr->opt_birth[OPT_birth_retain_squelch]
#define birth_weighted_roller	op_ptr->opt_birth[OPT_birth_weighted_roller]
#define adult_point_based		op_ptr->opt_adult[OPT_birth_point_based]
#define adult_auto_roller		op_ptr->opt_adult[OPT_birth_auto_roller]
#define adult_preserve			op_ptr->opt_adult[OPT_birth_preserve]
#define adult_ironman			op_ptr->opt_adult[OPT_birth_ironman]
#define adult_no_stores			op_ptr->opt_adult[OPT_birth_no_stores]
#define adult_no_artifacts		op_ptr->opt_adult[OPT_birth_no_artifacts]
#define adult_autoscum			op_ptr->opt_adult[OPT_birth_autoscum]
#define adult_no_feelings	    op_ptr->opt_adult[OPT_birth_no_feelings]
#define adult_start_kit			op_ptr->opt_adult[OPT_birth_start_kit]
#define adult_smart_packs		op_ptr->opt_adult[OPT_birth_smart_packs]
#define adult_smart_cheat		op_ptr->opt_adult[OPT_birth_smart_cheat]
#define adult_flow_by_sound		op_ptr->opt_adult[OPT_birth_flow_by_sound]
#define adult_flow_by_smell		op_ptr->opt_adult[OPT_birth_flow_by_smell]
#define adult_random_hp			op_ptr->opt_adult[OPT_birth_random_hp]
#define	adult_force_small_lev	op_ptr->opt_adult[OPT_birth_force_small_lev]
#define	adult_easy_mode			op_ptr->opt_adult[OPT_birth_easy_mode]
#define	adult_nightmare_mode	op_ptr->opt_adult[OPT_birth_nightmare_mode]
#define adult_retain_squelch	op_ptr->opt_adult[OPT_birth_retain_squelch]
#define adult_weighted_roller	op_ptr->opt_adult[OPT_birth_weighted_roller]
#define cheat_peek				op_ptr->opt_cheat[OPT_cheat_peek]
#define cheat_hear				op_ptr->opt_cheat[OPT_cheat_hear]
#define cheat_room				op_ptr->opt_cheat[OPT_cheat_room]
#define cheat_know				op_ptr->opt_cheat[OPT_cheat_know]
#define cheat_live				op_ptr->opt_cheat[OPT_cheat_live]
#define cheat_no_save			op_ptr->opt_cheat[OPT_cheat_no_save]
#define cheat_debug				op_ptr->opt_cheat[OPT_cheat_debug]
#define cheat_wizard			op_ptr->opt_cheat[OPT_cheat_wizard]
#define cheat_no_respawn		op_ptr->opt_cheat[OPT_cheat_no_respawn]
#define score_peek				op_ptr->opt_score[OPT_cheat_peek]
#define score_hear				op_ptr->opt_score[OPT_cheat_hear]
#define score_room				op_ptr->opt_score[OPT_cheat_room]
#define score_know				op_ptr->opt_score[OPT_cheat_know]
#define score_live				op_ptr->opt_score[OPT_cheat_live]
#define score_no_save			op_ptr->opt_score[OPT_cheat_no_save]
#define score_debug				op_ptr->opt_score[OPT_cheat_debug]
#define score_wizard			op_ptr->opt_score[OPT_cheat_wizard]
#define score_no_respawn		op_ptr->opt_score[OPT_cheat_no_respawn]
#define squelch_junk			op_ptr->opt_squelch[OPT_squelch_junk]
#define auto_squelch			op_ptr->opt_squelch[OPT_auto_squelch]

/*
 * Information for "do_cmd_options()".
 */
#define OPT_PAGE_MAX				9
#define OPT_PAGE_PER				16

/*** Macro Definitions ***/

/*
 * Hack -- The main "screen"
 */
#define term_screen	(angband_term[0])

/*
 * Determine if a given inventory item is "aware"
 */
#define object_aware_p(T) \
	(k_info[(T)->k_idx].aware)

/*
 * Determine if a given inventory item is "tried"
 */
#define object_tried_p(T) \
	(k_info[(T)->k_idx].tried)

/*
 * Determine if a given inventory item is "known"
 * Test One -- Check for special "known" tag
 * Test Two -- Check for "Easy Know" + "Aware"
 */
#define object_known_p(T) \
	(((T)->ident & (IDENT_KNOWN)) || \
	 ((k_info[(T)->k_idx].flags3 & (TR3_EASY_KNOW)) && \
	  k_info[(T)->k_idx].aware))

/*
 * Determine if a given artifact's abilties are "known"
 * Test One -- Check for A_STATUS_KNOWN
 * Test Two -- Check for A_STATUS_MEMORY
 */
#define artifact_known_p(T) \
	(((T)->status & (A_STATUS_KNOWN)) || ((T)->status & (A_STATUS_MEMORY)))

/*
 * Return the "char" for a given item.
 * Use "flavor" if available.
 * Default to user definitions.
 */
#define object_char(T) \
	((k_info[(T)->k_idx].flavor) ? \
	 (misc_to_char[k_info[(T)->k_idx].flavor]) : \
	 (k_info[(T)->k_idx].x_char))

/*
 * Broken items.
 */
#define broken_p(T) \
	((T)->ident & (IDENT_BROKEN))

/*
 * Cursed items.
 */
#define cursed_p(T) \
	((T)->ident & (IDENT_CURSED))

/*
 * Modified items.
 */
#define modified_p(T) \
	((T)->ident & (IDENT_MODIFIED))

/*
 * An object's activation
 */
#define object_activation(T) \
	((a_info[(T)->a_idx].activation) ? a_info[(T)->a_idx].activation : \
	 k_info[(T)->k_idx].activation)

/*
 * Convert an "attr"/"char" pair into a "pict" (P)
 */
#define PICT(A,C) \
	((((u16b)(A)) << 8) | ((byte)(C)))

/*
 * Convert a "pict" (P) into an "attr" (A)
 */
#define PICT_A(P) \
	((byte)((P) >> 8))

/*
 * Convert a "pict" (P) into an "char" (C)
 */
#define PICT_C(P) \
	((char)((byte)(P)))

/*
 * Convert a "location" (Y,X) into a "grid" (G)
 */
#define GRID(Y,X) \
	(256 * (Y) + (X))

/*
 * Convert a "grid" (G) into a "location" (Y)
 */
#define GRID_Y(G) \
	((int)((G) / 256U))

/*
 * Convert a "grid" (G) into a "location" (X)
 */
#define GRID_X(G) \
	((int)((G) % 256U))

/*
 * Determines if a map location is "meaningful"
 */
#define in_bounds(Y,X) \
	(((unsigned)(Y) < (unsigned)(p_ptr->cur_map_hgt)) && \
	 ((unsigned)(X) < (unsigned)(p_ptr->cur_map_wid)))

/*
 * Determines if a map location is fully inside the outer walls
 * This is more than twice as expensive as "in_bounds()", but
 * often we need to exclude the outer walls from calculations.
 */
#define in_bounds_fully(Y,X) \
	(((Y) > 0) && ((Y) < p_ptr->cur_map_hgt-1) && \
	 ((X) > 0) && ((X) < p_ptr->cur_map_wid-1))

/*
 * Determines if a map location is currently "on screen"
 * Note that "panel_contains(Y,X)" always implies "in_bounds(Y,X)".
 * Pre-storing this into a cave_info flag would be nice.  XXX XXX
 */
#define panel_contains(Y,X) \
	(((unsigned)((Y) - p_ptr->wy) < (unsigned)(SCREEN_HGT)) && \
	 ((unsigned)((X) - p_ptr->wx) < (unsigned)(SCREEN_WID)))

/*
 * Determine if a "legal" grid is a "floor" grid
 *
 * Line 1 -- forbid doors, rubble, seams, walls
 *
 * Note the use of the new "CAVE_WALL" flag.
 */
#define cave_floor_bold(Y,X) \
	(!(cave_info[Y][X] & (CAVE_WALL)))

/*
 * Determine if a "legal" grid is a "clean" floor grid
 *
 * Line 1 -- forbid non-floors
 * Line 2 -- forbid normal objects
 */
#define cave_clean_bold(Y,X) \
	((cave_feat[Y][X] == FEAT_FLOOR) && \
	 (cave_o_idx[Y][X] == 0))

/*
 * Determine if a "legal" grid is an "empty" floor grid
 *
 * Line 1 -- forbid doors, rubble, seams, walls
 * Line 2 -- forbid player/monsters
 */
#define cave_empty_bold(Y,X) \
	(cave_floor_bold(Y,X) && \
	 (cave_m_idx[Y][X] == 0))

/*
 * Determine if a "legal" grid is an "naked" floor grid
 *
 * Line 1 -- forbid non-floors
 * Line 2 -- forbid normal objects
 * Line 3 -- forbid player/monsters
 */
#define cave_naked_bold(Y,X) \
	((cave_feat[Y][X] == FEAT_FLOOR) && \
	 (cave_o_idx[Y][X] == 0) && \
	 (cave_m_idx[Y][X] == 0))

/*
 * Determine if a "legal" grid is "permanent"
 *
 * Line 1 -- perma-walls
 * Line 2-3 -- stairs
 * Line 4-5 -- shop doors
 */
#define cave_perma_bold(Y,X) \
	((cave_feat[Y][X] >= FEAT_PERM_EXTRA) || \
	 ((cave_feat[Y][X] == FEAT_LESS) || \
	  (cave_feat[Y][X] == FEAT_MORE)) || \
	 ((cave_feat[Y][X] >= FEAT_SHOP_HEAD) && \
	  (cave_feat[Y][X] <= FEAT_SHOP_TAIL)))

/*
 * Determine if a grid is a "glpyh" trap
 */
#define trap_glyph(Y,X) \
	(w_info[t_list[cave_t_idx[Y][X]].w_idx].flags & WGF_GLYPH)

/*
 * Determine if a grid is a lock, or a door trap
 */
#define trap_lock(Y,X) \
	(w_info[t_list[cave_t_idx[Y][X]].w_idx].flags & WGF_LOCK)

/*
 * Determine if a grid is a lock, or a door trap
 */
#define trap_chest(Y,X) \
	((t_list[cave_t_idx[Y][X]].visible) && \
	 (w_info[t_list[cave_t_idx[Y][X]].w_idx].flags & WGF_CHEST))

/*
 * Determine if a grid is a known "anti-player" trap
 */
#define trap_player(Y,X) \
	((t_list[cave_t_idx[Y][X]].visible) && \
	 (w_info[t_list[cave_t_idx[Y][X]].w_idx].flags & WGF_PLAYER))

/*
 * Determine if a grid is an "anti-monster" trap
 */
#define trap_monster(Y,X) \
	 (w_info[t_list[cave_t_idx[Y][X]].w_idx].flags & WGF_MONSTER)

/*
 * Determine if a grid is a known "disarmable" trap
 */
#define trap_disarmable(Y,X) \
	((t_list[cave_t_idx[Y][X]].visible) && \
	 (w_info[t_list[cave_t_idx[Y][X]].w_idx].flags & WGF_DISARM))

/*
 * Determine if a grid is a known "disarmable" trap
 */
#define trap_detectable(Y,X) \
	(w_info[t_list[cave_t_idx[Y][X]].w_idx].flags & WGF_DETECT)

/*
 * Determine if a "legal" grid is within "los" of the player
 *
 * Note the use of comparison to zero to force a "boolean" result
 */
#define player_has_los_bold(Y,X) \
	((cave_info[Y][X] & (CAVE_VIEW)) != 0)

/*
 * Determine if a "legal" grid can be "seen" by the player
 *
 * Note the use of comparison to zero to force a "boolean" result
 */
#define player_can_see_bold(Y,X) \
	((cave_info[Y][X] & (CAVE_SEEN)) != 0)

/*
 * Hack -- Prepare to use the "Secure" routines
 */
#if defined(SET_UID) && defined(SECURE)
extern int PlayerUID;
# define getuid() PlayerUID
# define geteuid() PlayerUID
#endif

/*
 * Used for monster list allocations
 */
#define MON_LIST_ITEMS	(z_info->r_max + z_info->u_max)

/*
 * Given an array, determine how many elements are in the array
 */
#define N_ELEMENTS(a) (sizeof (a) / sizeof ((a)[0]))

/*** Color constants ***/

/*
 * Angband "attributes" (with symbols, and base (R,G,B) codes)
 *
 * The "(R,G,B)" codes are given in "fourths" of the "maximal" value,
 * and should "gamma corrected" on most (non-Macintosh) machines.
 */
#define TERM_DARK		0	/* 'd' */	/* 0,0,0 */
#define TERM_WHITE		1	/* 'w' */	/* 4,4,4 */
#define TERM_SLATE		2	/* 's' */	/* 2,2,2 */
#define TERM_ORANGE		3	/* 'o' */	/* 4,2,0 */
#define TERM_RED		4	/* 'r' */	/* 3,0,0 */
#define TERM_GREEN		5	/* 'g' */	/* 0,2,1 */
#define TERM_BLUE		6	/* 'b' */	/* 0,0,4 */
#define TERM_UMBER		7	/* 'u' */	/* 2,1,0 */
#define TERM_L_DARK		8	/* 'D' */	/* 1,1,1 */
#define TERM_L_WHITE	9	/* 'W' */	/* 3,3,3 */
#define TERM_VIOLET		10	/* 'v' */	/* 4,0,4 */
#define TERM_YELLOW		11	/* 'y' */	/* 4,4,0 */
#define TERM_L_RED		12	/* 'R' */	/* 4,0,0 */
#define TERM_L_GREEN	13	/* 'G' */	/* 0,4,0 */
#define TERM_L_BLUE		14	/* 'B' */	/* 0,4,4 */
#define TERM_L_UMBER	15	/* 'U' */	/* 3,2,1 */

/*
 * Message/Sound types 
 */

/* Generic Messages */
#define MSG_GENERIC				 0 /* System and unclassified messages */
#define MSG_FAIL				 1 /* Generic failure message */
#define MSG_SUCCEED				 2 /* Generic success message */
#define MSG_EFFECT				 3 /* Generic effect message */
#define MSG_MONSTER				 4 /* Generic monster message */

/* Special message types */
#define MSG_NOTE				 5
#define MSG_BELL				 6
#define MSG_TIMEOUT				 7 /* Time-limit */
#define MSG_CHEAT				 8 /* Cheat info */

/* Specific message types */
#define MSG_DEATH				 9 /* Player dies */
#define MSG_HITPOINT_WARN		10 /* Hitpoint warning */
#define MSG_RESIST				11 /* Player Resists */
#define MSG_FEELING				12 /* Level feeling */
#define MSG_HIT					13 /* Player hit */
#define MSG_MISS				14 /* Player miss */
#define MSG_FLEE				15 /* Monster fless */
#define MSG_DROP				16 /* Drop item */
#define MSG_PICKUP				17 /* Pickup an item */
#define MSG_CURSE				18 /* Item cursed */
#define MSG_KILL				19 /* Kill monster */
#define MSG_LEVEL				20 /* Gain level */
#define MSG_STUDY				21 /* Gain spell */
#define MSG_SHOOT				22 /* Shoot */
#define MSG_QUAFF				23 /* Quaff potion */
#define MSG_ZAP					24 /* Zap/use/activate/aim item */
#define MSG_THROW				25 /* Throw something */
#define MSG_FUEL				26 /* Fuel a lite */
#define MSG_EAT					27 /* Eat */
#define MSG_DSM					28 /* Dragon Scale Mail breath */
#define MSG_TELEPORT			29 /* Teleport */
#define MSG_TPLEVEL				30 /* Teleport level (and recall) */
#define MSG_SPELL_FAIL			31 /* Spell failure */
#define MSG_TPOTHER				32 /* Teleport other */
#define MSG_HITWALL				33 /* Hit wall */
#define MSG_STORE				34 /* Normal store message */
#define MSG_STORE_ANGRY			35 /* Storekeeper angry */
#define MSG_STORE_HAPPY			36 /* Storekeeper pleased */
#define MSG_DIG					37 /* Tunnel */
#define MSG_OPENDOOR			38 /* Open Door */
#define MSG_SHUTDOOR			39 /* Close door */
#define MSG_BASH				40 /* Bash door */
#define MSG_SPIKE				41 /* Spike a door */
#define MSG_DISARM_SUCCEED		42 /* Lockpick/disarm success */
#define MSG_DISARM_FAIL			43 /* Lockpick/disarm failure */
#define MSG_STAIRS				44 /* Climb stairs */
#define MSG_QUEST_FAIL			45 /* Succeed in quest */
#define MSG_QUEST_SUCCEED		46 /* Fail in quest */
#define MSG_TRAP				47 /* Hit a trap */
#define MSG_CRITICAL_HIT		48 /* Score critical hit */
#define MSG_FIND				49 /* Find something */
#define MSG_ITEM_RESIST			50 /* Item resists */
#define MSG_ITEM_DAMAGE			51 /* Item damaged */
#define MSG_ITEM_BONUS			52 /* Item enchanted */
#define MSG_ITEM_BREAK			53 /* Item break */
#define MSG_ITEM_RECHARGE		54 /* Item recharge */
#define MSG_PSEUDO_ID			55 /* Pseudo-ID */
#define MSG_THEFT				56 /* Item/gold stolen */
#define MSG_MON_FAIL			57 /* Monster fails at something */
#define MSG_SUMMON				58 /* Monster summoned */
#define MSG_DESCRIBE			59 /* Describe something */
#define MSG_DETECT				60 /* Detection spells */
#define MSG_FFALL				61 /* Feather Fall */
#define MSG_ROOM_DESC			62 /* Room description */

#define MSG_MAX					63

/*** Hack ***/

/*
 * Hack -- attempt to reduce various values
 */
#ifdef ANGBAND_LITE
# undef MACRO_MAX
# define MACRO_MAX	128
# undef QUARK_MAX
# define QUARK_MAX	128
# undef MESSAGE_MAX
# define MESSAGE_MAX	128
# undef MESSAGE_BUF
# define MESSAGE_BUF	4096
#endif

/*
 * List of commands that will be auto-repeated
 *
 * ToDo: This string should be user-configurable.
 */
#define AUTO_REPEAT_COMMANDS "TBDoc+"

/*
 * Indexes for various spells 
 */
#define POW_HEAL_1				1
#define POW_HEAL_2				2
#define POW_HEAL_3				3
#define POW_HEAL_4				4
#define POW_HEAL_5				5
#define POW_HEAL_CURE_1		 	6
#define POW_HEAL_CURE_2			7
#define POW_HEAL_CURE_3			8
#define POW_HEAL_CURE_4			9			
#define POW_LIFE				10
#define POW_RESTORE_MANA		11
#define POW_RESTORE_MANA_INT	12
#define POW_RESTORE_STR			13
#define POW_RESTORE_INT			14
#define POW_RESTORE_WIS			15
#define POW_RESTORE_DEX			16
#define POW_RESTORE_CON			17
#define POW_RESTORE_CHR			18
#define POW_RESTORE_STATS		19
#define POW_RESTORE_LEVEL		20
#define POW_RESTORE_ALL			21
#define POW_GAIN_STR			22
#define POW_GAIN_INT			23
#define POW_GAIN_WIS			24
#define POW_GAIN_DEX			25
#define POW_GAIN_CON			26
#define POW_GAIN_CHR			27
#define POW_GAIN_ALL			28
#define POW_GAIN_EXP			29
#define POW_CURE_CONFUSION		30
#define POW_CURE_DISEASE		31
#define POW_CURE_POISON			32
#define POW_CURE_POIS_DISE		33
#define POW_CURE_FEAR_POIS		34
#define POW_CURE_TAINT			35
#define POW_CURE_ALL			36
#define POW_CURE_BODY			37
#define POW_CLEAR_MIND			38
#define POW_TELE_10				39
#define POW_TELE_MINOR			40
#define POW_TELE_MAJOR			41
#define POW_TELE_OTHER			42
#define POW_TELE_OTHER_BEAM		43
#define POW_TELE_LEVEL			44
#define POW_TELE_CONTROL		45
#define POW_WORD_RECALL			46
#define POW_ALTER_REALITY		47
#define POW_ARROW				48
#define POW_BOLT_MISSILE		49
#define POW_BOLT_MISSILE_X		50
#define POW_BOLT_ACID_1			51
#define POW_BOLT_ACID_2			52
#define POW_BOLT_ACID_X			53
#define POW_BOLT_ELEC			54
#define POW_BOLT_ELEC_X			55
#define POW_BOLT_FIRE_1			56
#define POW_BOLT_FIRE_2			57
#define POW_BOLT_FIRE_3			58	
#define POW_BOLT_FIRE_X			59		
#define POW_BOLT_COLD_1			60
#define POW_BOLT_COLD_2			61
#define POW_BOLT_COLD_X			62
#define POW_BOLT_POISON_X		63
#define POW_BOLT_SOUND			64
#define POW_BOLT_FORCE_1		65
#define POW_BOLT_FORCE_2		66
#define POW_BOLT_LITE			67
#define POW_BOLT_DARK			68
#define POW_BOLT_WATER			69
#define POW_BOLT_MANA			70
#define POW_BOLT_MANA_X			71
#define POW_BOLT_NEXUS_X		72
#define POW_BEAM_WEAK_LITE		73
#define POW_BEAM_NETHER			74
#define POW_BALL_ACID			75
#define POW_BALL_ACID_X			76
#define POW_BALL_ELEC_1			77
#define POW_BALL_ELEC_2			78
#define POW_BALL_ELEC_X			79
#define POW_BALL_FIRE_1			80
#define POW_BALL_FIRE_2			81
#define POW_BALL_FIRE_3			82
#define POW_BALL_FIRE_X			83
#define POW_BALL_COLD_1			84
#define POW_BALL_COLD_2			85
#define POW_BALL_COLD_3			86
#define POW_BALL_COLD_X			87
#define POW_BALL_POISON			88
#define POW_BALL_POISON_X		89
#define POW_BALL_SOUND			90
#define POW_BALL_PLASMA			91
#define POW_BALL_MANA			92
#define POW_BALL_HOLY_1			93
#define POW_BALL_HOLY_2			94
#define POW_BALL_COLD_ELEC_X	95
#define POW_BALL_FIRE_ACID_X	96
#define POW_BALL_ELEM_X			97
#define POW_BALL_ANNIHILATION	98
#define POW_STAR_BEAM_W_LITE	99
#define POW_STAR_BALL_ELEC		100
#define POW_BANISH				101
#define POW_BLIGHT				102
#define POW_BURST_ASTRAL		103
#define POW_DRAIN_LIFE_1		104
#define POW_DRAIN_LIFE_2		105
#define POW_DRAIN_LIFE_3		106
#define POW_DISPEL_ALL			107
#define POW_DISPEL_UNDEAD_1		108
#define POW_DISPEL_UNDEAD_2		109
#define POW_DISPEL_DEMON		110
#define POW_DISPEL_NON_EVIL		111
#define POW_DISPEL_EVIL_3		112
#define POW_DISPEL_EVIL_4		113
#define POW_DISPEL_EVIL_5		114
#define POW_HOLY_1				115
#define POW_HOLY_2				116
#define POW_GENOCIDE			117
#define POW_MASS_GENOCIDE		118
#define POW_EARTHQUAKE			119
#define POW_DESTRUCTION			120
#define POW_LIGHT_AREA_1		121
#define POW_LIGHT_AREA_2		122
#define POW_DARK_AREA			123
#define POW_DETECT_MONSTERS		124
#define POW_DETECT_EVIL			125
#define POW_DETECT_INVIS		126
#define POW_DETECT_TRAP			127
#define POW_DETECT_TREASURE		128
#define POW_DETECT_DOOR_STAIR	129
#define POW_DETECT_TRAP_DOOR	130
#define POW_DETECT_ITEM			131
#define POW_DETECT_ENCHANT		132
#define POW_DETECT_ALL			133
#define POW_ABSORB_HIT			134
#define POW_BLESS_1				135
#define POW_BLESS_2				136
#define POW_BLESS_3				137
#define POW_HEROISM				138
#define POW_BOLDNESS			139
#define POW_STABILITY			140
#define POW_RAGE_1				141
#define POW_RAGE_2				142
#define POW_RAGE_BLESS_RESIST	143
#define POW_SHIELD				144
#define POW_INVIS_1				145
#define POW_INVIS_2				146
#define POW_RESILIENCE			147
#define POW_INFRAVISION			148
#define POW_STEALTH				149
#define POW_SEE_INVIS			150
#define POW_PROT_EVIL_1			151
#define POW_PROT_EVIL_2			152
#define POW_HASTE_SELF_1		153
#define POW_HASTE_SELF_2		154
#define POW_HASTE_SELF_3		155
#define POW_DISARM				156
#define POW_DEST_TRAP_DOOR_1	157
#define POW_DEST_TRAP_DOOR_2	158
#define POW_STONE_TO_MUD		159
#define POW_CREATE_WALL			160
#define POW_CREATE_DOOR			161
#define POW_CREATE_STAIR		162
#define POW_CREATE_TRAP			163
#define POW_MAGIC_LOCK			164
#define POW_ACQUIRE_1			165
#define POW_ACQUIRE_2			166
#define POW_AGGRAVATE			167
#define POW_AGGRAVATE_SAFE		168
#define POW_CONFUSE_MONSTER		169
#define POW_CONFUSE_ALL			170
#define POW_SLEEP_MONSTER		171
#define POW_SLEEP_ADJACENT		172
#define POW_SLEEP_ALL			173
#define POW_SLOW_MONSTER		174
#define POW_SLOW_ALL			175
#define POW_CALM_MONSTER		176
#define POW_CALM_ANIMALS		177
#define POW_CALM_NON_EVIL		178
#define POW_CALM_NON_CHAOS		179
#define POW_CALM_ALL			180
#define POW_BLIND_MONSTER		181
#define POW_SCARE_MONSTER		182
#define POW_SCARE_ALL			183
#define POW_CALL_MONSTER		184
#define POW_POLY_MONSTER		185
#define POW_HEAL_MONSTER		186
#define POW_HASTE_MONSTER		187
#define POW_CLONE_MONSTER		188
#define POW_SATISFY_HUNGER		189
#define POW_RECHARGE_1			190
#define POW_RECHARGE_2			191
#define POW_RECHARGE_3			192
#define POW_HYPERCHARGE			193
#define POW_IDENTIFY			194
#define POW_IDENTIFY_PACK		195
#define POW_IDENTIFY_FULL		196
#define POW_RES_ACID			197
#define POW_RES_ELEC			198
#define POW_RES_FIRE			199
#define POW_RES_COLD			200
#define POW_RES_ACID_ELEC		201
#define POW_RES_FIRE_COLD		202
#define POW_RES_POISON			203
#define POW_RES_DISEASE			204
#define POW_RES_SOUND			205
#define POW_RES_LITE_DARK		206
#define POW_RES_CHAOS_NEXUS		207
#define POW_RES_ELEMENTS		208
#define POW_RES_GREATER			209
#define POW_RESISTANCE			210
#define POW_GLYPH_WARDING		211
#define POW_GLYPH_LESSER		212
#define POW_GLYPH_HOLY			213
#define POW_REMOVE_CURSE_1		214
#define POW_REMOVE_CURSE_2		215
#define POW_MAP_1				216
#define POW_MAP_2				217
#define POW_MAP_3				218
#define POW_PROBE_MONSTER		219
#define POW_PROBE_ALL			220
#define POW_KNOW_ALL			221
#define POW_ENCHANT_WEAPON_1	222
#define POW_ENCHANT_WEAPON_2	223
#define POW_ENCHANT_ARMOR_1		224
#define POW_ENCHANT_ARMOR_2		225
#define POW_BRAND_WEAPON_ELMNT	226
#define POW_BRAND_AMMO_ANML		227
#define POW_BRAND_AMMO_WOUND	228
#define POW_BRAND_AMMO_ELMNT	229
#define POW_BRAND_AMMO_HOLY		230
#define POW_BIZZARE				231
#define POW_CURSE_EQUIP_1		232
#define POW_CURSE_EQUIP_2		233
#define POW_SUM_MONSTER			234
#define POW_SUM_UNDEAD			235
#define POW_SUM_DRAGON			236
#define POW_NAUSEA				237
#define POW_POISON_SELF			238
#define POW_BLIND_SELF			239
#define POW_CONFUSE_SELF		240
#define POW_SCARE_SELF			241
#define POW_SLOW_SELF			242
#define POW_PARALYZE			243
#define POW_HALLUCINATE			244
#define POW_DISEASE				245
#define POW_DEFORM				246
#define POW_TAINT				247
#define POW_AMNESIA				248
#define POW_LOSE_STR			249
#define POW_LOSE_INT			250
#define POW_LOSE_WIS			251
#define POW_LOSE_DEX			252
#define POW_LOSE_CON			253
#define POW_LOSE_CHR			254
#define POW_LOSE_EXP			255
#define POW_RUINATION			256
#define POW_DETONATE			257
#define POW_KILL_SELF			258
#define POW_DRAGON_BLACK		259
#define POW_DRAGON_BLUE			260
#define POW_DRAGON_WHITE		261
#define POW_DRAGON_RED			262
#define POW_DRAGON_GREEN		263
#define POW_DRAGON_GOLD			264
#define POW_DRAGON_SILVER		265
#define POW_DRAGON_MH			266
#define POW_DRAGON_SPIRIT		267
#define POW_DRAGON_SHADOW		268
#define POW_DRAGON_ETHER		269
#define POW_DRAGON_CHAOS		270
#define POW_DRAGON_TIME			271
#define POW_DRAGON_POWER		272
#define POW_RISK_HACK			273
#define POW_WONDER_HACK			274
#define POW_MUSIC_LYRE			275
#define POW_MUSIC_HORN			276
#define POW_MUSIC_FLUTE			277
#define POW_MUSIC_LUTE			278
#define POW_MUSIC_DRUM			279
#define POW_MUSIC_HARP			280

/* Total number of powers in the game + 1 */
#define POW_MAX					281

/* 
 * Hack - variables defined in order to be compatible with the general main*.c files.
 * DO NOT USE WITHIN EYANGBAND SOURCE FILES 
 */

/* Dungeon height variables */
#define DUNGEON_WID MAX_DUNGEON_WID
#define DUNGEON_HGT MAX_DUNGEON_HGT

/* Fake directory names - redirect to the save dir */
#define ANGBAND_DIR_BONE ANGBAND_DIR_SAVE
#define ANGBAND_DIR_INFO ANGBAND_DIR_SAVE

/* Maximum known sounds - Should be the same as MSG_MAX for compatibility reasons */
#define SOUND_MAX MSG_MAX

/* Old message print command */
#define msg_print(X) message(MSG_GENERIC, 0, (X))

