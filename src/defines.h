/* File: defines.h */

/* Purpose: global constants and macro definitions */


/*
 * Do not edit this file unless you know *exactly* what you are doing.
 *
 * Some of the values in this file were chosen to preserve game balance,
 * while others are hard-coded based on the format of old save-files, the
 * definition of arrays in various places, mathematical properties, fast
 * computation, storage limits, or the format of external text files.
 *
 * Changing some of these values will induce crashes or memory errors or
 * savefile mis-reads.  Most of the comments in this file are meant as
 * reminders, not complete descriptions, and even a complete knowledge
 * of the source may not be sufficient to fully understand the effects
 * of changing certain definitions.
 *
 * Lastly, note that the code does not always use the symbolic constants
 * below, and sometimes uses various hard-coded values that may not even
 * be defined in this file, but which may be related to definitions here.
 * This is of course bad programming practice, but nobody is perfect...
 *
 * For example, there are MANY things that depend on the screen being
 * 80x24, with the top line used for messages, the bottom line being
 * used for status, and exactly 22 lines used to show the dungeon.
 * Just because your screen can hold 46 lines does not mean that the
 * game will work if you try to use 44 lines to show the dungeon.
 *
 * You have been warned.
 */

            
/*
 * Current version number of Angband: 2.8.1
 */
#define VERSION_MAJOR   2
#define VERSION_MINOR   8
#define VERSION_PATCH   1

/* Added for NewAngband(code from old Pern) */
#define FAKE_VERSION   0
#define FAKE_VER_MAJOR 0
#define FAKE_VER_MINOR 5
#define FAKE_VER_PATCH 0

#define ANGBAND_2_8_1

/*
 * This value is not currently used
 */
#define VERSION_EXTRA   0


/*
 * Number of grids in each block (vertically)
 * Probably hard-coded to 11, see "generate.c"
 */
#define BLOCK_HGT	11

/*
 * Number of grids in each block (horizontally)
 * Probably hard-coded to 11, see "generate.c"
 */
#define BLOCK_WID	11


/*
 * Number of grids in each panel (vertically)
 * Must be a multiple of BLOCK_HGT
 */
#define PANEL_HGT	11

/*
 * Number of grids in each panel (horizontally)
 * Must be a multiple of BLOCK_WID
 */
#define PANEL_WID	33


/*
 * Number of grids used to display the dungeon (vertically).
 * Must be a multiple of 11, probably hard-coded to 22.
 */
#define SCREEN_HGT      22

/*
 * Number of grids used to display the dungeon (horizontally).
 * Must be a multiple of 33, probably hard-coded to 66.
 */
#define SCREEN_WID      66


/*
 * Maximum dungeon height in grids, must be a multiple of SCREEN_HGT,
 * probably hard-coded to SCREEN_HGT * 3.
 */
#define MAX_HGT         66

/*
 * Maximum dungeon width in grids, must be a multiple of SCREEN_WID,
 * probably hard-coded to SCREEN_WID * 3.
 */
#define MAX_WID         198

/* Used only in object3.c / trap effects */
#if ((MAX_HGT / SCREEN_HGT) < (MAX_WID / SCREEN_WID))
 #define RATIO (MAX_WID / SCREEN_WID)
#else
 #define RATIO (MAX_HGT / SCREEN_HGT)
#endif

#define CHANCE_TRAP_JAMMED_DOOR 2500
#define CHANCE_TRAP_SECRET_DOOR 1500
#define CHANCE_TRAP_LOCKED_DOOR 1000
#define CHANCE_TRAP_DOOR  500        /* in 10000 */
#define CHANCE_TRAP_FLOOR 4          /* in 10000 chance of placing a trap */

/*
 * Quest constants
 */
#define MAX_MON_QUEST       10
#define MAX_ITEM_QUEST       5

#define MIN_RANDOM_QUEST    40
#define MAX_RANDOM_QUEST    88

#define QUEST_SHELOB         6
#define QUEST_SAURON         8
#define QUEST_MORGOTH        9
#define QUEST_ARAKZATRYS     11
#define QUEST_VARIAZ         12

#define MAX_BOUNTIES        24

#define MAX_SPELLS          100

/*
 * Arena constants
 */
#define MAX_ARENA_MONS		29	/* -KMW- */


/*
 * Total number of stores (see "store.c", etc)
 */
#define MAX_STORES      13

/*
 * Number of buildings
 */
#define MAX_BLDG		32

/*
 * Total number of stores (see "store.c", etc)
 */
#define MAX_STORES_PER_TOWN 13
#define MAX_STORE_TYPES     13

#define STORE_GENERAL   0
#define STORE_ARMOURY   1
#define STORE_WEAPON    2
#define STORE_TEMPLE    3
#define STORE_ALCHEMIST 4
#define STORE_MAGIC     5
#define STORE_BLACK     6
#define STORE_HOME      7
#define STORE_DUNGEON   8
#define STORE_LICIAL    9
#define STORE_RARE      10
#define STORE_RODS      11
#define STORE_MUSIC     12


#define BUILDING_NON_MEMBER 0
#define BUILDING_MEMBER     1
#define BUILDING_OWNER      2

/*
 * Total number of owners per store (see "store.c", etc)
 */
#define MAX_OWNERS      4

/*
 * Maximum number of player "sex" types (see "table.c", etc)
 */
#define MAX_SEXES            3

/*
 * Maximum number of player "race" types (see "table.c", etc)
 */
#define MAX_RACES           11

/*
 * Maximum number of player "class" types (see "table.c", etc)
 */
#define MAX_CLASS            50

/* Maximum number of abilities. Should theorically be MAX_CLASS * 10 */
#define MAX_ABILITIES        500

/* Maximum vaults. */
#define MAX_VAULTS	200

/* The number of "patrons" available (for Chaos Warriors) */
#define MAX_PATRON          16

/* Number of Random Artifacts */
#define MAX_RANDARTS 84
#define MAX_T_ACT    52

/* Max wilderness size */
#define MAX_WILD_X 1000
#define MAX_WILD_Y 1000

/* Chaos Warrior: Reward types: */
#define REW_POLY_SLF    0
#define REW_GAIN_EXP    1
#define REW_LOSE_EXP    2
#define REW_GOOD_OBJ    3
#define REW_GREA_OBJ    4
#define REW_CHAOS_WP    5
#define REW_GOOD_OBS    6
#define REW_GREA_OBS    7
#define REW_SUMMON_M    9
#define REW_H_SUMMON    10
#define REW_DO_HAVOC    11
#define REW_GAIN_ABL    12
#define REW_LOSE_ABL    13
#define REW_RUIN_ABL    14
#define REW_AUGM_ABL    15
#define REW_POLY_WND    16
#define REW_HEAL_FUL    17
#define REW_HURT_LOT    18
#define REW_CURSE_WP    19
#define REW_CURSE_AR    20
#define REW_PISS_OFF    21
#define REW_WRATH       22
#define REW_DESTRUCT    23
#define REW_GENOCIDE    24
#define REW_MASS_GEN    25
#define REW_DISPEL_C    26
#define REW_UNUSED_1    27
#define REW_UNUSED_2    28
#define REW_UNUSED_3    29
#define REW_UNUSED_4    30
#define REW_UNUSED_5    31
#define REW_IGNORE      32
#define REW_SER_UNDE    33
#define REW_SER_DEMO    34
#define REW_SER_MONS    35

/* Mutations! */
/* They are redone for NewAngband. */


/* Monk martial arts... */
# define MAX_MA 17
# define MA_KNEE 1
# define MA_SLOW 2


/* A hack for cave.c */
#define BMP_FIRST_PC_CLASS 164
#define BMP_FIRST_PC_RACE 128


/*
 * Size of memory reserved for initialization of some arrays
 */
#define FAKE_NAME_SIZE  80 * 1024L
#define FAKE_TEXT_SIZE 240 * 1024L


/*
 * Maximum number of high scores in the high score file
 */
#define MAX_HISCORES    100


/*
 * Maximum dungeon level.  The player can never reach this level
 * in the dungeon, and this value is used for various calculations
 * involving object and monster creation.  It must be at least 100.
 * Setting it below 128 may prevent the creation of some objects.
 */
#define MAX_DEPTH       1024


/*
 * Maximum size of the "lite" array (see "cave.c")
 * Note that the "lite radius" will NEVER exceed 5, and even if the "lite"
 * was rectangular, we would never require more than 128 entries in the array.
 */
#define LITE_MAX 128

/*
 * Maximum size of the "view" array (see "cave.c")
 * Note that the "view radius" will NEVER exceed 20, and even if the "view"
 * was octagonal, we would never require more than 1520 entries in the array.
 */
#define VIEW_MAX 1536

/*
 * Maximum size of the "temp" array (see "cave.c")
 * We must be as large as "VIEW_MAX" and "LITE_MAX" for proper functioning
 * of "update_view()" and "update_lite()".  We must also be as large as the
 * largest illuminatable room, but no room is larger than 800 grids.  We
 * must also be large enough to allow "good enough" use as a circular queue,
 * to calculate monster flow, but note that the flow code is "paranoid".
 */
#define TEMP_MAX 1536


/*
 * Number of keymap modes
 */
#define KEYMAP_MODES	2

/*
 * Mode for original keyset commands
 */
#define KEYMAP_MODE_ORIG	0

/*
 * Mode for roguelike keyset commands
 */
#define KEYMAP_MODE_ROGUE	1


/*
 * OPTION: Maximum number of macros (see "io.c")
 * Default: assume at most 256 macros are used
 */
#define MACRO_MAX       256

/*
 * OPTION: Maximum number of "quarks" (see "io.c")
 * Default: assume at most 512 different inscriptions are used
 */
#define QUARK_MAX       768
        /* Was 512... 256 quarks added for random artifacts */

/*
 * OPTION: Maximum number of messages to remember (see "io.c")
 * Default: assume maximal memorization of 2048 total messages
 */
#define MESSAGE_MAX     2048

/*
 * OPTION: Maximum space for the message text buffer (see "io.c")
 * Default: assume that each of the 2048 messages is repeated an
 * average of three times, and has an average length of 48
 */
#define MESSAGE_BUF     32768


/*
 * Maximum value storable in a "byte" (hard-coded)
 */
#define MAX_UCHAR       255

/*
 * Maximum value storable in a "s16b" (hard-coded)
 */
#define MAX_SHORT       32767


/*
 * Store constants
 */
#define STORE_INVEN_MAX 24              /* Max number of discrete objs in inven */
#define STORE_CHOICES   100              /* Number of items to choose stock from */
#define STORE_OBJ_LEVEL 5               /* Magic Level for normal stores */
#define STORE_TURNOVER  9               /* Normal shop turnover, per day */
#define STORE_MIN_KEEP  6               /* Min slots to "always" keep full */
#define STORE_MAX_KEEP  18              /* Max slots to "always" keep full */
#define STORE_SHUFFLE   21              /* 1/Chance (per day) of an owner changing */
#define STORE_TURNS             1000    /* Number of turns between turnovers */

/* Home max constant. */
#define HOME_INVEN_MAX 600

/*
 * Misc constants
 */
#define TOWN_DAWN               10000   /* Number of turns from dawn to dawn XXX */
#define BREAK_GLYPH             550             /* Rune of protection resistance */
#define BREAK_MINOR_GLYPH       99             /* For explosive runes */
#define BTH_PLUS_ADJ    3       /* Adjust BTH per plus-to-hit */
#define MON_MULT_ADJ    8               /* High value slows multiplication */
#define MON_SUMMON_ADJ  2               /* Adjust level of summoned creatures */
#define MON_DRAIN_LIFE  2               /* Percent of player exp drained per hit */
#define USE_DEVICE      3               /* x> Harder devices x< Easier devices     */

#define BIAS_ELEC 1                     /* "Biases" for random artifact gen */
#define BIAS_POIS 2
#define BIAS_FIRE 3
#define BIAS_COLD 4
#define BIAS_ACID 5
#define BIAS_STR 6
#define BIAS_INT 7
#define BIAS_WIS 8
#define BIAS_DEX 9
#define BIAS_CON 10
#define BIAS_CHR 11
#define BIAS_CHAOS 12
#define BIAS_PRIESTLY 13
#define BIAS_NECROMANTIC 14
#define BIAS_LAW 15
#define BIAS_ROGUE 16
#define BIAS_MAGE 17
#define BIAS_WARRIOR 18
#define BIAS_RANGER 19

/*
 * There is a 1/20 (5%) chance of inflating the requested object_level
 * during the creation of an object (see "get_obj_num()" in "object.c").
 * Lower values yield better objects more often.
 */
/* Currently set at 1%! */
#define GREAT_OBJ       100

/*
 * There is a 1/50 (2%) chance of inflating the requested monster_level
 * during the creation of a monsters (see "get_mon_num()" in "monster.c").
 * Lower values yield harder monsters more often.
 */
#define NASTY_MON       50              /* 1/chance of inflated monster level */



/*
 * Refueling constants
 */
#define FUEL_TORCH      5000    /* Maximum amount of fuel in a torch */
#define FUEL_LAMP       15000   /* Maximum amount of fuel in a lantern */


/*
 * More maximum values
 */
#define MAX_SIGHT       20      /* Maximum view distance */
#define MAX_RANGE       18      /* Maximum range (spells, etc) */



/*
 * The town starts out with 4 residents during the day
 */
#define MIN_M_ALLOC_TD          4

/*
 * The town starts out with 8 residents during the night
 */
#define MIN_M_ALLOC_TN          8


/*
 * A monster can only "multiply" (reproduce) if there are fewer than 100
 * monsters on the level capable of such spontaneous reproduction.  This
 * is a hack which prevents the "m_list[]" array from exploding due to
 * reproducing monsters.  Messy, but necessary.
 */
#define MAX_REPRO       100


/*
 * Player constants
 */
#define PY_MAX_EXP      999999999L       /* Maximum exp */
#define PY_MAX_GOLD     999999999L      /* Maximum gold */
#define PY_MAX_LEVEL    200              /* Maximum level */

/*
 * Player regeneration constants
 */
#define PY_REGEN_NORMAL         197             /* Regen factor*2^16 when full */
#define PY_REGEN_WEAK           98              /* Regen factor*2^16 when weak */
#define PY_REGEN_FAINT          33              /* Regen factor*2^16 when fainting */
#define PY_REGEN_HPBASE         1442    /* Min amount hp regen*2^16 */
#define PY_REGEN_MNBASE         524             /* Min amount mana regen*2^16 */

/*
 * Maximum number of "normal" pack slots, and the index of the "overflow"
 * slot, which can hold an item, but only temporarily, since it causes the
 * pack to "overflow", dropping the "last" item onto the ground.  Since this
 * value is used as an actual slot, it must be less than "INVEN_WIELD" (below).
 * Note that "INVEN_PACK" is probably hard-coded by its use in savefiles, and
 * by the fact that the screen can only show 23 items plus a one-line prompt.
 */
#define INVEN_PACK              23

/*
 * Body parts
 */
#define BODY_WEAPON     0
#define BODY_TORSO      1
#define BODY_ARMS       2
#define BODY_FINGER     3
#define BODY_HEAD       4
#define BODY_LEGS       5
#define BODY_MAX        6

/*
 * Indexes used for various "equipment" slots (hard-coded by savefiles, etc).
 */
#define INVEN_WIELD     24 /* 3 weapons -- WEAPONS */
#define INVEN_BOW       27 /* 1 bow -- WEAPON */
#define INVEN_RING      28 /* 6 rings -- FINGER */
#define INVEN_NECK      34 /* 2 amulets -- HEAD */
#define INVEN_LITE      36 /* 1 lite -- TORSO */
#define INVEN_BODY      37 /* 1 body -- TORSO */
#define INVEN_OUTER     38 /* 1 cloak -- TORSO */
#define INVEN_ARM       39 /* 3 arms -- ARMS */
#define INVEN_HEAD      42 /* 2 heads -- HEAD */
#define INVEN_HANDS     44 /* 3 hands -- ARMS */
#define INVEN_FEET      47 /* 2 feets --LEGS */
#define INVEN_AMMO      50 /* 1 quiver -- TORSO */
#define INVEN_TOOL      51 /* 1 tool -- ARMS */
#define INVEN_ESSENCE   52 /* Essence slots for Monster race. */

/*
 * Total number of inventory slots (hard-coded).
 */
#define INVEN_TOTAL     65

/*
 * A "stack" of items is limited to less than 100 items (hard-coded).
 */
#define MAX_STACK_SIZE                  100



/*
 * Indexes of the various "stats" (hard-coded by savefiles, etc).
 */
#define A_STR   0
#define A_INT   1
#define A_WIS   2
#define A_DEX   3
#define A_CON   4
#define A_CHR   5

/* Skills constants! */
#define SKILL_MAX 50

/* Resistances constant. */
#define MAX_RESIST 200


/*
 * Player sex constants (hard-coded by save-files, arrays, etc)
 */
#define SEX_FEMALE              0
#define SEX_MALE                1
#define SEX_NEUTER              2

/*
 * Player race constants (hard-coded by save-files, arrays, etc)
 */
#define RACE_HUMAN              0
#define RACE_HALF_ELF           1
#define RACE_ELF                2
#define RACE_DWARF              3
#define RACE_GNOME              4
#define RACE_KOBOLD             5
#define RACE_DEVLING            6
#define RACE_CELESTIAL          7
#define RACE_DEMON              8
#define RACE_ZULGOR             9
#define RACE_MONSTER            10


#define RACE_HOBBIT             25
#define RACE_HALF_ORC           26
#define RACE_HALF_TROLL         27
#define RACE_DUNADAN            28
#define RACE_HIGH_ELF           29
#define RACE_BARBARIAN          30
#define RACE_VAMPIRE            31
#define RACE_HALF_OGRE          11
#define RACE_HALF_GIANT         12
#define RACE_NIBELUNG           14
#define RACE_DARK_ELF           15
#define RACE_ENT                17
#define RACE_BENEMAL            19
#define RACE_SKELETON           21
#define RACE_DEMONUNDEAD        24

/*
 * Player class constants (hard-coded by save-files, arrays, etc)
 */

/* Basic Classes */
#define CLASS_APPRENTICE        0
#define CLASS_WARRIOR           1
#define CLASS_FIGHTER           2
#define CLASS_MAGE              3
#define CLASS_PRIEST            4
#define CLASS_ROGUE             5
#define CLASS_RANGER            6
#define CLASS_PALADIN           7
#define CLASS_MONK              8
#define CLASS_MARKSMAN            9

/* Advanced Classes */
#define CLASS_HIGH_MAGE         10
#define CLASS_ELEM_LORD         11
#define CLASS_MONSTER_MAGE      12
#define CLASS_DEFENDER          13
#define CLASS_JUSTICE_WARRIOR   14
#define CLASS_ZELAR             15
#define CLASS_SOUL_GUARDIAN     16
#define CLASS_SHADOW            17
#define CLASS_ENCHANTER         19
#define CLASS_DIVINER           20
#define CLASS_MONSTER           22
#define CLASS_BARD              23

/* Nightmare abilities templates */
#define CLASS_NIGHT1            40
#define CLASS_NIGHT2            41
#define CLASS_NIGHT3            42
#define CLASS_NIGHT4            43
#define CLASS_NIGHT5            44

/*** Screen Locations ***/

/*
 * Some screen locations for various display routines
 * Currently, row 8 and 15 are the only "blank" rows.
 * That leaves a "border" around the "stat" values.
 */

#define ROW_RACE                1
#define COL_RACE                0       /* <race name> */

#define ROW_CLASS               2
#define COL_CLASS               0       /* <class name> */

#define ROW_TITLE               3
#define COL_TITLE               0       /* <title> or <mode> */

#define ROW_LEVEL               4
#define COL_LEVEL               0       /* "LEVEL xxxxxx" */

#define ROW_EXP                 5
#define COL_EXP                 0       /* "EXP xxxxxxxx" */

#define ROW_GOLD                6
#define COL_GOLD                0       /* "AU xxxxxxxxx" */

#define ROW_STAT                8
#define COL_STAT                0       /* "xxx   xxxxxx" */

#define ROW_AC                  14
#define COL_AC                  0       /* "Cur AC xxxxx" */

#define ROW_HP                  16
#define COL_HP                  0       /* "HP xxxxx/xxxxx" */

#define ROW_SANITY              16      /* "Sanity  100%" */
#define COL_SANITY              0

#define ROW_SP                  17
#define COL_SP                  0       /* "SP xxxxx/xxxxx" */
 
#define ROW_TP                  18
#define COL_TP                  0       /* "TP xxxxx/xxxxx" */
 
#define ROW_MH                  19
#define COL_MH                  0       /* "MH xxxxx/xxxxx" */

#define ROW_INFO                20
#define COL_INFO                0       /* "xxxxxxxxxxxx" */

#define ROW_CUT                 21
#define COL_CUT                 0       /* <cut> */

#define ROW_STUN                22
#define COL_STUN                0       /* <stun> */

#define ROW_HUNGRY              23
#define COL_HUNGRY              0       /* "Weak" / "Hungry" / "Full" / "Gorged" */

#define ROW_BLIND               23
#define COL_BLIND               7       /* "Blind" */

#define ROW_CONFUSED    23
#define COL_CONFUSED    13      /* "Confused" */

#define ROW_AFRAID              23
#define COL_AFRAID              22      /* "Afraid" */

#define ROW_POISONED    23
#define COL_POISONED    29      /* "Poisoned" */

#define ROW_STATE               23
#define COL_STATE               38      /* <state> */

#define ROW_SPEED               23
#define COL_SPEED               49      /* "Slow (-NN)" or "Fast (+NN)" */

#define ROW_STUDY               23
#define COL_STUDY               64      /* "Study" */

#define ROW_DEPTH               23
#define COL_DEPTH               64      /* "Lev NNN" / "NNNN ft" */



/*** Terrain Feature Indexes (see "lib/edit/f_info.txt") ***/

/* Nothing */
#define FEAT_NONE               0x00

/* Various */
#define FEAT_FLOOR              0x01
/*** 0x02 UNUSED ***/
#define FEAT_GLYPH              0x03
#define FEAT_OPEN               0x04
#define FEAT_BROKEN             0x05
#define FEAT_LESS               0x06
#define FEAT_MORE               0x07

/* Quest features -KMW- */
#define FEAT_QUEST_ENTER		0x08
#define FEAT_QUEST_EXIT			0x09
#define FEAT_QUEST_DOWN			0x0A
#define FEAT_QUEST_UP			0x0B

/* Shafts -GSN- */
#define FEAT_SHAFT_DOWN         0x0D
#define FEAT_SHAFT_UP           0x0E

/* Open Ice door */
#define FEAT_ICE_OPEN           0x0F

/* Broken Ice Door */
#define FEAT_ICE_BROKEN         0x10

/* Doors */
#define FEAT_DOOR_HEAD  0x20
#define FEAT_DOOR_TAIL  0x2F

#define FEAT_ICE_DOOR_HEAD 0x67
#define FEAT_ICE_DOOR_TAIL 0x76

/* Extra */
#define FEAT_SECRET             0x30
#define FEAT_RUBBLE             0x31
#define FEAT_ICE_SECRET         0x77

/* Seams */
#define FEAT_MAGMA              0x32
#define FEAT_QUARTZ             0x33
#define FEAT_MAGMA_H    0x34
#define FEAT_QUARTZ_H   0x35
#define FEAT_MAGMA_K    0x36
#define FEAT_QUARTZ_K   0x37

/* Walls */
#define FEAT_WALL_EXTRA 0x38
#define FEAT_WALL_INNER 0x39
#define FEAT_WALL_OUTER 0x3A
#define FEAT_WALL_SOLID 0x3B
#define FEAT_PERM_EXTRA 0x3C
#define FEAT_PERM_INNER 0x3D
#define FEAT_PERM_OUTER 0x3E
#define FEAT_PERM_SOLID 0x3F

/* Glyph */
#define FEAT_MINOR_GLYPH 0x40

/* Pattern */
#define FEAT_PATTERN_START 0x41
#define FEAT_PATTERN_1  0x42
#define FEAT_PATTERN_2  0x43
#define FEAT_PATTERN_3  0x44
#define FEAT_PATTERN_4  0x45
#define FEAT_PATTERN_END 0x46
#define FEAT_PATTERN_OLD 0x47
#define FEAT_PATTERN_XTRA1 0x48
#define FEAT_PATTERN_XTRA2 0x49

/* Shops */
#define FEAT_SHOP_HEAD  204
#define FEAT_SHOP_TAIL  216

/* Terrains */
#define FEAT_DEEP_WATER         187
#define FEAT_SHAL_WATER		0x54
#define FEAT_DEEP_LAVA		0x55
#define FEAT_SHAL_LAVA		0x56
#define FEAT_DARK_PIT		0x57
#define FEAT_DIRT			0x58
#define FEAT_GRASS			0x59

/* Feature 0x5A - 0x5F unused */

/* Terrain */
#define FEAT_TREES			0x60
#define FEAT_MOUNTAIN		0x61
#define FEAT_SNOW		0x62
#define FEAT_SNOW_TREES		0x63
#define FEAT_GLACIER		0x64
#define FEAT_ICE_WALL		0x65
#define FEAT_PERM_ICE_WALL	0x66

/* Feature 0x62 - 0x7F unused */

/* Buildings */
#define FEAT_BLDG_HEAD		0x80
#define FEAT_BLDG_TAIL		0x9F

/* Between */
#define FEAT_BETWEEN            160

/* Altar */
#define FEAT_ALTAR_HEAD         161
#define FEAT_ALTAR_TAIL         172

/* Special Features */
#define FEAT_GLASS_WALL         188
#define FEAT_ILLUS_WALL         189

/*** xxx(lots see f_info.txt) used xxx ***/
#define FEAT_TOWN               203
#define FEAT_ENCOUNTER          220
#define FEAT_FIRE_FIELD          221
#define FEAT_COLD_FIELD          222
#define FEAT_ELEC_FIELD          223
#define FEAT_WEBS                225
#define FEAT_SANCTIFY            226
#define FEAT_VINE_FIELD          229
#define FEAT_THORNED_VINES       230
#define FEAT_STORMS              231
#define FEAT_DARK_MIST           232

/*
 * Wilderness terrains
 */
#define TERRAIN_EDGE             0 /* Edge of the World */
#define TERRAIN_TOWN             1 /* Town */
#define TERRAIN_DEEP_WATER       2 /* Deep water */
#define TERRAIN_SHALLOW_WATER    3 /* Shallow water */
#define TERRAIN_SWAMP            4 /* Swamp */
#define TERRAIN_DIRT             5 /* Dirt */
#define TERRAIN_GRASS            6 /* Grass */
#define TERRAIN_TREES            7 /* Trees */
#define TERRAIN_DESERT           8 /* Desert */
#define TERRAIN_SHALLOW_LAVA     9 /* Shallow lava */
#define TERRAIN_DEEP_LAVA       10 /* Deep lava */
#define TERRAIN_MOUNTAIN        11 /* Mountain */

#define MAX_WILD_TERRAIN        18

/*** Object "tval" and "sval" codes ***/


/*
 * The values for the "tval" field of various objects.
 *
 * This value is the primary means by which items are sorted in the
 * player inventory, followed by "sval" and "cost".
 *
 * Note that a "BOW" with tval = 19 and sval S = 10*N+P takes a missile
 * weapon with tval = 16+N, and does (xP) damage when so combined.  This
 * fact is not actually used in the source, but it kind of interesting.
 *
 * Note that as of 2.7.8, the "item flags" apply to all items, though
 * only armor and weapons and a few other items use any of these flags.
 */

#define TV_SKELETON      1      /* Skeletons ('s') */
#define TV_BOTTLE        2      /* Empty bottles ('!') */
#define TV_BATERIE       4      /* For the Alchemists */
#define TV_SPIKE         5      /* Spikes ('~') */
#define TV_MSTAFF        6      /* Mage Staffs */
#define TV_CHEST         7      /* Chests ('~') */
#define TV_PARCHEMENT    8      /* Parchements from Kamband */
#define TV_CORPSE        9      /* Monster corpses */
#define TV_EGG          10      /* Monster Eggs */
#define TV_JUNK         11      /* Sticks, Pottery, etc ('~') */
#define TV_TOOL         12      /* Tools */
#define TV_THROWING     15      /* Throwing weapons */
#define TV_AMMO         16
#define TV_RANGED       19      /* Ranged weapon. */
#define TV_DIGGING      20      /* Shovels/Picks */
#define TV_WEAPON       21      /* A weapon. */
#define TV_BOOTS        30      /* Boots */
#define TV_GLOVES       31      /* Gloves */
#define TV_HELM         32      /* Helms */
#define TV_CROWN        33      /* Crowns */
#define TV_SHIELD       34      /* Shields */
#define TV_CLOAK        35      /* Cloaks */
#define TV_SOFT_ARMOR   36      /* Soft Armor */
#define TV_HARD_ARMOR   37      /* Hard Armor */
#define TV_DRAG_ARMOR   38      /* Dragon Scale Mail */
#define TV_LITE         39      /* Lites (including Specials) */
#define TV_AMULET       40      /* Amulets (including Specials) */
#define TV_ARM_BAND     41      /* Arm bands */
#define TV_RING         45      /* Rings (including Specials) */
#define TV_STAFF        55
#define TV_WAND         65
#define TV_ROD          66
#define TV_SOUL         67
#define TV_ESSENCE      68
#define TV_SCROLL       70
#define TV_POTION       71
#define TV_FLASK        77
#define TV_LICIALHYD    78	/* Here's the newcomer in NewAngband 1.8.0! :) */
/* New tvals for effects books! :) */
#define TV_BOOK_ELEMENTAL 81
#define TV_BOOK_ALTERATION 82
#define TV_BOOK_MYSTICISM 83
#define TV_BOOK_CONJURATION 84
#define TV_BOOK_DIVINATION 85

/* Songs components */
#define TV_RHYTHM       90
#define TV_HARMONY      91
#define TV_MELODY       92
#define TV_INSTRUMENT   93

#define TV_HYPNOS       99      /* To wield monsters !:) */
#define TV_GOLD         100     /* Gold can only be picked up by players */
#define TV_RANDART      102     /* Random Artifacts */
#define TV_CRYSTAL      106     /* NEW: Magic crystals to use with rods */

/* The "sval" codes for TV_TOOL */
#define SV_TOOL_CLIMB 0

/* The "sval" codes for TV_MSTAFF */
#define SV_MSTAFF 1

/* The "sval" codes for TV_SHOT/TV_ARROW/TV_BOLT */
#define SV_AMMO_LIGHT                    0	/* pebbles */
#define SV_AMMO_NORMAL                   1	/* shots, arrows, bolts */
#define SV_AMMO_HEAVY                    2	/* seeker arrows and bolts, mithril shots */

/* The sval codes for TV_LITE */
#define SV_LITE_TORCH                    0
#define SV_LITE_LANTERN                  1

/* The "sval" codes for TV_AMULET */
#define SV_AMULET_DOOM                   0
#define SV_AMULET_TELEPORT               1
#define SV_AMULET_ADORNMENT              2
#define SV_AMULET_SLOW_DIGEST            3
#define SV_AMULET_RESIST_ACID            4
#define SV_AMULET_SEARCHING              5
#define SV_AMULET_WISDOM                 6
#define SV_AMULET_CHARISMA               7
#define SV_AMULET_THE_MAGI               8
#define SV_AMULET_REFLECTION             9
#define SV_AMULET_CARLAMMAS             10
#define SV_AMULET_INGWE                 11
#define SV_AMULET_DWARVES               12
#define SV_AMULET_NO_MAGIC              13
#define SV_AMULET_NO_TELE               14
#define SV_AMULET_RESISTANCE            15
#define SV_AMULET_NOTHING               16
#define SV_AMULET_SERPENT               17
#define SV_AMULET_UNDEAD                18
#define SV_AMULET_INTELLIGENCE          19
#define SV_AMULET_SACRED                20
#define SV_AMULET_HOLD_LIFE             21
#define SV_AMULET_LIFE                  22
#define SV_AMULET_HERO                  23
#define SV_AMULET_LITE                  24
#define SV_AMULET_NINJA                 25
#define SV_AMULET_GOLEM                 26
#define SV_AMULET_INFRA_VISION          27
#define SV_AMULET_TELEPATHY             28

/* The sval codes for TV_RING */
#define SV_RING_WOE                      0
#define SV_RING_AGGRAVATION              1
#define SV_RING_WEAKNESS                 2
#define SV_RING_STUPIDITY                3
#define SV_RING_TELEPORTATION            4
#define SV_RING_SPECIAL                  5
#define SV_RING_SLOW_DIGESTION           6
#define SV_RING_FEATHER_FALL             7
#define SV_RING_RESIST_FIRE              8
#define SV_RING_RESIST_COLD              9
#define SV_RING_SUSTAIN_STR             10
#define SV_RING_SUSTAIN_INT             11
#define SV_RING_SUSTAIN_WIS             12
#define SV_RING_SUSTAIN_DEX             13
#define SV_RING_SUSTAIN_CON             14
#define SV_RING_SUSTAIN_CHR             15
#define SV_RING_PROTECTION              16
#define SV_RING_ACID                    17
#define SV_RING_FLAMES                  18
#define SV_RING_ICE                     19
#define SV_RING_RESIST_POIS             20
#define SV_RING_FREE_ACTION             21
#define SV_RING_SEE_INVIS               22
#define SV_RING_SEARCHING               23
#define SV_RING_STR                     24
#define SV_RING_INT                     25
#define SV_RING_DEX                     26
#define SV_RING_CON                     27
#define SV_RING_ACCURACY                28
#define SV_RING_DAMAGE                  29
#define SV_RING_SLAYING                 30
#define SV_RING_SPEED                   31
#define SV_RING_BARAHIR                 32
#define SV_RING_TULKAS                  33
#define SV_RING_NARYA                   34
#define SV_RING_NENYA                   35
#define SV_RING_VILYA                   36
#define SV_RING_POWER                   37
#define SV_RING_RES_FEAR                38
#define SV_RING_RES_LD                  39
#define SV_RING_RES_NETHER              40
#define SV_RING_RES_NEXUS               41
#define SV_RING_RES_SOUND               42
#define SV_RING_RES_CONFUSION           43
#define SV_RING_RES_SHARDS              44
#define SV_RING_RES_DISENCHANT          45
#define SV_RING_RES_CHAOS               46
#define SV_RING_RES_BLINDNESS           47
#define SV_RING_LORDLY                  48
#define SV_RING_ATTACKS                 49
#define SV_RING_NOTHING                 50
#define SV_RING_FLAR                    52
#define SV_RING_INVIS                   53
#define SV_RING_FLYING                  54
#define SV_RING_WRAITH                  55
#define SV_RING_SAFETY                  56

/* The "sval" codes for TV_STAFF */
#define SV_STAFF_DARKNESS                0
#define SV_STAFF_SLOWNESS                1
#define SV_STAFF_HASTE_MONSTERS          2
#define SV_STAFF_SUMMONING               3
#define SV_STAFF_TELEPORTATION           4
#define SV_STAFF_IDENTIFY                5
#define SV_STAFF_REMOVE_CURSE            6
#define SV_STAFF_STARLITE                7
#define SV_STAFF_LITE                    8
#define SV_STAFF_MAPPING                 9
#define SV_STAFF_DETECT_GOLD            10
#define SV_STAFF_DETECT_ITEM            11
#define SV_STAFF_DETECT_TRAP            12
#define SV_STAFF_DETECT_DOOR            13
#define SV_STAFF_DETECT_INVIS           14
#define SV_STAFF_DETECT_EVIL            15
#define SV_STAFF_CURE_LIGHT             16
#define SV_STAFF_CURING                 17
#define SV_STAFF_HEALING                18
#define SV_STAFF_THE_MAGI               19
#define SV_STAFF_SLEEP_MONSTERS         20
#define SV_STAFF_SLOW_MONSTERS          21
#define SV_STAFF_SPEED                  22
#define SV_STAFF_PROBING                23
#define SV_STAFF_DISPEL_EVIL            24
#define SV_STAFF_POWER                  25
#define SV_STAFF_HOLINESS               26
#define SV_STAFF_GENOCIDE               27
#define SV_STAFF_EARTHQUAKES            28
#define SV_STAFF_DESTRUCTION            29
#define SV_STAFF_NOTHING                30
#define SV_STAFF_WISHING                31

/* jk - the first valuable staff */
#define SV_STAFF_NASTY_STAFF              4

/* The "sval" codes for TV_WAND */
#define SV_WAND_HEAL_MONSTER             0
#define SV_WAND_HASTE_MONSTER            1
#define SV_WAND_CLONE_MONSTER            2
#define SV_WAND_TELEPORT_AWAY            3
#define SV_WAND_DISARMING                4
#define SV_WAND_TRAP_DOOR_DEST           5
#define SV_WAND_STONE_TO_MUD             6
#define SV_WAND_LITE                     7
#define SV_WAND_SLEEP_MONSTER            8
#define SV_WAND_SLOW_MONSTER             9
#define SV_WAND_CONFUSE_MONSTER         10
#define SV_WAND_FEAR_MONSTER            11
#define SV_WAND_DRAIN_LIFE              12
#define SV_WAND_POLYMORPH               13
#define SV_WAND_STINKING_CLOUD          14
#define SV_WAND_MAGIC_MISSILE           15
#define SV_WAND_ACID_BOLT               16
#define SV_WAND_CHARM_MONSTER           17
#define SV_WAND_FIRE_BOLT               18
#define SV_WAND_COLD_BOLT               19
#define SV_WAND_ACID_BALL               20
#define SV_WAND_ELEC_BALL               21
#define SV_WAND_FIRE_BALL               22
#define SV_WAND_COLD_BALL               23
#define SV_WAND_WONDER                  24
#define SV_WAND_ANNIHILATION            25
#define SV_WAND_DRAGON_FIRE             26
#define SV_WAND_DRAGON_COLD             27
#define SV_WAND_DRAGON_BREATH           28
#define SV_WAND_ROCKETS                 29
#define SV_WAND_NOTHING                 30
#define SV_WAND_WALL_CREATION           31
#define SV_WAND_DUNGEON_GENERATION      32

/* jk - the first valuable wand */
#define SV_WAND_NASTY_WAND               3

/* The "sval" codes for TV_CORPSE */
#define SV_CORPSE_CORPSE     1
#define SV_CORPSE_SKELETON   2
#define SV_CORPSE_HEAD       3
#define SV_CORPSE_SKULL      4
#define SV_CORPSE_MEAT       5

/* The "sval" codes for TV_CRYSTAL */
#define SV_CRYSTAL_MISSILE   1
#define SV_CRYSTAL_ENERGY    2
#define SV_CRYSTAL_FIRE      3
#define SV_CRYSTAL_COLD      4
#define SV_CRYSTAL_ELEC      5
#define SV_CRYSTAL_MAGIC     6
#define SV_CRYSTAL_PHASING   7
#define SV_CRYSTAL_RECALL    8
#define SV_CRYSTAL_HEALING   9

/*
 * Special "sval" limit -- first "aimed" rod
 */
#define SV_ROD_MIN_DIRECTION    12

/*
 * Special "sval" limit -- first "large" chest
 */
#define SV_CHEST_MIN_LARGE      4

/* The first "chest" object in k_info.
#define CHEST_MIN_KIDX 38

/* More chest constants. */
#define CHEST_WOODEN 38
#define CHEST_IRON 39
#define CHEST_STEEL 40
#define CHEST_MAGIC 41
#define CHEST_CURSED 42
#define CHEST_ANCIENT 43
#define CHEST_SPECIAL 44

/*
 * Special "sval" limit -- first "good" magic/prayer book
 */
#define SV_BOOK_MIN_GOOD    2

/* flags for operation in get_random_trap in object3.c */

#define TRAP_EXISTS     0x00000001L
#define TRAP_FOUND      0x00000002L
#define TRAP_NOTFOUND   0x00000004L
#define TRAP_IDENTIFIED 0x00000008L

/*** General flag values ***/


/*
 * Special cave grid flags
 */
#define CAVE_MARK       0x0001    /* memorized feature */
#define CAVE_GLOW       0x0002    /* self-illuminating */
#define CAVE_ICKY       0x0004    /* part of a vault */
#define CAVE_ROOM       0x0008    /* part of a room */
#define CAVE_LITE       0x0010    /* lite flag  */
#define CAVE_VIEW       0x0020    /* view flag */
#define CAVE_TEMP       0x0040    /* temp flag */
#define CAVE_XTRA       0x0080    /* misc flag */
#define CAVE_TRDT       0x0100    /* trap detected */

/*
 * Bit flags for the "project()" function
 *
 *   JUMP: Jump directly to the target location (this is a hack)
 *   BEAM: Work as a beam weapon (affect every grid passed through)
 *   THRU: Continue "through" the target (used for "bolts"/"beams")
 *   WALL: Continue "through" the walls
 *   STOP: Stop as soon as we hit a monster (used for "bolts")
 *   GRID: Affect each grid in the "blast area" in some way
 *   ITEM: Affect each object in the "blast area" in some way
 *   KILL: Affect each monster in the "blast area" in some way
 *   HIDE: Hack -- disable "visual" feedback from projection
 */
#define PROJECT_JUMP       0x00000001
#define PROJECT_BEAM       0x00000002
#define PROJECT_THRU       0x00000004
#define PROJECT_STOP       0x00000008
#define PROJECT_GRID       0x00000010
#define PROJECT_ITEM       0x00000020
#define PROJECT_KILL       0x00000040
#define PROJECT_HIDE       0x00000080
#define PROJECT_VIEWABLE   0x00000100   /* Affect monsters in LOS */
#define PROJECT_METEOR_SHOWER 0x00000200        /* Affect random grids */
#define PROJECT_BLAST      0x00000400   /* Like Mega_blast, but will only affect viewable grids */
#define PROJECT_PANEL      0x00000800   /* Affect everything in the panel. */
#define PROJECT_ALL        0x00001000   /* Affect every single grid. */
#define PROJECT_WALL       0x00002000
#define PROJECT_MANA_PATH  0x00004000   /* Follow a mana path. */
#define PROJECT_ABSORB_MANA 0x00008000   /* The spell increase in power as it absord grid's mana. */

/*
 * Bit flags for the "enchant()" function
 */
#define ENCH_TOHIT   0x01
#define ENCH_TODAM   0x02
#define ENCH_TOAC    0x04
#define ENCH_PVAL    0x08

/*
 * Bit flags for the "target_set" function XXX XXX XXX
 *
 *      KILL: Target monsters
 *      LOOK: Describe grid fully
 *      XTRA: Currently unused flag
 *      GRID: Select from all grids
 */
#define TARGET_KILL             0x01
#define TARGET_LOOK             0x02
#define TARGET_XTRA             0x04
#define TARGET_GRID             0x08


/*
 * Some bit-flags for the "smart" field
 */
#define SM_RES_ACID             0x00000001
#define SM_RES_ELEC             0x00000002
#define SM_RES_FIRE             0x00000004
#define SM_RES_COLD             0x00000008
#define SM_RES_POIS             0x00000010
#define SM_RES_NETH             0x00000020
#define SM_RES_LITE             0x00000040
#define SM_RES_DARK             0x00000080
#define SM_RES_FEAR             0x00000100
#define SM_RES_CONF             0x00000200
#define SM_RES_CHAOS            0x00000400
#define SM_RES_DISEN            0x00000800
#define SM_RES_BLIND            0x00001000
#define SM_RES_NEXUS            0x00002000
#define SM_RES_SOUND            0x00004000
#define SM_RES_SHARD            0x00008000
#define SM_OPP_ACID             0x00010000
#define SM_OPP_ELEC             0x00020000
#define SM_OPP_FIRE             0x00040000
#define SM_OPP_COLD             0x00080000
#define SM_OPP_POIS             0x00100000
#define SM_OPP_XXX1             0x00200000
#define SM_CLONED               0x00400000
#define SM_FRIEND               0x00800000
#define SM_IMM_ACID             0x01000000
#define SM_IMM_ELEC             0x02000000
#define SM_IMM_FIRE             0x04000000
#define SM_IMM_COLD             0x08000000
#define SM_IMM_XXX5             0x10000000
#define SM_IMM_REFLECT          0x20000000
#define SM_IMM_FREE             0x40000000
#define SM_IMM_MANA             0x80000000


/*
 * Bit flags for the "get_item" function
 */
#define USE_EQUIP	0x01	/* Allow equip items */
#define USE_INVEN	0x02	/* Allow inven items */
#define USE_FLOOR	0x04	/* Allow floor items */


/*
 * Bit flags for the "p_ptr->notice" variable
 */
#define PN_COMBINE      0x00000001L     /* Combine the pack */
#define PN_REORDER      0x00000002L     /* Reorder the pack */
/* xxx (many) */


/*
 * Bit flags for the "p_ptr->update" variable
 */
#define PU_BONUS        0x00000001L     /* Calculate bonuses */
#define PU_TORCH        0x00000002L     /* Calculate torch radius */
#define PU_BODY         0x00000004L     /* Calculate body parts */
/* xxx (many) */
#define PU_SANITY       0x00000008L     /* Calculate csan and msan */
#define PU_HP           0x00000010L     /* Calculate chp and mhp */
#define PU_MANA         0x00000020L     /* Calculate csp and msp */
#define PU_SPELLS       0x00000040L     /* Calculate spells */
/* xxx (many) */
/* xxx (many) */
#define PU_UN_VIEW      0x00010000L     /* Forget view */
#define PU_UN_LITE      0x00020000L     /* Forget lite */
/* xxx (many) */
#define PU_VIEW         0x00100000L     /* Update view */
#define PU_LITE         0x00200000L     /* Update lite */
/* xxx */
#define PU_MONSTERS     0x01000000L     /* Update monsters */
#define PU_DISTANCE     0x02000000L     /* Update distances */
/* xxx */
#define PU_FLOW         0x10000000L     /* Update flow */
/* xxx (many) */


/*
 * Bit flags for the "p_ptr->redraw" variable
 */
#define PR_MISC         0x00000001L     /* Display Race/Class */
#define PR_TITLE        0x00000002L     /* Display Title */
#define PR_LEV          0x00000004L     /* Display Level */
#define PR_EXP          0x00000008L     /* Display Experience */
#define PR_STATS        0x00000010L     /* Display Stats */
#define PR_ARMOR        0x00000020L     /* Display Armor */
#define PR_HP           0x00000040L     /* Display Hitpoints */
#define PR_MANA         0x00000080L     /* Display Mana */
#define PR_GOLD         0x00000100L     /* Display Gold */
#define PR_DEPTH        0x00000200L     /* Display Depth */
/****/ 
#define PR_HEALTH       0x00000800L     /* Display Health Bar */
#define PR_CUT          0x00001000L     /* Display Extra (Cut) */
#define PR_STUN         0x00002000L     /* Display Extra (Stun) */
#define PR_HUNGER       0x00004000L     /* Display Extra (Hunger) */
#define PR_TANK         0x00008000L     /* Display Tanker */
#define PR_BLIND        0x00010000L     /* Display Extra (Blind) */
#define PR_CONFUSED     0x00020000L     /* Display Extra (Confused) */
#define PR_AFRAID       0x00040000L     /* Display Extra (Afraid) */
#define PR_POISONED     0x00080000L     /* Display Extra (Poisoned) */
#define PR_STATE        0x00100000L     /* Display Extra (State) */
#define PR_SPEED        0x00200000L     /* Display Extra (Speed) */
#define PR_STUDY        0x00400000L     /* Display Extra (Study) */
#define PR_SANITY       0x00800000L     /* Display Sanity */
#define PR_EXTRA        0x01000000L     /* Display Extra Info */
#define PR_BASIC        0x02000000L     /* Display Basic Info */
#define PR_MAP          0x04000000L     /* Display Map */
#define PR_WIPE         0x08000000L     /* Hack -- Total Redraw */
/* xxx */
/* xxx */
/* xxx */

/*
 * Bit flags for the "p_ptr->window" variable (etc)
 */
#define PW_INVEN        0x00000001L     /* Display inven/equip */
#define PW_EQUIP        0x00000002L     /* Display equip/inven */
#define PW_SPELL        0x00000004L     /* Display spell list */
#define PW_PLAYER       0x00000008L     /* Display character */
/* xxx */
/* xxx */
#define PW_MESSAGE      0x00000040L     /* Display messages */
#define PW_OVERHEAD     0x00000080L     /* Display overhead view */
#define PW_MONSTER      0x00000100L     /* Display monster recall */
#define PW_OBJECT       0x00000200L     /* Display object recall */
/* xxx */
#define PW_SNAPSHOT     0x00000800L     /* Display snap-shot */
/* xxx */
/* xxx */
#define PW_BORG_1       0x00004000L     /* Display borg messages */
#define PW_BORG_2       0x00008000L     /* Display borg status */


/* jk */
#define FTRAP_CHEST      0x000000001 /* may appear on chests */
#define FTRAP_DOOR       0x000000002 /* may appear on doors/floors */
#define FTRAP_FLOOR      0x000000004 /* may appear on floor */
#define FTRAP_XXX4       0x000000008
#define FTRAP_XXX5       0x000000010
#define FTRAP_XXX6       0x000000020
#define FTRAP_XXX7       0x000000040
#define FTRAP_XXX8       0x000000080
#define FTRAP_XXX9       0x000000100
#define FTRAP_XXX10      0x000000200
#define FTRAP_XXX11      0x000000400
#define FTRAP_XXX12      0x000000800
#define FTRAP_XXX13      0x000001000
#define FTRAP_XXX14      0x000002000
#define FTRAP_XXX15      0x000004000
#define FTRAP_XXX16      0x000008000
#define FTRAP_LEVEL1     0x000010000 /* low level ball/bolt trap */
#define FTRAP_LEVEL2     0x000020000 /* medium level ball/bolt trap */
#define FTRAP_LEVEL3     0x000040000 /* high level ball/bolt trap */
#define FTRAP_LEVEL4     0x000080000 /* oops level ball/bolt trap */
#define FTRAP_XXX21      0x000100000
#define FTRAP_XXX22      0x000200000
#define FTRAP_XXX23      0x000400000
#define FTRAP_XXX24      0x000800000
#define FTRAP_XXX25      0x001000000
#define FTRAP_XXX26      0x002000000
#define FTRAP_XXX27      0x004000000
#define FTRAP_XXX28      0x008000000
#define FTRAP_XXX29      0x010000000
#define FTRAP_XXX30      0x020000000
#define FTRAP_XXX31      0x040000000
#define FTRAP_XXX32      0x080000000

/* jk */
#define STAT_DEC_TEMPORARY 1
#define STAT_DEC_NORMAL 2
#define STAT_DEC_PERMANENT 3

/* jk - which trap is which number */
#define TRAP_OF_WEAKNESS_I                  1
#define TRAP_OF_WEAKNESS_II                 2
#define TRAP_OF_WEAKNESS_III                3
#define TRAP_OF_INTELLIGENCE_I              4
#define TRAP_OF_INTELLIGENCE_II             5
#define TRAP_OF_INTELLIGENCE_III            6
#define TRAP_OF_WISDOM_I                    7
#define TRAP_OF_WISDOM_II                   8
#define TRAP_OF_WISDOM_III                  9
#define TRAP_OF_FUMBLING_I                 10
#define TRAP_OF_FUMBLING_II                11
#define TRAP_OF_FUMBLING_III               12
#define TRAP_OF_WASTING_I                  13
#define TRAP_OF_WASTING_II                 14
#define TRAP_OF_WASTING_III                15
#define TRAP_OF_BEAUTY_I                   16
#define TRAP_OF_BEAUTY_II                  17
#define TRAP_OF_BEAUTY_III                 18

#define TRAP_OF_CURSE_WEAPON               20
#define TRAP_OF_CURSE_ARMOR                21
#define TRAP_OF_EARTHQUAKE                 22
#define TRAP_OF_POISON_NEEDLE              23
#define TRAP_OF_SUMMON_MONSTER             24
#define TRAP_OF_SUMMON_UNDEAD              25
#define TRAP_OF_SUMMON_GREATER_UNDEAD      26
#define TRAP_OF_TELEPORT                   27
#define TRAP_OF_PARALYZING                 28
#define TRAP_OF_EXPLOSIVE_DEVICE           29
#define TRAP_OF_TELEPORT_AWAY              30
#define TRAP_OF_LOSE_MEMORY                31
#define TRAP_OF_BITTER_REGRET              32
#define TRAP_OF_BOWEL_CRAMPS               33
#define TRAP_OF_BLINDNESS_CONFUSION        34
#define TRAP_OF_AGGRAVATION                35
#define TRAP_OF_MULTIPLICATION             36
#define TRAP_OF_STEAL_ITEM                 37
#define TRAP_OF_SUMMON_FAST_QUYLTHULGS     38
#define TRAP_OF_SINKING                    39
#define TRAP_OF_MANA_DRAIN                 40
#define TRAP_OF_MISSING_MONEY              41
#define TRAP_OF_NO_RETURN                  42
#define TRAP_OF_SILENT_SWITCHING           43
#define TRAP_OF_WALLS                      44
#define TRAP_OF_CALLING_OUT                45
#define TRAP_OF_SLIDING                    46
#define TRAP_OF_CHARGES_DRAIN              47
#define TRAP_OF_STAIR_MOVEMENT             48
#define TRAP_OF_NEW                        49
#define TRAP_OF_SCATTER_ITEMS              50
#define TRAP_OF_DECAY                      51
#define TRAP_OF_WASTING_WANDS              52
#define TRAP_OF_FILLING                    53
#define TRAP_OF_DRAIN_SPEED                54

#define TRAP_OF_ELEC_BOLT                  60
#define TRAP_OF_POIS_BOLT                  61
#define TRAP_OF_ACID_BOLT                  62
#define TRAP_OF_COLD_BOLT                  63
#define TRAP_OF_FIRE_BOLT                  64
#define TRAP_OF_PLASMA_BOLT                65
#define TRAP_OF_WATER_BOLT                 66
#define TRAP_OF_LITE_BOLT                  67
#define TRAP_OF_DARK_BOLT                  68
#define TRAP_OF_SHARDS_BOLT                69
#define TRAP_OF_SOUND_BOLT                 70
#define TRAP_OF_CONFUSION_BOLT             71
#define TRAP_OF_FORCE_BOLT                 72
#define TRAP_OF_INERTIA_BOLT               73
#define TRAP_OF_MANA_BOLT                  74
#define TRAP_OF_ICE_BOLT                   75
#define TRAP_OF_CHAOS_BOLT                 76
#define TRAP_OF_NETHER_BOLT                77
#define TRAP_OF_DISENCHANT_BOLT            78
#define TRAP_OF_NEXUS_BOLT                 79
#define TRAP_OF_TIME_BOLT                  80
#define TRAP_OF_GRAVITY_BOLT               81

#define TRAP_OF_ELEC_BALL                  82
#define TRAP_OF_POIS_BALL                  83
#define TRAP_OF_ACID_BALL                  84
#define TRAP_OF_COLD_BALL                  85
#define TRAP_OF_FIRE_BALL                  86
#define TRAP_OF_PLASMA_BALL                87
#define TRAP_OF_WATER_BALL                 88
#define TRAP_OF_LITE_BALL                  89
#define TRAP_OF_DARK_BALL                  90
#define TRAP_OF_SHARDS_BALL                91
#define TRAP_OF_SOUND_BALL                 92
#define TRAP_OF_CONFUSION_BALL             93
#define TRAP_OF_FORCE_BALL                 94
#define TRAP_OF_INERTIA_BALL               95
#define TRAP_OF_MANA_BALL                  96
#define TRAP_OF_ICE_BALL                   97
#define TRAP_OF_CHAOS_BALL                 98
#define TRAP_OF_NETHER_BALL                99
#define TRAP_OF_DISENCHANT_BALL           100
#define TRAP_OF_NEXUS_BALL                101
#define TRAP_OF_TIME_BALL                 102
#define TRAP_OF_GRAVITY_BALL              103

#define TRAP_OF_ARROW_I                   110
#define TRAP_OF_ARROW_II                  111
#define TRAP_OF_ARROW_III                 112
#define TRAP_OF_ARROW_IV                  113
#define TRAP_OF_POISON_ARROW_I            114
#define TRAP_OF_POISON_ARROW_II           115
#define TRAP_OF_POISON_ARROW_III          116
#define TRAP_OF_POISON_ARROW_IV           117
#define TRAP_OF_DAGGER_I                  118
#define TRAP_OF_DAGGER_II                 119
#define TRAP_OF_POISON_DAGGER_I           120
#define TRAP_OF_POISON_DAGGER_II          121
#define TRAP_OF_ARROWS_I                  122
#define TRAP_OF_ARROWS_II                 123
#define TRAP_OF_ARROWS_III                124
#define TRAP_OF_ARROWS_IV                 125
#define TRAP_OF_POISON_ARROWS_I           126
#define TRAP_OF_POISON_ARROWS_II          127
#define TRAP_OF_POISON_ARROWS_III         128
#define TRAP_OF_POISON_ARROWS_IV          129
#define TRAP_OF_DAGGERS_I                 130
#define TRAP_OF_DAGGERS_II                131
#define TRAP_OF_POISON_DAGGERS_I          132
#define TRAP_OF_POISON_DAGGERS_II         133

#define TRAP_OF_DROP_ITEMS                140
#define TRAP_OF_DROP_ALL_ITEMS            141
#define TRAP_OF_DROP_EVERYTHING           142

/* -SC- */
#define TRAP_OF_FEMINITY                  150
#define TRAP_OF_MASCULINITY               151
#define TRAP_OF_NEUTRALITY                152
#define TRAP_OF_AGING                     153
#define TRAP_OF_GROWING                   154
#define TRAP_OF_SHRINKING                 155
#define TRAP_OF_ELDRITCH_HORROR           156
#define TRAP_OF_TANKER_DRAIN              157
#define TRAP_OF_DIVINE_ANGER              158
#define TRAP_OF_DIVINE_WRATH              159
#define TRAP_OF_HALLUCINATION             160

#define TRAP_OF_ROCKET                    161
#define TRAP_OF_NUKE_BOLT                 162
#define TRAP_OF_DEATH_RAY                 163
#define TRAP_OF_HOLY_FIRE                 164
#define TRAP_OF_HELL_FIRE                 165
#define TRAP_OF_PSI_BOLT                  166
#define TRAP_OF_PSI_DRAIN                 167
#define TRAP_OF_NUKE_BALL                 168
#define TRAP_OF_PSI_BALL                  169


/*** General index values ***/

/*
 * Spell types used by project(), and related functions.
 */
#define GF_FIRE         1
#define GF_COLD         2
#define GF_ELEC         3
#define GF_ACID         4
#define GF_POIS         5
#define GF_LITE         6
#define GF_DARK         7
#define GF_WARP         8
#define GF_WATER        9
#define GF_WIND         10
#define GF_EARTH        11
#define GF_SOUND        12
#define GF_RADIO        13
#define GF_CHAOS        14
#define GF_PHYSICAL     15 /* This one actually count as a physical attack */
#define GF_MANA         16
#define GF_MISSILE      17
#define GF_FROSTFIRE    18 /* Dual type: Fire and Cold! */
#define GF_GREY         19 /* Dual type: Light and Darkness! */
#define GF_TOXIC        20 /* Tri type: Acid, Poison and Radio! */
#define GF_MUD          21 /* Dual type: Water and Earth! */

/* Replaced with GF_HOLY_FIRE and GF_HELL_FIRE */
/* #define GF_HOLY_ORB     13 */
#define GF_CONFUSION    22
#define GF_ICE          23
#define GF_DRAIN_LIFE   30
#define GF_KILL_WALL    40
#define GF_KILL_DOOR    41
#define GF_KILL_TRAP    42
#define GF_MAKE_WALL    45
#define GF_MAKE_DOOR    46
#define GF_MAKE_TRAP    47
#define GF_STONE_TO_MUD 48
#define GF_OLD_CLONE    51
#define GF_OLD_POLY             52
#define GF_OLD_HEAL             53
#define GF_OLD_SPEED    54
#define GF_OLD_SLOW             55
#define GF_OLD_CONF             56
#define GF_OLD_SLEEP    57
#define GF_OLD_DRAIN    58
#define GF_AWAY_UNDEAD  61
#define GF_AWAY_EVIL    62
#define GF_TURN_EVIL    65
#define GF_TURN_ALL     66
#define GF_DISP_UNDEAD  67
#define GF_DISP_EVIL    68
#define GF_DISP_ALL 69    
#define GF_DISP_DEMON   70      /* New types for Zangband begin here... */
#define GF_DISP_LIVING  71
#define GF_ROCKET       72
#define GF_MAKE_GLYPH   74
#define GF_STONE_WALL   76
#define GF_DEATH_RAY    77
#define GF_STUN         78
#define GF_CONTROL_UNDEAD   83
#define GF_CONTROL_ANIMAL   84
#define GF_TELEKINESIS  87
#define GF_JAM_DOOR     88
#define GF_DOMINATION   89
#define GF_DISP_GOOD    90
#define GF_IDENTIFY     91
#define GF_RAISE        92
#define GF_STAR_IDENTIFY 93
#define GF_DESTRUCTION  94
#define GF_STUN_CONF    95
#define GF_STUN_DAM     96
#define GF_CONF_DAM     98
#define GF_IMPLOSION    100
#define GF_LAVA_FLOW    101
#define GF_FEAR         102
#define GF_BETWEEN_GATE 103
#define GF_WINDS_MANA   104
#define GF_DEATH        105

/* New ones used for Curses */
#define GF_WEAKEN 108
#define GF_LOWER_POWER 109
#define GF_LOWER_MAGIC 110
#define GF_SLOW_DOWN 111
#define GF_LIFE_BLAST 112
#define GF_HALVE_DAMAGES 113
#define GF_HALVE_MAGIC 114
#define GF_HALVE_SPEED 115
#define GF_HALVE_LEVEL 116
#define GF_LOCK 117
#define GF_DAMAGES_CURSE 118
#define GF_INCOMPETENCE 119 /* Yeah, the name is funny, isen't it? ;) */
#define GF_RETROGRADE 120
#define GF_DOMINATION_CURSE 122
#define GF_SLEEP_POLLEN 123
#define GF_WAR_BLESSING 124
#define GF_FRAILNESS 125
#define GF_INEPTITUDE 126
#define GF_FEAR_CURSE 127
#define GF_PSI_HITRATE 128
#define GF_PSI_FEAR 129
#define GF_REDUCE_DEF 130
#define GF_REDUCE_HIT 131
#define GF_REDUCE_SPEED 132
#define GF_MORALE_BOOST 133
#define GF_EVOLVE 134
#define GF_UNEVOLVE 135
#define GF_UNSUMMON 136
#define GF_SLEEP_GAS 137
#define GF_ANIMAL_EMPATHY 138
#define GF_AURA_LIFE 139
#define GF_SMITE_EVIL 140
#define GF_DOMINATE_MONSTER 142
#define GF_SHATTER_EVIL 143
#define GF_ANGELIC_VOICE 144
#define GF_REPULSE_EVIL 145
#define GF_SLAY_EVIL 146
#define GF_SEAL_LIGHT 147
#define GF_PARALYZE 148
#define GF_STEALTH_ATTACK 149
#define GF_WARCRY 150
/* Monster attacks! */
#define GF_LOSE_STR 151
#define GF_LOSE_INT 152
#define GF_LOSE_WIS 153
#define GF_LOSE_DEX 154
#define GF_LOSE_CON 155
#define GF_LOSE_CHR 156
#define GF_LOSE_ALL 157
#define GF_LOSE_EXP 158

#define GF_TAUNT 159
#define GF_DIVINATION 161
#define GF_HARM 162
#define GF_UNDEAD_SMITE 163
#define GF_DEMON_SMITE 164
#define GF_EVIL_SMITE 165
#define GF_GOOD_SMITE 166
#define GF_COMMAND_ELEMENT 168


/*
 * Some things which induce learning
 */
#define DRS_ACID         1
#define DRS_ELEC         2
#define DRS_FIRE         3
#define DRS_COLD         4
#define DRS_POIS         5
#define DRS_NETH         6
#define DRS_LITE         7
#define DRS_DARK         8
#define DRS_FEAR         9
#define DRS_CONF        10
#define DRS_CHAOS       11
#define DRS_DISEN       12
#define DRS_BLIND       13
#define DRS_NEXUS       14
#define DRS_SOUND       15
#define DRS_SHARD       16
#define DRS_FREE        30
#define DRS_MANA        31
#define DRS_REFLECT     32



/*
 * Hack -- first "normal" artifact in the artifact list.  All of
 * the artifacts with indexes from 1 to 15 are "special" (lights,
 * rings, amulets), and the ones from 16 to 127 are "normal".
 */
#define ART_MIN_NORMAL          16
#define ART_MIN_SPECIAL         200


/*
 * Hack -- special "xtra" object powers
 */

/* Sustain one stat */
#define EGO_XTRA_SUSTAIN        1

/* High resist */
#define EGO_XTRA_POWER          2

/* Special ability */
#define EGO_XTRA_ABILITY        3

/*** Object flag values ***/


/*
 * Special Object Flags
 */
#define IDENT_SENSE             0x01    /* Item has been "sensed" */
#define IDENT_FIXED             0x02    /* Item has been "haggled" */
#define IDENT_EMPTY             0x04    /* Item charges are known */
#define IDENT_KNOWN             0x08    /* Item abilities are known */
#define IDENT_STOREB    0x10    /* Item is storebought !!!! */
#define IDENT_MENTAL    0x20    /* Item information is known */
#define IDENT_CURSED    0x40    /* Item is temporarily cursed */
#define IDENT_BROKEN    0x80    /* Item is permanently worthless */



/*
 * Special Monster Flags (all temporary)
 */
#define MFLAG_VIEW      0x01    /* Monster is in line of sight */
/* xxx */
#define MFLAG_BORN      0x10    /* Monster is still being born */
#define MFLAG_NICE      0x20    /* Monster is still being nice */
#define MFLAG_SHOW      0x40    /* Monster is recently memorized */
#define MFLAG_MARK      0x80    /* Monster is currently memorized */



/*
 * As of 2.7.8, the "object flags" are valid for all objects, and as
 * of 2.7.9, these flags are not actually stored with the object.
 *
 * Note that "flags1" contains all flags dependant on "pval" (including
 * stat bonuses, but NOT stat sustainers), plus all "extra attack damage"
 * flags (SLAY_XXX and BRAND_XXX).
 *
 * Note that "flags2" contains all "resistances" (including "Stat Sustainers",
 * actual immunities, and resistances).  Note that "Hold Life" is really an
 * "immunity" to ExpLoss, and "Free Action" is "immunity to paralysis".
 *
 * Note that "flags3" contains everything else -- including the three "CURSED"
 * flags, and the "BLESSED" flag, several "item display" parameters, some new
 * flags for powerful Bows, and flags which affect the player in a "general"
 * way (LITE, TELEPATHY, SEE_INVIS, SLOW_DIGEST, REGEN, FEATHER), including
 * all the "general" curses (TELEPORT, AGGRAVATE, EXP_DRAIN).  It also has
 * four new flags called "ITEM_IGNORE_XXX" which lets an item specify that
 * it can not be affected by various forms of destruction.  This is NOT as
 * powerful as actually granting resistance/immunity to the wearer.
 */

#define TR1_STR                         0x00000001L     /* STR += "pval" */
#define TR1_INT                         0x00000002L     /* INT += "pval" */
#define TR1_WIS                         0x00000004L     /* WIS += "pval" */
#define TR1_DEX                         0x00000008L     /* DEX += "pval" */
#define TR1_CON                         0x00000010L     /* CON += "pval" */
#define TR1_CHR                         0x00000020L     /* CHR += "pval" */
#define TR1_MANA                        0x00000040L     /* Mana multipler */
#define TR1_SPELL                       0x00000080L     /* Spell power increase */
#define TR1_STEALTH                     0x00000100L     /* Stealth += "pval" */
#define TR1_SHARPENED                   0x00000200L     /* Sharpened ammos */
#define TR1_INFRA                       0x00000400L     /* Infra += "pval" */
#define TR1_ENCHANTED                   0x00000800L     /* Just a flag */
#define TR1_SPEED                       0x00001000L     /* Speed += "pval" */
#define TR1_BLOWS                       0x00002000L     /* Blows += "pval" */
#define TR1_CHAOTIC                     0x00004000L
#define TR1_VAMPIRIC                    0x00008000L
#define TR1_SLAY_ANIMAL         0x00010000L
#define TR1_SLAY_EVIL           0x00020000L
#define TR1_SLAY_UNDEAD         0x00040000L
#define TR1_SLAY_DEMON          0x00080000L
#define TR1_SLAY_ORC            0x00100000L
#define TR1_SLAY_TROLL          0x00200000L
#define TR1_SLAY_GIANT          0x00400000L
#define TR1_SLAY_DRAGON         0x00800000L
#define TR1_KILL_DRAGON         0x01000000L     /* Execute Dragon */
#define TR1_VORPAL                      0x02000000L     /* Later */
#define TR1_IMPACT                      0x04000000L     /* Cause Earthquakes */
#define TR1_BRAND_POIS                  0x08000000L
#define TR1_BRAND_ACID          0x10000000L
#define TR1_BRAND_ELEC          0x20000000L
#define TR1_BRAND_FIRE          0x40000000L
#define TR1_BRAND_COLD          0x80000000L
#define TR1_NULL_MASK           0x00000000L

#define TR2_SUST_STR            0x00000001L
#define TR2_SUST_INT            0x00000002L
#define TR2_SUST_WIS            0x00000004L
#define TR2_SUST_DEX            0x00000008L
#define TR2_SUST_CON            0x00000010L
#define TR2_SUST_CHR            0x00000020L
#define TR2_INVIS                       0x00000040L     /* Invisibility */
#define TR2_LIFE                        0x00000080L     /* Life multiplier */
#define TR2_IM_ACID                     0x00000100L
#define TR2_IM_ELEC                     0x00000200L
#define TR2_IM_FIRE                     0x00000400L
#define TR2_IM_COLD                     0x00000800L
#define TR2_RES_WATER                   0x00001000L     /* Sensibility to fire */
#define TR2_REFLECT                     0x00002000L     /* Reflect 'bolts' */
#define TR2_FREE_ACT            0x00004000L     /* Free Action */
#define TR2_HOLD_LIFE           0x00008000L     /* Hold Life */
#define TR2_RES_ACID            0x00010000L
#define TR2_RES_ELEC            0x00020000L
#define TR2_RES_FIRE            0x00040000L
#define TR2_RES_COLD            0x00080000L
#define TR2_RES_POIS            0x00100000L
#define TR2_RES_FEAR            0x00200000L     /* Added for Zangband */
#define TR2_RES_LITE            0x00400000L
#define TR2_RES_DARK            0x00800000L
#define TR2_RES_BLIND           0x01000000L
#define TR2_RES_CONF            0x02000000L
#define TR2_RES_SOUND           0x04000000L
#define TR2_RES_EARTH           0x08000000L
#define TR2_RES_RADIO           0x10000000L
#define TR2_RES_WIND            0x20000000L
#define TR2_RES_CHAOS           0x40000000L
#define TR2_RES_WARP            0x80000000L
#define TR2_NULL_MASK           0x00000000L

#define TR3_SH_FIRE                     0x00000001L     /* Immolation (Fire) */
#define TR3_SH_ELEC                     0x00000002L     /* Electric Sheath */
#define TR3_QUESTITEM					0x00000004L	/* quest level item -KMW- */
#define TR3_DECAY                       0x00000008L     /* Decay */
#define TR3_NO_TELE                     0x00000010L     /* Anti-teleportation */
#define TR3_NO_MAGIC                    0x00000020L     /* Anti-magic */
#define TR3_WRAITH                      0x00000040L     /* Wraithform */
#define TR3_EASY_KNOW           0x00000100L     /* Aware -> Known */
#define TR3_HIDE_TYPE           0x00000200L     /* Hide "pval" description */
#define TR3_SHOW_MODS           0x00000400L     /* Always show Tohit/Todam */
#define TR3_INSTA_ART           0x00000800L     /* Item must be an artifact */
#define TR3_FEATHER                     0x00001000L     /* Feather Falling */
#define TR3_LITE                        0x00002000L     /* Permanent Light */
#define TR3_SEE_INVIS           0x00004000L     /* See Invisible */
#define TR3_TELEPATHY           0x00008000L     /* Telepathy */
#define TR3_SLOW_DIGEST         0x00010000L     /* Item slows down digestion */
#define TR3_REGEN                       0x00020000L     /* Item induces regeneration */
#define TR3_XTRA_MIGHT          0x00040000L     /* Bows get extra multiplier */
#define TR3_XTRA_SHOTS          0x00080000L     /* Bows get extra shots */
#define TR3_IGNORE_ACID         0x00100000L     /* Item ignores Acid Damage */
#define TR3_IGNORE_ELEC         0x00200000L     /* Item ignores Elec Damage */
#define TR3_IGNORE_FIRE         0x00400000L     /* Item ignores Fire Damage */
#define TR3_IGNORE_COLD         0x00800000L     /* Item ignores Cold Damage */
#define TR3_ACTIVATE            0x01000000L     /* Item can be activated */
#define TR3_DRAIN_EXP           0x02000000L     /* Item drains Experience */
#define TR3_TELEPORT            0x04000000L     /* Item teleports player */
#define TR3_AGGRAVATE           0x08000000L     /* Item aggravates monsters */
#define TR3_BLESSED                     0x10000000L     /* Item is Blessed */
#define TR3_CURSED                      0x20000000L     /* Item is Cursed */
#define TR3_HEAVY_CURSE         0x40000000L     /* Item is Heavily Cursed */
#define TR3_PERMA_CURSE         0x80000000L     /* Item is Perma Cursed */
#define TR3_NULL_MASK           0x00000000L


#define TR4_NEVER_BLOW          0x00000001L     /* Weapon can't attack */
#define TR4_ICE                 0x00000002L     /* Appears in Ice dungeons only. */
#define TR4_DEX_WEAPON          0x00000004L     /* A melee weapon that can use dex for damage. */
#define TR4_RECHARGE            0x00000008L     /* For artifact Wands and Staffs */
#define TR4_FLY                 0x00000010L     /* This one and ONLY this one allow you to fly over trees */
#define TR4_COULD2H             0x00000040L     /* Can wield it 2 Handed */
#define TR4_MUST2H              0x00000080L     /* Must wield it 2 Handed */
#define TR4_LEVELS              0x00000100L     /* Can gain exp/exp levels !! */
#define TR4_STOLEN              0x00000200L     /* Has been stolen from a monster. */
#define TR4_SPECIAL_GENE        0x00000400L     /* The object can only be generated in special conditions like quests, special dungeons, ... */
#define TR4_CLIMB               0x00000800L     /* Allow climbing mountains */
#define TR4_CRAFTED             0x00001000L     /* Item is enchanted through crafting. */
#define TR4_MODERATE_POWER      0x00002000L     /* For potions. */
#define TR4_VALUE_50            0x00004000L     /* Value is 50% of normal value. */
#define TR4_VALUE_25            0x00008000L     /* Value is 25% of normal value. */
#define TR4_ENHANCED            0x00010000L     /* Enhanced ranged weapon */
#define TR4_CHARGEABLE          0x00080000L     /* Weapon is chargeable */
#define TR4_INDESTRUCTIBLE      0x00100000L     /* Weapon is indestructible */
#define TR4_ETERNAL             0x00200000L     /* Item is eternal */
#define TR4_SLAY_MALE           0x00400000L     /* Male Killer */
#define TR4_SLAY_FEMALE         0x00800000L     /* Female Killer */
#define TR4_ALWAYS_HIT          0x01000000L     /* 100% chances to hit */
#define TR4_LOWER_DEF           0x02000000L     /* Lower monsters defense */
#define TR4_LOWER_HIT           0x04000000L     /* Lower monsters hit rate */
#define TR4_RETURNING           0x08000000L     /* Returning ammos */
#define TR4_SAFETY              0x10000000L     /* Prevent stuns */
#define TR4_PROTECTION          0x20000000L     /* Reduce damages 50% */
#define TR4_ENCHANTED           0x40000000L     /* Does nothing. */
#define TR4_PARRY               0x80000000L     /* Allow blocking on certain weapons */
#define TR4_NULL_MASK           0xFFFFFFFCL


/*
 * Hack -- flag set 1 -- mask for "pval-dependant" flags.
 * Note that all "pval" dependant flags must be in "flags1".
 */
#define TR1_PVAL_MASK   \
	(TR1_STR | TR1_INT | TR1_WIS | TR1_DEX | \
     TR1_CON | TR1_CHR | \
         TR1_STEALTH | TR1_INFRA | \
     TR1_SPEED | TR1_BLOWS | TR1_MANA | TR1_SPELL)

/*** Features flags -- DG ***/
#define FF1_NO_WALK             0x00000001L
#define FF1_NO_VISION           0x00000002L
#define FF1_CAN_LEVITATE        0x00000004L
#define FF1_CAN_PASS            0x00000008L
#define FF1_FLOOR               0x00000010L
#define FF1_WALL                0x00000020L
#define FF1_PERMANENT           0x00000040L
#define FF1_CAN_FLY             0x00000080L
#define FF1_REMEMBER            0x00000100L
#define FF1_NOTICE              0x00000200L
#define FF1_DONT_NOTICE_RUNNING 0x00000400L
#define FF1_CAN_RUN             0x00000800L
#define FF1_DOOR                0x00001000L
#define FF1_SUPPORT_LIGHT       0x00002000L
#define FF1_CAN_CLIMB           0x00004000L

/*** Dungeon type flags -- DG ***/
#define DF1_PRINCIPAL           0x00000001L
#define DF1_MAZE                0x00000002L
#define DF1_SMALLEST            0x00000004L
#define DF1_SMALL               0x00000008L
#define DF1_BIG                 0x00000010L
#define DF1_NO_DOORS            0x00000020L
#define DF1_WATER_RIVER         0x00000040L
#define DF1_LAVA_RIVER          0x00000080L
#define DF1_WATER_RIVERS        0x00000100L
#define DF1_LAVA_RIVERS         0x00000200L
#define DF1_CAVE                0x00000400L
#define DF1_CAVERN              0x00000800L
#define DF1_NO_UP               0x00001000L
#define DF1_HOT                 0x00002000L
#define DF1_COLD                0x00004000L
#define DF1_NO_DOWN             0x00008000L
#define DF1_FORGET              0x00010000L
#define DF1_UNDEAD              0x00020000L
#define DF1_DEMON               0x00040000L
#define DF1_DRAGON              0x00080000L
#define DF1_NO_GENERIC          0x00100000L
#define DF1_ICE                 0x00200000L
#define DF1_WEIRD               0x00400000L
#define DF1_RANDOM_ONLY         0x00800000L

/*** Monster blow constants ***/


/*
 * New monster blow methods
 */
#define RBM_HIT          1
#define RBM_TOUCH        2
#define RBM_PUNCH        3
#define RBM_KICK         4
#define RBM_CLAW         5
#define RBM_BITE         6
#define RBM_STING        7
#define RBM_XXX1         8
#define RBM_BUTT         9
#define RBM_CRUSH       10
#define RBM_ENGULF      11
#define RBM_CHARGE      12
#define RBM_CRAWL       13
#define RBM_DROOL       14
#define RBM_SPIT        15
#define RBM_EXPLODE     16
#define RBM_GAZE        17
#define RBM_WAIL        18
#define RBM_SPORE       19
#define RBM_XXX4        20
#define RBM_BEG         21
#define RBM_INSULT      22
#define RBM_MOAN        23
#define RBM_SHOW        24


/*
 * New monster blow effects
 */
#define RBE_HURT         1
#define RBE_POISON       2
#define RBE_UN_BONUS     3
#define RBE_UN_POWER     4
#define RBE_EAT_GOLD     5
#define RBE_EAT_ITEM     6
#define RBE_EAT_FOOD     7
#define RBE_EAT_LITE     8
#define RBE_ACID         9
#define RBE_ELEC        10
#define RBE_FIRE        11
#define RBE_COLD        12
#define RBE_BLIND       13
#define RBE_CONFUSE     14
#define RBE_TERRIFY     15
#define RBE_PARALYZE    16
#define RBE_LOSE_STR    17
#define RBE_LOSE_INT    18
#define RBE_LOSE_WIS    19
#define RBE_LOSE_DEX    20
#define RBE_LOSE_CON    21
#define RBE_LOSE_CHR    22
#define RBE_LOSE_ALL    23
#define RBE_SHATTER     24
#define RBE_EXP_10      25
#define RBE_EXP_20      26
#define RBE_EXP_40      27
#define RBE_EXP_80      28
#define RBE_DISEASE     29
#define RBE_TIME        30
#define RBE_SANITY      31


/*** Monster flag values (hard-coded) ***/


/*
 * New monster race bit flags
 */
#define RF1_UNIQUE                      0x00000001      /* Unique Monster */
#define RF1_QUESTOR                     0x00000002      /* Quest Monster */
#define RF1_MALE                        0x00000004      /* Male gender */
#define RF1_FEMALE                      0x00000008      /* Female gender */
#define RF1_CHAR_CLEAR          0x00000010      /* Absorbs symbol */
#define RF1_CHAR_MULTI          0x00000020      /* Changes symbol */
#define RF1_ATTR_CLEAR          0x00000040      /* Absorbs color */
#define RF1_ATTR_MULTI          0x00000080      /* Changes color */
#define RF1_FORCE_DEPTH         0x00000100      /* Start at "correct" depth */
#define RF1_FORCE_MAXHP         0x00000200      /* Start with max hitpoints */
#define RF1_FORCE_SLEEP         0x00000400      /* Start out sleeping */
#define RF1_FORCE_EXTRA         0x00000800      /* Start out something */
#define RF1_FRIEND              0x00001000      /* Arrive with a friend */
#define RF1_FRIENDS             0x00002000      /* Arrive with some friends */
#define RF1_ESCORT              0x00004000      /* Arrive with an escort */
#define RF1_ESCORTS             0x00008000      /* Arrive with some escorts */
#define RF1_NEVER_BLOW          0x00010000      /* Never make physical blow */
#define RF1_NEVER_MOVE          0x00020000      /* Never make physical move */
#define RF1_RAND_25             0x00040000      /* Moves randomly (25%) */
#define RF1_RAND_50             0x00080000      /* Moves randomly (50%) */
#define RF1_ONLY_GOLD           0x00100000      /* Drop only gold */
#define RF1_ONLY_ITEM           0x00200000      /* Drop only items */
#define RF1_DROP_60             0x00400000      /* Drop an item/gold (60%) */
#define RF1_DROP_90             0x00800000      /* Drop an item/gold (90%) */
#define RF1_DROP_1D2            0x01000000      /* Drop 1d2 items/gold */
#define RF1_DROP_2D2            0x02000000      /* Drop 2d2 items/gold */
#define RF1_DROP_3D2            0x04000000      /* Drop 3d2 items/gold */
#define RF1_DROP_4D2            0x08000000      /* Drop 4d2 items/gold */
#define RF1_DROP_GOOD           0x10000000      /* Drop good items */
#define RF1_DROP_GREAT          0x20000000      /* Drop great items */
#define RF1_DROP_USEFUL         0x40000000      /* Drop "useful" items */
#define RF1_DROP_CHOSEN         0x80000000      /* Drop "chosen" items */

/*
 * New monster race bit flags
 */
#define RF2_STUPID                      0x00000001      /* Monster is stupid */
#define RF2_SMART                       0x00000002      /* Monster is smart */
#define RF2_CAN_SPEAK            0x00000004  /* TY: can speak */
#define RF2_REFLECTING                  0x00000008      /* Reflects bolts */
#define RF2_INVISIBLE           0x00000010      /* Monster avoids vision */
#define RF2_COLD_BLOOD          0x00000020      /* Monster avoids infra */
#define RF2_EMPTY_MIND          0x00000040      /* Monster avoids telepathy */
#define RF2_WEIRD_MIND          0x00000080      /* Monster avoids telepathy? */
#define RF2_MULTIPLY            0x00000100      /* Monster reproduces */
#define RF2_REGENERATE          0x00000200      /* Monster regenerates */
#define RF2_SHAPECHANGER        0x00000400  /* TY: shapechanger */
#define RF2_ATTR_ANY            0x00000800  /* TY: Attr_any */
#define RF2_POWERFUL            0x00001000      /* Monster has strong breath */
#define RF2_ELDRITCH_HORROR             0x00002000      /* Sanity-blasting horror    */
#define RF2_AURA_FIRE                   0x00004000      /* Burns in melee */
#define RF2_AURA_ELEC                   0x00008000      /* Shocks in melee */
#define RF2_OPEN_DOOR           0x00010000      /* Monster can open doors */
#define RF2_BASH_DOOR           0x00020000      /* Monster can bash doors */
#define RF2_PASS_WALL           0x00040000      /* Monster can pass walls */
#define RF2_KILL_WALL           0x00080000      /* Monster can destroy walls */
#define RF2_MOVE_BODY           0x00100000      /* Monster can move monsters */
#define RF2_KILL_BODY           0x00200000      /* Monster can kill monsters */
#define RF2_TAKE_ITEM           0x00400000      /* Monster can pick up items */
#define RF2_KILL_ITEM           0x00800000      /* Monster can crush items */
#define RF2_BRAIN_1                     0x01000000
#define RF2_BRAIN_2                     0x02000000
#define RF2_BRAIN_3                     0x04000000
#define RF2_BRAIN_4                     0x08000000
#define RF2_BRAIN_5                     0x10000000
#define RF2_BRAIN_6                     0x20000000
#define RF2_BRAIN_7                     0x40000000
#define RF2_BRAIN_8                     0x80000000

/*
 * New monster race bit flags
 */
#define RF3_ORC                         0x00000001      /* Orc */
#define RF3_TROLL                       0x00000002      /* Troll */
#define RF3_GIANT                       0x00000004      /* Giant */
#define RF3_DRAGON                      0x00000008      /* Dragon */
#define RF3_DEMON                       0x00000010      /* Demon */
#define RF3_UNDEAD                      0x00000020      /* Undead */
#define RF3_EVIL                        0x00000040      /* Evil */
#define RF3_ANIMAL                      0x00000080      /* Animal */
#define RF3_GOOD                        0x00000200      /* Good */
#define RF3_AURA_COLD                        0x00000400      /* Freezes in melee */
#define RF3_NONLIVING           0x00000800  /* TY: Non-Living (?) */
#define RF3_HURT_LITE           0x00001000      /* Hurt by lite */
#define RF3_HURT_ROCK           0x00002000      /* Hurt by rock remover */
#define RF3_SUSCEP_FIRE           0x00004000      /* Hurt badly by fire */
#define RF3_SUSCEP_COLD           0x00008000      /* Hurt badly by cold */
#define RF3_IM_ACID                     0x00010000      /* Resist acid a lot */
#define RF3_IM_ELEC                     0x00020000      /* Resist elec a lot */
#define RF3_IM_FIRE                     0x00040000      /* Resist fire a lot */
#define RF3_IM_COLD                     0x00080000      /* Resist cold a lot */
#define RF3_IM_POIS                     0x00100000      /* Resist poison a lot */
#define RF3_RES_TELE                    0x00200000      /* Resist teleportation */
#define RF3_RES_NETH            0x00400000      /* Resist nether a lot */
#define RF3_RES_WATE            0x00800000      /* Resist water */
#define RF3_RES_PLAS            0x01000000      /* Resist plasma */
#define RF3_RES_NEXU            0x02000000      /* Resist nexus */
#define RF3_RES_DISE            0x04000000      /* Resist disenchantment */
/* 0x08000000 is free! :) /*/
#define RF3_NO_FEAR                     0x10000000      /* Cannot be scared */
#define RF3_NO_STUN                     0x20000000      /* Cannot be stunned */
#define RF3_NO_CONF                     0x40000000      /* Cannot be confused */
#define RF3_NO_SLEEP            0x80000000      /* Cannot be slept */

/*
 * New monster race bit flags
 */
#define RF4_SHRIEK                      0x00000001  /* Shriek for help */
#define RF4_XXX2                        0x00000002  /* (?) */
#define RF4_XXX3                        0x00000004  /* (?) */
#define RF4_ROCKET                      0x00000008  /* TY: Rocket */
#define RF4_ARROW_1                     0x00000010  /* Fire an arrow (light) */
#define RF4_ARROW_2                     0x00000020  /* Fire an arrow (heavy) */
#define RF4_ARROW_3                     0x00000040  /* Fire missiles (light) */
#define RF4_ARROW_4                     0x00000080  /* Fire missiles (heavy) */
#define RF4_BR_ACID                     0x00000100  /* Breathe Acid */
#define RF4_BR_ELEC                     0x00000200  /* Breathe Elec */
#define RF4_BR_FIRE                     0x00000400  /* Breathe Fire */
#define RF4_BR_COLD                     0x00000800  /* Breathe Cold */
#define RF4_BR_POIS                     0x00001000  /* Breathe Poison */
#define RF4_BR_NETH                     0x00002000  /* Breathe Nether */
#define RF4_BR_LITE                     0x00004000  /* Breathe Lite */
#define RF4_BR_DARK                     0x00008000  /* Breathe Dark */
#define RF4_BR_CONF                     0x00010000  /* Breathe Confusion */
#define RF4_BR_SOUN                     0x00020000  /* Breathe Sound */
#define RF4_BR_CHAO                     0x00040000  /* Breathe Chaos */
#define RF4_BR_DISE                     0x00080000  /* Breathe Disenchant */
#define RF4_BR_NEXU                     0x00100000  /* Breathe Nexus */
#define RF4_BR_TIME                     0x00200000  /* Breathe Time */
#define RF4_BR_INER                     0x00400000  /* Breathe Inertia */
#define RF4_BR_GRAV                     0x00800000  /* Breathe Gravity */
#define RF4_BR_SHAR                     0x01000000  /* Breathe Shards */
#define RF4_BR_PLAS                     0x02000000  /* Breathe Plasma */
#define RF4_BR_WALL                     0x04000000  /* Breathe Force */
#define RF4_BR_MANA                     0x08000000  /* Breathe Mana */
#define RF4_BA_NUKE                     0x10000000  /* TY: Nuke Ball */
#define RF4_BR_NUKE                     0x20000000  /* TY: Toxic Breath */
#define RF4_BA_CHAO                     0x40000000  /* Chaos Ball */
#define RF4_BR_DISI                     0x80000000  /* Breathe Disintegration */

/*
 * New monster race bit flags
 */
#define RF5_BA_ACID                     0x00000001      /* Acid Ball */
#define RF5_BA_ELEC                     0x00000002      /* Elec Ball */
#define RF5_BA_FIRE                     0x00000004      /* Fire Ball */
#define RF5_BA_COLD                     0x00000008      /* Cold Ball */
#define RF5_BA_POIS                     0x00000010      /* Poison Ball */
#define RF5_BA_NETH                     0x00000020      /* Nether Ball */
#define RF5_BA_WATE                     0x00000040      /* Water Ball */
#define RF5_BA_MANA                     0x00000080      /* Mana Storm */
#define RF5_BA_DARK                     0x00000100      /* Darkness Storm */
#define RF5_DRAIN_MANA          0x00000200      /* Drain Mana */
#define RF5_MIND_BLAST          0x00000400      /* Blast Mind */
#define RF5_BRAIN_SMASH         0x00000800      /* Smash Brain */
#define RF5_CAUSE_1                     0x00001000      /* Cause Light Wound */
#define RF5_CAUSE_2                     0x00002000      /* Cause Serious Wound */
#define RF5_CAUSE_3                     0x00004000      /* Cause Critical Wound */
#define RF5_CAUSE_4                     0x00008000      /* Cause Mortal Wound */
#define RF5_BO_ACID                     0x00010000      /* Acid Bolt */
#define RF5_BO_ELEC                     0x00020000      /* Elec Bolt (unused) */
#define RF5_BO_FIRE                     0x00040000      /* Fire Bolt */
#define RF5_BO_COLD                     0x00080000      /* Cold Bolt */
#define RF5_BO_POIS                     0x00100000      /* Poison Bolt (unused) */
#define RF5_BO_NETH                     0x00200000      /* Nether Bolt */
#define RF5_BO_WATE                     0x00400000      /* Water Bolt */
#define RF5_BO_MANA                     0x00800000      /* Mana Bolt */
#define RF5_BO_PLAS                     0x01000000      /* Plasma Bolt */
#define RF5_BO_ICEE                     0x02000000      /* Ice Bolt */
#define RF5_MISSILE                     0x04000000      /* Magic Missile */
#define RF5_SCARE                       0x08000000      /* Frighten Player */
#define RF5_BLIND                       0x10000000      /* Blind Player */
#define RF5_CONF                        0x20000000      /* Confuse Player */
#define RF5_SLOW                        0x40000000      /* Slow Player */
#define RF5_HOLD                        0x80000000      /* Paralyze Player */

/*
 * New monster race bit flags
 */
#define RF6_HASTE                       0x00000001      /* Speed self */
#define RF6_HAND_DOOM                   0x00000002      /* Hand of Doom */
#define RF6_HEAL                        0x00000004      /* Heal self */
#define RF6_XXX2                        0x00000008      /* Heal a lot (?) */
#define RF6_BLINK                       0x00000010      /* Teleport Short */
#define RF6_TPORT                       0x00000020      /* Teleport Long */
#define RF6_TELE_TO                     0x00000040      /* Move player to monster */
#define RF6_TELE_AWAY                   0x00000080      /* Move player far away */
#define RF6_TELE_LEVEL                  0x00000100      /* Move player vertically */
#define RF6_DARKNESS                    0x00000200      /* Create Darkness */
#define RF6_TRAPS                       0x00000400      /* Create Traps */
#define RF6_FORGET                      0x00000800      /* Cause amnesia */
#define RF6_RAISE_DEAD                  0x00001000      /* Raise Dead */
#define RF6_S_BUG                       0x00002000      /* Summon Software bug */
#define RF6_S_RNG                       0x00004000      /* Summon RNG */
#define RF6_S_KIN                       0x00010000      /* Summon "kin" */
#define RF6_S_CYBER                     0x00020000      /* Summon Cyberdemons! */
#define RF6_S_MONSTER                   0x00040000      /* Summon Monster */
#define RF6_S_MONSTERS                  0x00080000      /* Summon Monsters */
#define RF6_S_ANT                       0x00100000      /* Summon Ants */
#define RF6_S_SPIDER                    0x00200000      /* Summon Spiders */
#define RF6_S_HOUND                     0x00400000      /* Summon Hounds */
#define RF6_S_HYDRA                     0x00800000      /* Summon Hydras */
#define RF6_S_ANGEL                     0x01000000      /* Summon Angel */
#define RF6_S_DEMON                     0x02000000      /* Summon Demon */
#define RF6_S_UNDEAD            0x04000000      /* Summon Undead */
#define RF6_S_DRAGON            0x08000000      /* Summon Dragon */
#define RF6_S_HI_UNDEAD         0x10000000      /* Summon Greater Undead */
#define RF6_S_HI_DRAGON         0x20000000      /* Summon Ancient Dragon */
#define RF6_S_WRAITH            0x40000000      /* Summon Unique Wraith */
#define RF6_S_UNIQUE            0x80000000      /* Summon Unique Monster */

/*
 * New monster race bit flags
 */
#define RF7_AQUATIC             0x00000081  /* Aquatic monster */
#define RF7_CAN_SWIM            0x00000002  /* Monster can swim */
#define RF7_CAN_FLY             0x00000004  /* Monster can fly */
#define RF7_FRIENDLY            0x00000008  /* Monster is friendly */
#define RF7_PET                 0x00000010  /* Monster is a pet */
#define RF7_MORTAL              0x00000020  /* Monster is a mortal being */
#define RF7_PLAYER_MONSTER      0x00000040  /* Monster is an old player */
#define RF7_NAZGUL              0x00000080  /* Monster is a Nazgul */
#define RF7_FAST                0x00000100  /* Monster is unusually fast */
#define RF7_VERY_FAST           0x00000200  /* Monster is REALLY fast */
#define RF7_LEVEL_100           0x00000400  /* Monster is always level 100 */
#define RF7_VARIAZ              0x00000800  /* That monster is VARIAZ!! */
#define RF7_SEDUCE_MALES        0x00002000  /* Have an easy time with males! */
#define RF7_SEDUCE_FEMALES      0x00004000  /* Every man's dream! :) */
#define RF7_TOWNSFOLK           0x00008000  /* Monster is a townsfolk */
#define RF7_NEVER_MOVE_FRIENDLY 0x00010000  /* Monster will not move if friendly. */
#define RF7_GUARD               0x00020000  /* Monster is a town guard. */
#define RF7_NEVER_BOSS          0x00040000  /* Monster is never a boss. */
#define RF7_NEVER_ATTACKED      0x00080000  /* Enemy monsters will not attack this creature. */
#define RF7_DEATH_DIALOG        0x00100000  /* Speak on death. */
#define RF7_ICE                 0x00200000  /* An "Ice" monster. */
#define RF7_IMMORTAL            0x00400000  /* Immortal enemy. */
#define RF7_RANDOM              0x00800000  /* Random monster. */
#define RF7_UNPLAYABLE          0x01000000  /* Unplayable with Monster race. */
#define RF7_SCALED              0x02000000  /* Scaled enemy. Scales with player level. */
#define RF7_SECRET_BOSS         0x04000000  /* Secret level boss. */
#define RF7_CANNOT_COUNTERSPELL 0x08000000  /* Can't counterspell this monster. */


/*
 * Monster race flags
 */
#define RF8_DUNGEON             0x00000001
#define RF8_WILD_TOWN           0x00000002
#define RF8_XXX8X02             0x00000004
#define RF8_WILD_SHORE          0x00000008
#define RF8_WILD_OCEAN          0x00000010
#define RF8_WILD_WASTE          0x00000020
#define RF8_WILD_WOOD           0x00000040
#define RF8_WILD_VOLCANO        0x00000080
#define RF8_XXX8X08             0x00000100
#define RF8_WILD_MOUNTAIN       0x00000200
#define RF8_WILD_GRASS          0x00000400
/********* FREE *********/
#define RF8_CTHANGBAND          0x00001000
#define RF8_PERNANGBAND         0x00002000
#define RF8_ZANGBAND            0x00004000
#define RF8_JOKEANGBAND         0x00008000
#define RF8_ANGBAND             0x00010000

#define RF8_WILD_TOO            0x80000000


/*
 * Monster race flags
 */
#define RF9_DROP_CORPSE         0x00000001
#define RF9_DROP_SKELETON       0x00000002
/****/
/****/
#define RF9_HAS_EGG             0x00000010      /* Can be monster's eggs */
#define RF9_IMPRESED            0x00000020      /* The monster can follow you on each level until he dies */
#define RF9_SUSCEP_ACID         0x00000040      /* Susceptible to acid */
#define RF9_SUSCEP_ELEC         0x00000080      /* Susceptible to lightning */
#define RF9_SUSCEP_POIS         0x00000100      /* Susceptible to poison */
#define RF9_KILL_TREES          0x00000200      /* Monster can eat trees */
#define RF9_WYRM_PROTECT        0x00000400      /* The monster is protected by great wyrms of power: They'll be summoned if it's killed */
#define RF9_DOPPLEGANGER        0x00000800      /* The monster looks like you */
#define RF9_ONLY_DEPTH          0x00001000      /* The monster can only be generated at the GIVEN depth */
#define RF9_SPECIAL_GENE        0x00002000      /* The monster can only be generated in special conditions like quests, special dungeons, ... */



/*
 * Hack -- choose "intelligent" spells when desperate
 */

#define RF4_INT_MASK \
   0L

#define RF5_INT_MASK \
  (RF5_HOLD | RF5_SLOW | RF5_CONF | RF5_BLIND | RF5_SCARE)

#define RF6_INT_MASK \
   (RF6_BLINK |  RF6_TPORT | RF6_TELE_LEVEL | RF6_TELE_AWAY | \
    RF6_HEAL | RF6_HASTE | RF6_TRAPS | \
    RF6_S_KIN | RF6_S_CYBER | RF6_S_MONSTER | RF6_S_MONSTERS | \
    RF6_S_ANT | RF6_S_SPIDER | RF6_S_HOUND | RF6_S_HYDRA | \
    RF6_S_ANGEL | RF6_S_DRAGON | RF6_S_UNDEAD | RF6_S_DEMON | \
    RF6_S_HI_DRAGON | RF6_S_HI_UNDEAD | RF6_S_WRAITH | RF6_S_UNIQUE | \
    RF6_S_BUG | RF6_S_RNG)

 
/*
 * Hack -- "bolt" spells that may hurt fellow monsters
 */
#define RF4_BOLT_MASK \
  (RF4_ARROW_1 | RF4_ARROW_2 | RF4_ARROW_3 | RF4_ARROW_4)

#define RF5_BOLT_MASK \
   (RF5_BO_ACID | RF5_BO_ELEC | RF5_BO_FIRE | RF5_BO_COLD | \
    RF5_BO_POIS | RF5_BO_NETH | RF5_BO_WATE | RF5_BO_MANA | \
    RF5_BO_PLAS | RF5_BO_ICEE | RF5_MISSILE)

#define RF6_BOLT_MASK \
   0L


/* Hack -- summon spells */

#define RF4_SUMMON_MASK \
    0L

#define RF5_SUMMON_MASK \
    0L

#define RF6_SUMMON_MASK \
    (RF6_S_KIN | RF6_S_CYBER | RF6_S_MONSTER | RF6_S_MONSTERS | RF6_S_ANT | \
     RF6_S_SPIDER | RF6_S_HOUND | RF6_S_HYDRA | RF6_S_ANGEL | RF6_S_DEMON | \
     RF6_S_UNDEAD | RF6_S_DRAGON | RF6_S_HI_UNDEAD | RF6_S_HI_DRAGON | \
     RF6_S_WRAITH | RF6_S_UNIQUE | RF6_S_BUG | RF6_S_RNG)


/*** Macro Definitions ***/


/*
 * Hack -- The main "screen"
 */
#define term_screen     (angband_term[0])


/*
 * Determine if a given inventory item is "aware"
 */
#define object_aware_p(T) \
    (k_info[(T)->k_idx].aware)

/*
 * Determine if a given inventory item is "tried"
 */
#define object_tried_p(T) \
    (k_info[(T)->k_idx].tried)


/*
 * Determine if a given inventory item is "known"
 * Test One -- Check for special "known" tag
 * Test Two -- Check for "Easy Know" + "Aware"
 */
#define object_known_p(T) \
    (((T)->ident & (IDENT_KNOWN)) || \
     (k_info[(T)->k_idx].easy_know && k_info[(T)->k_idx].aware))


/*
 * Return the "attr" for a given item.
 * Use "flavor" if available.
 * Default to user definitions.
 */
#define object_attr(T) \
     ((T)->tval == TV_RANDART ? random_artifacts[(T)->sval].attr : \
         (k_info[(T)->k_idx].flavor) ? \
	 (misc_to_attr[k_info[(T)->k_idx].flavor]) : \
	 (k_info[(T)->k_idx].x_attr))

/*
 * Return the "char" for a given item.
 * Use "flavor" if available.
 * Default to user definitions.
 */
#define object_char(T) \
	((k_info[(T)->k_idx].flavor) ? \
	 (misc_to_char[k_info[(T)->k_idx].flavor]) : \
	 (k_info[(T)->k_idx].x_char))



/*
 * Artifacts use the "name1" field
 */
#define artifact_p(T) \
        ((T)->tval == TV_RANDART || ((T)->name1 ? TRUE : FALSE))

/*
 * Ego-Items use the "name2" field
 */
#define ego_item_p(T) \
        ((T)->name2 ? TRUE : FALSE)


/*
 * Broken items.
 */
#define broken_p(T) \
	((T)->ident & (IDENT_BROKEN))

/*
 * Cursed items.
 */
#define cursed_p(T) \
	((T)->ident & (IDENT_CURSED))


/*
 * Convert an "attr"/"char" pair into a "pict" (P)
 */
#define PICT(A,C) \
	((((u16b)(A)) << 8) | ((byte)(C)))

/*
 * Convert a "pict" (P) into an "attr" (A)
 */
#define PICT_A(P) \
	((byte)((P) >> 8))

/*
 * Convert a "pict" (P) into an "char" (C)
 */
#define PICT_C(P) \
	((char)((byte)(P)))


/*
 * Convert a "location" (Y,X) into a "grid" (G)
 */
#define GRID(Y,X) \
	(256 * (Y) + (X))

/*
 * Convert a "grid" (G) into a "location" (Y)
 */
#define GRID_Y(G) \
	((int)((G) / 256U))

/*
 * Convert a "grid" (G) into a "location" (X)
 */
#define GRID_X(G) \
	((int)((G) % 256U))


/*
 * Determines if a map location is fully inside the outer walls
 */
#define in_bounds(Y,X) \
   (((Y) > 0) && ((X) > 0) && ((Y) < cur_hgt-1) && ((X) < cur_wid-1))

/*
 * Determines if a map location is on or inside the outer walls
 */
#define in_bounds2(Y,X) \
   (((Y) >= 0) && ((X) >= 0) && ((Y) < cur_hgt) && ((X) < cur_wid))


/*
 * Determines if a map location is currently "on screen" -RAK-
 * Note that "panel_contains(Y,X)" always implies "in_bounds2(Y,X)".
 */
#define panel_contains(Y,X) \
  (((Y) >= panel_row_min) && ((Y) <= panel_row_max) && \
   ((X) >= panel_col_min) && ((X) <= panel_col_max))



/*
 * Determine if a "legal" grid is a "floor" grid
 *
 * Line 1 -- forbid doors, rubble, seams, walls
 *
 * Note that the terrain features are split by a one bit test
 * into those features which block line of sight and those that
 * do not, allowing an extremely fast single bit check below.
 *
 * Add in the fact that some new terrain (water & lava) do NOT block sight
 * -KMW-
 */
#define cave_floor_bold(Y,X) \
        (f_info[cave[Y][X].feat].flags1 & FF1_FLOOR)

/* Here's an exception for the pits... */
#define cave_floor_bold_project(Y,X) \
        ((f_info[cave[Y][X].feat].flags1 & FF1_FLOOR) || cave[Y][X].feat == 87)

/*
 * Determine if a "legal" grid isn't a "blocking line of sight" grid
 *
 * Line 1 -- forbid doors, rubble, seams, walls
 *
 * Note that the terrain features are split by a one bit test
 * into those features which block line of sight and those that
 * do not, allowing an extremely fast single bit check below.
 *
 * Add in the fact that some new terrain (water & lava) do NOT block sight
 * -KMW-
 */
#define cave_sight_bold(Y,X) \
        (!(f_info[cave[Y][X].feat].flags1 & FF1_NO_VISION))


/*
 * Determine if a "legal" grid is a "clean" floor grid
 *
 * Line 1 -- forbid non-floors
 * Line 2 -- forbid deep water -KMW-
 * Line 3 -- forbid deep lava -KMW-
 * Line 4 -- forbid normal objects
 */
#define cave_clean_bold(Y,X) \
        ((f_info[cave[Y][X].feat].flags1 & FF1_FLOOR) && \
          (cave[Y][X].o_idx == 0) && (!(f_info[cave[Y][X].feat].flags1 & FF1_PERMANENT)))


/*
 * Determine if a "legal" grid is an "empty" floor grid
 *
 * Line 1 -- forbid doors, rubble, seams, walls
 * Line 2 -- forbid normal monsters
 * Line 3 -- forbid the player
 */
#define cave_empty_bold(Y,X) \
    (cave_floor_bold(Y,X) && \
     !(cave[Y][X].m_idx) && (cave[Y][X].feat != FEAT_LESS) && (cave[Y][X].feat != FEAT_MORE) && (cave[Y][X].feat != FEAT_SHAFT_UP) && (cave[Y][X].feat != FEAT_SHAFT_DOWN) && \
     !(((Y) == py) && ((X) == px)))


/*
 * Determine if a "legal" grid is an "naked" floor grid
 *
 * Line 1 -- forbid non-floors, non-shallow water & lava -KMW-
 * Line 2 -- forbid normal objects
 * Line 3 -- forbid player/monsters
 */
#define cave_naked_bold(Y,X) \
        ((f_info[cave[Y][X].feat].flags1 & FF1_FLOOR) && \
	  (cave[Y][X].o_idx == 0) && \
          (cave[Y][X].m_idx == 0))



/*
 * Determine if a "legal" grid is "permanent"
 *
 * Line 1   -- perma-walls
 * Line 2-3 -- stairs
 * Line 4-5 -- building doors -KMW-
 * Line 6-7 -- shop doors
 */
#define cave_perma_bold(Y,X) \
       (f_info[cave[Y][X].feat].flags1 & FF1_PERMANENT)


/*
 * Grid based version of "cave_floor_bold()"
 */
#define cave_floor_grid(C) \
    (f_info[(C)->feat].flags1 & FF1_FLOOR)


/*
 * Grid based version of "cave_clean_bold()"
 */
#define cave_clean_grid(C) \
    ((f_info[(C)->feat].flags1 & FF1_FLOOR) && \
     (!(C)->o_idx))

/*
 * Grid based version of "cave_sight_bold()"
 */
#define cave_sight_grid(C) \
        (!(f_info[(C)->feat].flags1 & FF1_NO_VISION))

/*
 * Grid based version of "cave_empty_bold()"
 */
#define cave_empty_grid(C) \
    (cave_floor_grid(C) && \
     !((C)->m_idx) && \
     !((C) == &cave[py][px]))

/*
 * Grid based version of "cave_empty_bold()"
 */
#define cave_naked_grid(C) \
    ((f_info[(C)->feat].flags1 & FF1_FLOOR) && \
     !((C)->o_idx) && \
     !((C)->m_idx) && \
     !((C) == &cave[py][px]))


/*
 * Grid based version of "cave_perma_bold()"
 */
#define cave_perma_grid(C) \
       (f_info[(C)->feat].flags1 & FF1_PERMANENT)



/*
 * Determine if a "legal" grid is within "los" of the player
 *
 * Note the use of comparison to zero to force a "boolean" result
 */
#define player_has_los_bold(Y,X) \
    ((cave[Y][X].info & (CAVE_VIEW)) != 0)




/*
 * Hack -- Prepare to use the "Secure" routines
 */
#if defined(SET_UID) && defined(SECURE)
extern int PlayerUID;
# define getuid() PlayerUID
# define geteuid() PlayerUID
#endif



/*** Color constants ***/


/*
 * Angband "attributes" (with symbols, and base (R,G,B) codes)
 *
 * The "(R,G,B)" codes are given in "fourths" of the "maximal" value,
 * and should "gamma corrected" on most (non-Macintosh) machines.
 */
#define TERM_DARK                0  /* 'd' */   /* 0,0,0 */
#define TERM_WHITE               1  /* 'w' */   /* 4,4,4 */
#define TERM_SLATE               2  /* 's' */   /* 2,2,2 */
#define TERM_ORANGE              3  /* 'o' */   /* 4,2,0 */
#define TERM_RED                 4  /* 'r' */   /* 3,0,0 */
#define TERM_GREEN               5  /* 'g' */   /* 0,2,1 */
#define TERM_BLUE                6  /* 'b' */   /* 0,0,4 */
#define TERM_UMBER               7  /* 'u' */   /* 2,1,0 */
#define TERM_L_DARK              8  /* 'D' */   /* 1,1,1 */
#define TERM_L_WHITE             9  /* 'W' */   /* 3,3,3 */
#define TERM_VIOLET             10  /* 'v' */   /* 4,0,4 */
#define TERM_YELLOW             11  /* 'y' */   /* 4,4,0 */
#define TERM_L_RED              12  /* 'R' */   /* 4,0,0 */
#define TERM_L_GREEN            13  /* 'G' */   /* 0,4,0 */
#define TERM_L_BLUE             14  /* 'B' */   /* 0,4,4 */
#define TERM_L_UMBER            15  /* 'U' */   /* 3,2,1 */
#define TERM_INDIGO             18


/*** Sound constants ***/


/*
 * Mega-Hack -- some primitive sound support (see "main-win.c")
 *
 * Some "sound" constants for "Term_xtra(TERM_XTRA_SOUND, val)"
 */
#define SOUND_HIT        1
#define SOUND_MISS       2
#define SOUND_FLEE       3
#define SOUND_DROP       4
#define SOUND_KILL       5
#define SOUND_LEVEL      6
#define SOUND_DEATH      7
#define SOUND_STUDY      8
#define SOUND_TELEPORT   9
#define SOUND_SHOOT     10
#define SOUND_QUAFF     11
#define SOUND_ZAP       12
#define SOUND_WALK      13
#define SOUND_TPOTHER   14
#define SOUND_HITWALL   15
#define SOUND_EAT       16
#define SOUND_STORE1    17
#define SOUND_STORE2    18
#define SOUND_STORE3    19
#define SOUND_STORE4    20
#define SOUND_DIG       21
#define SOUND_OPENDOOR  22
#define SOUND_SHUTDOOR  23
#define SOUND_TPLEVEL   24
#define SOUND_SCROLL	25
#define SOUND_BUY	    26
#define SOUND_SELL	    27
#define SOUND_WARN	    28
#define SOUND_ROCKET    29 /* Somebody's shooting rockets */
#define SOUND_N_KILL    30 /* The player kills a non-living/undead monster */
#define SOUND_U_KILL    31 /* The player kills a unique */
#define SOUND_QUEST     32 /* The player has just completed a quest */
#define SOUND_HEAL      33 /* The player was healed a little bit */
#define SOUND_X_HEAL    34 /* The player was healed full health */
#define SOUND_BITE      35 /* A monster bites you */
#define SOUND_CLAW      36 /* A monster claws you */
#define SOUND_M_SPELL   37 /* A monster casts a miscellaneous spell */
#define SOUND_SUMMON    38 /* A monster casts a summoning spell  */
#define SOUND_BREATH    39 /* A monster breathes */
#define SOUND_BALL      40 /* A monster casts a ball / bolt spell */
#define SOUND_M_HEAL    41 /* A monster heals itself somehow */
#define SOUND_ATK_SPELL 42 /* A monster casts a misc. offensive spell */
#define SOUND_EVIL      43 /* Something nasty has just happened! */
#define SOUND_TOUCH     44 /* A monster touches you */
#define SOUND_STING     45 /* A monster stings you */
#define SOUND_CRUSH     46 /* A monster crushes / envelopes you */
#define SOUND_SLIME     47 /* A monster drools/spits/etc on you */
#define SOUND_WAIL      48 /* A monster wails */
#define SOUND_WINNER    49 /* Just won the game! */
#define SOUND_FIRE      50 /* An item was burned  */
#define SOUND_ACID      51 /* An item was destroyed by acid */
#define SOUND_ELEC      52 /* An item was destroyed by electricity */
#define SOUND_COLD      53 /* An item was shattered */
#define SOUND_ILLEGAL   54 /* Illegal command attempted */
#define SOUND_FAIL      55 /* Fail to get a spell off / activate an item */
#define SOUND_WAKEUP    56 /* A monster wakes up */
#define SOUND_INVULN    57 /* Invulnerability! */
#define SOUND_FALL      58 /* Falling through a trapdoor... */
#define SOUND_PAIN      59 /* A monster is in pain! */
#define SOUND_DESTITEM  60 /* An item was destroyed by misc. means */
#define SOUND_MOAN      61 /* A monster makes a moan/beg/insult attack */
#define SOUND_SHOW      62 /* A monster makes a "show" attack */
#define SOUND_UNUSED    63 /* (no sound for gaze attacks) */
#define SOUND_EXPLODE   64 /* Something (or somebody) explodes */

/*
 * Mega-Hack -- maximum known sounds
 */
#define SOUND_MAX 65



/*** Hack ***/


/*
 * Hack -- attempt to reduce various values
 */
#ifdef ANGBAND_LITE
# undef MACRO_MAX
# define MACRO_MAX      128
# undef QUARK_MAX
# define QUARK_MAX      128
# undef MESSAGE_MAX
# define MESSAGE_MAX    128
# undef MESSAGE_BUF
# define MESSAGE_BUF    4096
#endif

/*
 * Road flags
 */
#define ROAD_NORTH	1
#define ROAD_SOUTH	2
#define ROAD_EAST	4
#define ROAD_WEST	8

/*
 * Quest status
 */
#define QUEST_STATUS_UNTAKEN         0
#define QUEST_STATUS_TAKEN           1
#define QUEST_STATUS_COMPLETED       2
#define QUEST_STATUS_REWARDED        3
#define QUEST_STATUS_FINISHED        4
#define QUEST_STATUS_FAILED          5
#define QUEST_STATUS_FAILED_DONE     6

/*
 * Quest type
 */
#define QUEST_TYPE_KILL_LEVEL                1
#define QUEST_TYPE_KILL_ANY_LEVEL            2
#define QUEST_TYPE_FIND_ARTIFACT             3
#define QUEST_TYPE_FIND_EXIT                 4
#define QUEST_TYPE_KILL_NUMBER               5
#define QUEST_TYPE_KILL_ALL                  6
#define QUEST_TYPE_RANDOM                    7

/*
 * Quest flags
 */
#define QUEST_FLAG_SILENT  0x01 /* no messages for completion */
#define QUEST_FLAG_PRESET  0x02 /* quest is outside the main dungeon */
#define QUEST_FLAG_ONCE    0x04 /* quest is marked finished after leaving */

/*
 * Initialization flags
 */
#define INIT_SHOW_TEXT        1
#define INIT_ASSIGN           2
#define INIT_CREATE_DUNGEON   4

#ifdef USE_PYTHON
/*
 * Events definitions
 */
#define MAX_HANDLER             10

#define EVENT_NONE              0
#define EVENT_COMMAND           1
#define EVENT_MOVE              2
#define EVENT_SEARCH            3
#define EVENT_ENTER_QUEST       4
#define EVENT_FEELING           5
#define EVENT_GENERATE_LVL      6
#define EVENT_GO_UP             7
#define EVENT_GO_DOWN           8
#define EVENT_START_GAME        9
#define EVENT_AIM_WAND          10
#define EVENT_USE_STAFF         11
#define EVENT_ZAP_ROD           12
#define EVENT_QUAFF_POTION      13
#define EVENT_READ_SCROLL       14
#define EVENT_ACTIVATE_ART      15
#define EVENT_EAT_FOOD          16
#define EVENT_XTRA_POWER        17
#define EVENT_MONSTER_DEATH     18
#define EVENT_ATTACK            19
#define EVENT_MAX               20
#endif


/*
 * Defines of the different dungeon types
 */
#define DUNGEON_WILDERNESS      0
#define DUNGEON_MIRKWOOD        1
#define DUNGEON_MORDOR          2
#define DUNGEON_ANGBAND         3
#define DUNGEON_GALGALS         4
#define DUNGEON_VOLCANO         5
#define DUNGEON_HELL            6
#define DUNGEON_NUMENOR         7
#define DUNGEON_VANILLA         8

/* Max depth of each dungeon(max_depth - min_depth) */
#define MAX_DUNGEON_DEPTH       1024

#define DUNGEON_MODE_NONE       0
#define DUNGEON_MODE_AND        1
#define DUNGEON_MODE_NAND       2
#define DUNGEON_MODE_OR         3
#define DUNGEON_MODE_NOR        4

/*
 * Defines for the inscriptions
 */
#define INSCRIP_EXEC_ENGRAVE    0x01
#define INSCRIP_EXEC_WALK       0x02
#define INSCRIP_EXEC_MONST_WALK 0x04

#define INSCRIP_NONE            0
#define INSCRIP_LIGHT           1
#define INSCRIP_DARK            2
#define INSCRIP_STORM           3
#define INSCRIP_PROTECTION      4
#define INSCRIP_DWARF_SUMMON    5
#define INSCRIP_CHASM           6
#define INSCRIP_BLACK_FIRE      7
#define MAX_INSCRIPTIONS        8

/*
 * Player monsters & ghost defines
 */
#define GHOST_R_IDX_HEAD        967
#define GHOST_R_IDX_TAIL        977
#define MAX_GHOSTS              (GHOST_R_IDX_TAIL - GHOST_R_IDX_HEAD)

/*
 * Various class dependant defines
 */
#define CLASS_NONE              0
#define CLASS_MANA_PATH         1
#define CLASS_CANALIZE_MANA     2
#define CLASS_WINDS_MANA        3

#define CLASS_MANA_PATH_ERASE           0x01
#define CLASS_FLOOD_LEVEL               0x02
#define CLASS_CANALIZE_MANA_EXTRA       0x04
#define CLASS_UNDEAD                    0x08
#define CLASS_ANTIMAGIC                 0x10

/*
 * Types of birth presents
 */
#define BIRTH_NONE      0
#define BIRTH_RING      1
#define BIRTH_AMULET    2

/*
 * Automatic note taking types
 */
#define NOTE_BIRTH		1
#define NOTE_WINNER		2
#define NOTE_SAVE_GAME		3
#define NOTE_ENTER_DUNGEON	4

/* Graphic modes */
#define GRAPHICS_NONE       0
#define GRAPHICS_ORIGINAL   1
#define GRAPHICS_ADAM_BOLT  2

/* BOSS ABILITES!!! */
#define BOSS_IMMUNE_WEAPONS  0x00000001L
#define BOSS_IMMUNE_MAGIC    0x00000002L
#define BOSS_DOUBLE_DAMAGES  0x00000004L
#define BOSS_HALVE_DAMAGES   0x00000008L
#define BOSS_CURSED_HITS     0x00000010L
#define BOSS_DOUBLE_MAGIC    0x00000020L
#define BOSS_RETURNING       0x00000040L
/* These aren't really 'abilities', but Curses flags */
#define CURSE_LOWER_POWER    0x00000080L
#define CURSE_LOWER_MAGIC    0x00000100L
#define CON_JOB              0x00000200L
#define CURSE_LOCK           0x00000400L
#define CURSE_RETURNING      0x00000800L
#define CURSE_SLOW_DOWN      0x00001000L
#define CURSE_HALVE_SPEED    0x00002000L
#define CURSE_LIFE_BLAST     0x00004000L
#define CURSE_HALVE_DAMAGES  0x00008000L
#define CURSE_HALVE_MAGIC    0x00010000L
#define CURSE_HALVE_LEVEL    0x00020000L
#define CURSE_DAMAGES_CURSE  0x00040000L
#define WAR_BLESSED          0x00080000L
#define CURSE_FRAILNESS      0x00100000L
#define CURSE_INEPTITUDE     0x00200000L
#define CURSE_FEAR           0x00400000L
#define EYE_STABBED          0x00800000L
#define MUTILATE_LEGS        0x01000000L
#define MUTILATE_ARMS        0x02000000L
#define PSYCHIC_HITRATE      0x04000000L
#define MORALE_BOOST         0x08000000L
#define BOSS_MAGIC_RETURNING 0x10000000L
#define TAUNTED              0x20000000L
#define PIERCING_SPELLS      0x40000000L
#define WEAKENED_ELEMENTAL   0x80000000L

/* Constants for Called Shots! */
#define CALLED_NONE 0 /* Probably won't be used */
#define CALLED_LEGS 1
#define CALLED_ARMS 2
#define CALLED_HEAD 3

/* Constants for elemental spells */
#define ELEM_MISSILE    0x00000001L
#define ELEM_FIRE       0x00000002L
#define ELEM_COLD       0x00000004L
#define ELEM_ELEC       0x00000008L
#define ELEM_ACID       0x00000010L
#define ELEM_POIS       0x00000020L
#define ELEM_LITE       0x00000040L
#define ELEM_DARK       0x00000080L
#define ELEM_PHYSICAL   0x00000100L
#define ELEM_RADIO      0x00000200L
#define ELEM_WATER      0x00000400L
#define ELEM_CHAOS      0x00000800L
#define ELEM_EARTH      0x00001000L
#define ELEM_SOUND      0x00002000L
#define ELEM_WARP       0x00004000L
#define ELEM_MANA       0x00008000L
#define ELEM_WIND       0x00010000L

/* Constants for Alteration spells */
#define ALTER_REDUCE_HIT    0x00000001L
#define ALTER_REDUCE_DEF    0x00000002L
#define ALTER_REDUCE_SPEED  0x00000004L
#define ALTER_REDUCE_LEVEL  0x00000008L
#define ALTER_LIFE_BLAST    0x00000010L
#define ALTER_LOCK          0x00000020L
#define ALTER_HALVE_POWER   0x00000040L
#define ALTER_HALVE_MAGIC   0x00000080L
#define ALTER_STONE_TO_MUD  0x00000100L
#define ALTER_DEMORALIZE    0x00000200L
#define ALTER_RETROGRADE    0x00000400L
#define ALTER_EVOLVE        0x00000800L
#define ALTER_UNEVOLVE      0x00001000L
#define ALTER_HASTE         0x00002000L
#define ALTER_RAISE_STR     0x00004000L
#define ALTER_RAISE_INT     0x00008000L
#define ALTER_RAISE_WIS     0x00010000L
#define ALTER_RAISE_DEX     0x00020000L
#define ALTER_RAISE_CON     0x00040000L
#define ALTER_RAISE_CHR     0x00080000L
#define ALTER_POSITION      0x00100000L
#define ALTER_HASTE_OTHER   0x00200000L
#define ALTER_PHYS_RESIST   0x00400000L
#define ALTER_MAGIC_RESIST  0x00800000L
#define ALTER_STONESKIN     0x01000000L
#define ALTER_PARALYZE      0x02000000L

/* Constants for Mysticism spells */
#define MYST_HEAL               0x00000001L
#define MYST_RESTORE_STATS      0x00000002L
#define MYST_RESTORE_STATUS     0x00000004L
#define MYST_HARM               0x00000008L
#define MYST_DRAIN_LIFE         0x00000010L
#define MYST_REVIVE_MONSTER     0x00000020L
#define MYST_RESTORE_MANA       0x00000040L
#define MYST_WAR_BLESSING       0x00000080L
#define MYST_SMITE_UNDEADS      0x00000100L
#define MYST_SMITE_DEMONS       0x00000200L
#define MYST_SMITE_EVIL         0x00000400L
#define MYST_SMITE_GOOD         0x00000800L
#define MYST_BLESSING           0x00001000L

/* Constants for Conjuration spells */
#define CONJ_SUMMON_KIND        0x00000001L
#define CONJ_SUMMON_SPECIFIC    0x00000002L
#define CONJ_FIRE_FIELD         0x00000004L
#define CONJ_COLD_FIELD         0x00000008L
#define CONJ_ELEC_FIELD         0x00000010L
#define CONJ_WEBS               0x00000020L
#define CONJ_GROW_TREES         0x00000040L
#define CONJ_THORNS             0x00000080L
#define CONJ_STORMS             0x00000100L
#define CONJ_ITEM               0x00000200L
#define CONJ_MAGIC_ITEM         0x00000400L
#define CONJ_SPECIAL_ITEM       0x00000800L

/* Constants for Divinations spells! */
#define DIVI_DETECT_MONSTERS    0x00000001L
#define DIVI_DETECT_OBJECTS     0x00000002L
#define DIVI_DETECT_DOORS       0x00000004L
#define DIVI_DETECT_STAIRS      0x00000008L
#define DIVI_DETECT_CHESTS      0x00000010L
#define DIVI_TELEPATHY          0x00000020L
#define DIVI_IDENTIFY           0x00000040L
#define DIVI_SCAN_MONSTER       0x00000080L
#define DIVI_REVEAL             0x00000100L
#define DIVI_DIVINATION         0x00000200L
#define DIVI_RESTORE_FATE       0x00000400L
#define DIVI_FATE_MONSTERS      0x00000800L
#define DIVI_FATE_ITEMS         0x00001000L
#define DIVI_FATE_DUNGEONS      0x00002000L
