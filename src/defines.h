/* File: defines.h */

/*
 * Copyright (c) 1997 Ben Harrison, James E. Wilson, Robert A. Koeneke
 *
 * This software may be copied and distributed for educational, research,
 * and not for profit purposes provided that this copyright and statement
 * are included in all such copies.  Other copyrights may also apply.
 */

/*
 * Do not edit this file unless you know *exactly* what you are doing.
 *
 * Some of the values in this file were chosen to preserve game balance,
 * while others are hard-coded based on the format of old save-files, the
 * definition of arrays in various places, mathematical properties, fast
 * computation, storage limits, or the format of external text files.
 *
 * Changing some of these values will induce crashes or memory errors or
 * savefile mis-reads.  Most of the comments in this file are meant as
 * reminders, not complete descriptions, and even a complete knowledge
 * of the source may not be sufficient to fully understand the effects
 * of changing certain definitions.
 *
 * Lastly, note that the code does not always use the symbolic constants
 * below, and sometimes uses various hard-coded values that may not even
 * be defined in this file, but which may be related to definitions here.
 * This is of course bad programming practice, but nobody is perfect...
 *
 * For example, there are MANY things that depend on the screen being
 * 80x24, with the top line used for messages, the bottom line being
 * used for status, and exactly 22 lines used to show the dungeon.
 * Just because your screen can hold 46 lines does not mean that the
 * game will work if you try to use 44 lines to show the dungeon.
 *
 * You have been warned.
 */

/*
 * Name of the version/variant
 */
#define VERSION_NAME "EyAngband"

/*
 * Current version string
 */
#define VERSION_STRING	"0.2.3"

/*
 * Current version numbers
 */
#define VERSION_MAJOR	0
#define VERSION_MINOR	2
#define VERSION_PATCH	3
#define VERSION_EXTRA	0

/*
 * Version of random artifact code - EyAngband versions start from 100
 */
#define RANDART_VERSION	102

/*
 * Maximum value storable in a "byte" (hard-coded)
 */
#define MAX_UCHAR		255

/*
 * Maximum value storable in a "s16b" (hard-coded)
 */
#define MAX_SHORT		32767

/*
 * Number of grids in each block (vertically)
 * Probably hard-coded to 11, see "generate.c"
 */
#define BLOCK_HGT		11

/*
 * Number of grids in each block (horizontally)
 * Probably hard-coded to 11, see "generate.c"
 */
#define BLOCK_WID		11

/*
 * Number of grids in each panel (vertically)
 * Must be a multiple of BLOCK_HGT
 */
#define PANEL_HGT		11

/*
 * Number of grids in each panel (horizontally)
 * Must be a multiple of BLOCK_WID
 */
#define PANEL_WID		33

/*
 * Number of grids in each screen (vertically)
 * Must be a multiple of PANEL_HGT (at least 2x)
 */
#define SCREEN_HGT		22

/*
 * Number of grids in each screen (horizontally)
 * Must be a multiple of PANEL_WID (at least 2x)
 */
#define SCREEN_WID		66

/*
 * Maximum number of grids in each dungeon (horizontally)
 * Must be a multiple of SCREEN_HGT
 * Must be less or equal to 256
 */
#define MAX_DUNGEON_HGT		66

/*
 * Maximum number of grids in each dungeon (vertically)
 * Must be a multiple of SCREEN_WID
 * Must be less or equal to 256
 */
#define MAX_DUNGEON_WID		198

/*
 * Maximum number of player "sex" types (see "table.c", etc)
 */
#define MAX_SEXES		2

/* 
 * Maximum amount of starting equipment
 */
#define MAX_START_ITEMS	4

/*
 * Maximum amount of allocations for an object
 */
#define MAX_OBJ_ALLOC	4
/*
 * Maximum number of high scores in the high score file
 */
#define MAX_HISCORES	100

/*
 * Maximum dungeon level.  The player can never reach this level
 * in the dungeon, and this value is used for various calculations
 * involving object and monster creation.  It must be at least 100.
 * Setting it below 128 may prevent the creation of some objects.
 */
#define MAX_DEPTH		128

/*
 * Maximum size of the "view" array (see "cave.c")
 * Note that the "view radius" will NEVER exceed 20, and even if the "view"
 * was octagonal, we would never require more than 1520 entries in the array.
 */
#define VIEW_MAX		1536

/*
 * Maximum size of the "temp" array (see "cave.c")
 * Note that we must be as large as "VIEW_MAX" for proper functioning
 * of the "update_view()" function, and we must also be as large as the
 * largest illuminatable room, but no room is larger than 800 grids.  We
 * must also be large enough to allow "good enough" use as a circular queue,
 * to calculate monster flow, but note that the flow code is "paranoid".
 */
#define TEMP_MAX		1536

/*
 * OPTION: Maximum number of macros (see "util.c")
 * Default: assume at most 256 macros are used
 */
#define MACRO_MAX		256

/*
 * OPTION: Maximum number of "quarks" (see "util.c")
 * Default: assume at most 512 different inscriptions are used
 */
#define QUARK_MAX		512

/*
 * OPTION: Maximum number of messages to remember (see "util.c")
 * Default: assume maximal memorization of 2048 total messages
 */
#define MESSAGE_MAX		2048

/*
 * OPTION: Maximum space for the message text buffer (see "util.c")
 * Default: assume that each of the 2048 messages is repeated an
 * average of three times, and has an average length of 48
 */
#define MESSAGE_BUF		32768

/*
 * Maximum amount of Angband windows.
 */
#define ANGBAND_TERM_MAX 8

/*
 * Total number of stores (see "store.c", etc)
 */
#define MAX_STORES		10

/*
 * Store index definitions (see "store.c", etc)
 */
#define STORE_GENERAL	0
#define STORE_ARMOR		1
#define STORE_WEAPON	2
#define STORE_TEMPLE	3
#define STORE_ALCHEMY	4
#define STORE_MAGIC		5
#define STORE_B_MARKET	6
#define STORE_HOME		7
#define STORE_BOOK		8
#define STORE_GUILD		9

/*
 * Store constants
 */
#define STORE_INVEN_MAX	24		/* Max number of discrete objs in inven */
#define STORE_CHOICES	48		/* Number of items to choose stock from */
#define STORE_OBJ_LEVEL	5		/* Magic Level for normal stores */
#define STORE_TURNOVER	9		/* Normal shop turnover, per day */
#define STORE_MIN_KEEP	6		/* Min slots to "always" keep full */
#define STORE_MAX_KEEP	18		/* Max slots to "always" keep full */
#define STORE_SHUFFLE	25		/* 1/Chance (per day) of an owner changing */
#define STORE_TURNS		1000	/* Number of turns between turnovers */
#define GUILD_QUESTS	4		/* Number of quests offered at the guild at any given time */

/*
 * Misc constants
 */
#define TOWN_DAWN		10000	/* Number of turns from dawn to dawn XXX */
#define BREAK_GLYPH		550		/* Rune of protection resistance */
#define BTH_PLUS_ADJ	3		/* Adjust BTH per plus-to-hit */
#define MON_MULT_ADJ	8		/* High value slows multiplication */
#define MON_SUMMON_ADJ	2		/* Adjust level of summoned creatures */
#define USE_DEVICE      3		/* x> Harder devices x< Easier devices */
#define QUEST_TURNS		2500	/* Number of turns between quest failure checks */

/*
 * There is a 1/20 (5%) chance of inflating the requested object_level
 * during the creation of an object (see "get_obj_num()" in "object.c").
 * Lower values yield better objects more often.
 */
#define GREAT_OBJ	20

/*
 * There is a 1/20 (5%) chance that ego-items with an inflated base-level are
 * generated when an object is turned into an ego-item (see make_ego_item()
 * in object2.c). As above, lower values yield better ego-items more often.
 */
#define GREAT_EGO	20

/*
 * There is a 1/50 (2%) chance of inflating the requested monster_level
 * during the creation of a monsters (see "get_mon_num()" in "monster.c").
 * Lower values yield harder monsters more often.
 */
#define NASTY_MON	50		/* 1/chance of inflated monster level */

/*
 * Refueling constants
 */
#define FUEL_TORCH	5000	/* Maximum amount of fuel in a torch */
#define FUEL_LAMP	15000	/* Maximum amount of fuel in a lantern */

/*
 * More maximum values
 */
#define MAX_SIGHT	20	/* Maximum view distance */
#define MAX_RANGE	18	/* Maximum range (spells, etc) */

/*
 * There is a 1/160 chance per round of creating a new monster
 */
#define MAX_M_ALLOC_CHANCE	160

/*
 * Normal levels get at least 14 monsters
 */
#define MIN_M_ALLOC_LEVEL	14

/*
 * The town starts out with 4 residents during the day
 */
#define MIN_M_ALLOC_TD		4

/*
 * The town starts out with 8 residents during the night
 */
#define MIN_M_ALLOC_TN		8

/*
 * A monster can only "multiply" (reproduce) if there are fewer than 100
 * monsters on the level capable of such spontaneous reproduction.  This
 * is a hack which prevents the "m_list[]" array from exploding due to
 * reproducing monsters.  Messy, but necessary.
 */
#define MAX_REPRO	100

/*
 * Player constants
 */
#define PY_MAX_EXP	99999999L	/* Maximum exp */
#define PY_MAX_GOLD	999999999L	/* Maximum gold */
#define PY_MAX_LEVEL	50		/* Maximum level */

/*
 * Player "food" crucial values
 */
#define PY_FOOD_MAX		15000	/* Food value (Bloated) */
#define PY_FOOD_FULL	10000	/* Food value (Normal) */
#define PY_FOOD_ALERT	2000	/* Food value (Hungry) */
#define PY_FOOD_WEAK	1000	/* Food value (Weak) */
#define PY_FOOD_FAINT	500		/* Food value (Fainting) */
#define PY_FOOD_STARVE	100		/* Food value (Starving) */

/*
 * Player regeneration constants
 */
#define PY_REGEN_NORMAL		197		/* Regen factor*2^16 when full */
#define PY_REGEN_WEAK		98		/* Regen factor*2^16 when weak */
#define PY_REGEN_FAINT		33		/* Regen factor*2^16 when fainting */
#define PY_REGEN_HPBASE		1442	/* Min amount hp regen*2^16 */
#define PY_REGEN_MNBASE		524		/* Min amount mana regen*2^16 */


/*
 * Maximum number of "normal" pack slots, and the index of the "overflow"
 * slot, which can hold an item, but only temporarily, since it causes the
 * pack to "overflow", dropping the "last" item onto the ground.  Since this
 * value is used as an actual slot, it must be less than "INVEN_WIELD" (below).
 * Note that "INVEN_PACK" is probably hard-coded by its use in savefiles, and
 * by the fact that the screen can only show 23 items plus a one-line prompt.
 */
#define INVEN_PACK		23

/*
 * Indexes used for various "equipment" slots (hard-coded by savefiles, etc).
 */
#define INVEN_WIELD		24
#define INVEN_BOW		25
#define INVEN_LEFT		26
#define INVEN_RIGHT		27
#define INVEN_NECK		28
#define INVEN_LITE		29
#define INVEN_BODY		30
#define INVEN_OUTER		31
#define INVEN_ARM		32
#define INVEN_HEAD		33
#define INVEN_HANDS		34
#define INVEN_FEET		35
#define INVEN_MUSIC		36

/*
 * Total number of inventory slots (hard-coded).
 */
#define INVEN_MAX		37

/*
 * Actual number of inventory slots used 
 */
#define INVEN_TOTAL		((cp_ptr->flags & CF_MUSIC) ? INVEN_MAX : INVEN_MAX -1)

/*
 * A "stack" of items is limited to less than 100 items (hard-coded).
 */
#define MAX_STACK_SIZE		100

/*
 * Indexes of the various "stats" (hard-coded by savefiles, etc).
 */
#define A_STR	0
#define A_INT	1
#define A_WIS	2
#define A_DEX	3
#define A_CON	4
#define A_CHR	5

/*
 * Total number of stats.
 */
#define A_MAX	6

/* 
 * Indexes of the various "skills" (hard-coded by savefiles, etc)
 */
#define SK_DIS	0	/* Disarm */
#define SK_DEV	1	/* Magical device */
#define SK_SAV	2	/* Saving Throw */
#define SK_STL	3	/* Stealth */
#define SK_SRH	4	/* Search */
#define SK_FOS	5	/* Frequency of Searching */
#define SK_THN	6	/* To hit (melee) */
#define SK_THB	7	/* To hit (bow) */
#define SK_THT	8	/* To hit (throwing) */
#define SK_DIG	9	/* Digging */
#define SK_ALC	10	/* Alchemy */

/*
 * Total number of skills.
 */
#define SK_MAX	11

/*
 * Player sex constants (hard-coded by save-files, arrays, etc)
 */
#define SEX_FEMALE		0
#define SEX_MALE		1

/*
 * Special race constants, for use with special race abilities
 */
#define RACE_SPECIAL_NONE	0
#define RACE_SPECIAL_ANGEL	1
#define RACE_SPECIAL_DEMON	2

/*
 * How many different "levels" each race special goes through
 */

#define RACE_SPECIAL_LEVELS	11

/*
 * Maximum number of spells per spellbook
 */
#define MAX_BOOK_SPELLS	10

/*** Screen Locations ***/

/*
 * Some screen locations for various display routines
 * Currently, row 8 and 15 are the only "blank" rows.
 * That leaves a "border" around the "stat" values.
 */

#define ROW_RACE		1
#define COL_RACE		0	/* <race name> */

#define ROW_CLASS		2
#define COL_CLASS		0	/* <class name> */

#define ROW_TITLE		3
#define COL_TITLE		0	/* <title> or <mode> */

#define ROW_LEVEL		4
#define COL_LEVEL		0	/* "LEVEL xxxxxx" */

#define ROW_EXP			5
#define COL_EXP			0	/* "NEXT xxxxxxx" */

#define ROW_GOLD		6
#define COL_GOLD		0	/* "AU xxxxxxxxx" */

#define ROW_EQUIPPY		7
#define COL_EQUIPPY		0	/* equippy chars */

#define ROW_STAT		8
#define COL_STAT		0	/* "xxx   xxxxxx" */

#define ROW_AC			15
#define COL_AC			0	/* "Cur AC xxxxx" */

#define ROW_HP			16
#define COL_HP			0	 /* "HP xxx/xxx" */

#define ROW_SP			17
#define COL_SP			0	/* "SP xxx/xxx" */

#define ROW_INFO		18
#define COL_INFO		0	/* Monster Health bar */

#define ROW_DISEASED	20
#define COL_DISEASED	0	/* "diseased" */

#define ROW_CUT			21
#define COL_CUT			0	/* <cut> */

#define ROW_STUN		22
#define COL_STUN		0	/* <stun> */

#define ROW_HUNGRY		23
#define COL_HUNGRY		0	/* "Weak" / "Hungry" / "Full" / "Gorged" */

#define ROW_BLIND		23
#define COL_BLIND		7	/* "Blind" */

#define ROW_CONFUSED	23
#define COL_CONFUSED	13	/* "Confused" */

#define ROW_AFRAID		23
#define COL_AFRAID		22	/* "Afraid" */

#define ROW_POISONED	23
#define COL_POISONED	29	/* "Poisoned" */

#define ROW_STATE		23
#define COL_STATE		38	/* <state> */

#define ROW_SPEED		23
#define COL_SPEED		49	/* "Slow (-NN)" or "Fast (+NN)" */

#define ROW_STUDY		23
#define COL_STUDY		59	/* "Study (NN)" */

#define ROW_DEPTH		23
#define COL_DEPTH		70	/* "Lev NNN" / "NNNN ft" */

#define ROW_MAP			1
#define COL_MAP			13

/*** General index values ***/

/*
 * Quest types 
 */
#define QUEST_FIXED			1
#define QUEST_GUILD			2

/*
 * Quest reward types 
 */
#define REWARD_GOLD			1
#define REWARD_GOOD_ITEM	2
#define REWARD_GREAT_ITEM	3
 
/*
 * Legal restrictions for "summon_specific()"
 */
#define SUMMON_ANIMALS		11
#define SUMMON_SPIDER		12
#define SUMMON_HOUND		13
#define SUMMON_HYDRA		14
#define SUMMON_HORROR		15
#define SUMMON_DEMON		16
#define SUMMON_UNDEAD		17
#define SUMMON_DRAGON		18
/* xxx */
#define SUMMON_HI_DEMON		26
#define SUMMON_HI_UNDEAD	27
#define SUMMON_HI_DRAGON	28
/* xxx */
#define SUMMON_WRAITH		31
#define SUMMON_UNIQUE		32
#define SUMMON_KIN			33

/*
 * Spell types used by project(), and related functions.
 */
#define GF_ARROW			1
#define GF_MISSILE			2
#define GF_MANA				3
#define GF_HOLY_ORB			4
#define GF_LITE_WEAK		5
#define GF_DARK_WEAK		6
#define GF_WATER			7
#define GF_PLASMA			8
#define GF_METEOR			9
#define GF_ICE				10
#define GF_GRAVITY			11
#define GF_INERTIA			12
#define GF_FORCE			13
#define GF_TIME				14
#define GF_ACID				15
#define GF_ELEC				16
#define GF_FIRE				17
#define GF_COLD				18
#define GF_POIS				19
#define GF_DISEASE			20
#define GF_LITE				21
#define GF_DARK				22
#define GF_CONFUSION		24
#define GF_SOUND			25
#define GF_SHARD			26
#define GF_NEXUS			27
#define GF_NETHER			28
#define GF_CHAOS			29
#define GF_DISENCHANT		30
#define GF_KILL_WALL		31
#define GF_KILL_DOOR		32
#define GF_KILL_TRAP		33
#define GF_MAKE_WALL		34
#define GF_MAKE_DOOR		35
#define GF_MAKE_TRAP		36
#define GF_CALL_ALL			37
#define GF_AWAY_UNDEAD		38
#define GF_AWAY_EVIL		39
#define GF_AWAY_ALL			40
#define GF_TURN_UNDEAD		41
#define GF_TURN_EVIL		42
#define GF_TURN_ALL			43
#define GF_DISP_UNDEAD		44
#define GF_DISP_EVIL		45
#define GF_DISP_ALL			46
#define GF_DISP_NON_EVIL	47
#define GF_OLD_CLONE		48
#define GF_OLD_POLY			49
#define GF_OLD_HEAL			50
#define GF_OLD_SPEED		51
#define GF_OLD_SLOW			52
#define GF_OLD_CONF			53
#define GF_OLD_SLEEP		54
#define GF_OLD_DRAIN		55
#define GF_OLD_BLIND		56 /* Not really "old" but naming retained for conformity */
#define GF_OLD_CALM			57 /* Not really "old" but naming retained for conformity */
#define GF_CALM_ANIMALS		58
#define GF_CALM_NON_EVIL	59
#define GF_CALM_NON_CHAOS	60

/*
 * Some constants for the "learn" code
 *
 * Most of these come from the "SM_xxx" flags
 */
#define DRS_FREE		1
#define DRS_MANA		2
#define DRS_BRAVE		3
#define DRS_NO_BLIND	4
#define DRS_RES_ACID	5
#define DRS_RES_ELEC	6
#define DRS_RES_FIRE	7
#define DRS_RES_COLD	8
#define DRS_RES_POIS	9
#define DRS_RES_LITE	10
#define DRS_RES_DARK	11
#define DRS_RES_CONFU	12
#define DRS_RES_SOUND	13
#define DRS_RES_SHARD	14
#define DRS_RES_NEXUS	15
#define DRS_RES_NETHR	16
#define DRS_RES_CHAOS	17
#define DRS_RES_DISEN	18
#define DRS_RES_TIME	19
#define DRS_RES_DISEASE	20
#define DRS_RES_WATER	21
#define DRS_RES_MANA	22

/*
 * Number of keymap modes
 */
#define KEYMAP_MODES	2

/*
 * Mode for original keyset commands
 */
#define KEYMAP_MODE_ORIG	0

/*
 * Mode for roguelike keyset commands
 */
#define KEYMAP_MODE_ROGUE	1

/*** Feature Indexes (see "lib/edit/f_info.txt") ***/

/* Nothing */
#define FEAT_NONE		0x00

/* Various */
#define FEAT_FLOOR		0x01
#define FEAT_INVIS		0x02
#define FEAT_GLYPH		0x03
#define FEAT_OPEN		0x04
#define FEAT_BROKEN		0x05
#define FEAT_LESS		0x06
#define FEAT_MORE		0x07

/* Shops */
#define FEAT_SHOP_HEAD	0x10
#define FEAT_SHOP_TAIL	0x1F

/* Traps */
#define FEAT_TRAP_HEAD	0x20
#define FEAT_TRAP_TAIL	0x2F

/* Doors */
#define FEAT_DOOR_HEAD	0x30
#define FEAT_DOOR_TAIL	0x3F

/* Extra */
#define FEAT_SECRET		0x40
#define FEAT_RUBBLE		0x41

/* Seams */
#define FEAT_MAGMA		0x42
#define FEAT_QUARTZ		0x43
#define FEAT_MAGMA_H	0x44
#define FEAT_QUARTZ_H	0x45
#define FEAT_MAGMA_K	0x46
#define FEAT_QUARTZ_K	0x47

/* Walls */
#define FEAT_WALL_EXTRA	0x48
#define FEAT_WALL_INNER	0x49
#define FEAT_WALL_OUTER	0x4A
#define FEAT_WALL_SOLID	0x4B
#define FEAT_PERM_EXTRA	0x4C
#define FEAT_PERM_INNER	0x4D
#define FEAT_PERM_OUTER	0x4E
#define FEAT_PERM_SOLID	0x4F

/*** Artifact indexes (see "lib/edit/a_info.txt") ***/

/* "Special" Lites */
#define ART_GALADRIEL		1
#define ART_BEACON			2
#define ART_ELENDIL			3
#define ART_THRAIN			4
#define ART_WESTERNESSE		5

/* Lites */
#define ART_CHERADENINE		6
#define ART_TIME_REDUCTION	7

/* Amulets */
#define ART_CARLAMMAS		8
#define ART_INGWE			9
#define ART_DWARVES			10
#define ART_HEARTSTONE		11

/* Rings */
#define ART_BARAHIR			12
#define ART_TULKAS			13
#define ART_NARYA			14
#define ART_NENYA			15
#define ART_VILYA			16
#define ART_POWER			17
#define ART_CALFIN			18
#define ART_SATURN			19

/* Spell Books */
#define ART_CODEX           20
#define ART_NECRONOMICON	21

/* Dragon Scale */
#define ART_RAZORBACK		31
#define ART_BLADETURNER		32
#define ART_TORTURESKIN		33

/* Hard Armour */
#define ART_SOULKEEPER		34
#define ART_ISILDUR			35
#define ART_ROHIRRIM		36
#define ART_BELEGENNON		37
#define ART_CELEBORN		38
#define ART_ARVEDUI			39
#define ART_CASPANION		40
#define ART_WINTERWORN		41
#define ART_UNDERLIGHT		42

/* Soft Armour */
#define ART_HITHLOMIR		43
#define ART_THALKETTOTH		44
#define ART_MORDENKAINEN	45
#define ART_BRUTHA			46

/* Shields */
#define ART_THORIN			47
#define ART_CELEGORM		48
#define ART_ANARION			49
#define ART_STORMGUARD		50
#define ART_THIEVES			51
#define ART_ELDER_FOREST	52

/* Helms and Crowns */
#define ART_MORGOTH			53
#define ART_BERUTHIEL		54
#define ART_THRANDUIL		55
#define ART_THENGEL			56
#define ART_HAMMERHAND		57
#define ART_DOR				58
#define ART_HOLHENNETH		59
#define ART_GORLIM			60
#define ART_GONDOR			61
#define ART_ARCHMAGE		62
#define ART_FALLEN_STAR		63
#define ART_SHADOWS			64

/* Cloaks */
#define ART_COLLUIN			65
#define ART_HOLCOLLETH		66
#define ART_THINGOL			67
#define ART_THORONGIL		68
#define ART_COLANNON		69
#define ART_LUTHIEN			70
#define ART_TUOR			71
#define ART_SCARSHAWL		72
#define ART_MOONDANCER		73
#define ART_THOR			74
#define ART_ORODRETH		75

/* Gloves */
#define ART_CAMBELEG		76
#define ART_CAMMITHRIM		77
#define ART_PAURHACH		78
#define ART_PAURNIMMEN		79
#define ART_PAURAEGEN		80
#define ART_PAURNEN			81
#define ART_CAMLOST			82
#define ART_FINGOLFIN		83
#define ART_RAAL			84

/* Boots */
#define ART_FEANOR			85
#define ART_DAL				86
#define ART_THROR			87
#define ART_HERMES			88
#define ART_LONG_JOURNEY	89

/* Swords */
#define ART_NARSIL			90
#define ART_MAEDHROS		91
#define ART_ANGRIST			92
#define ART_NARTHANC		93
#define ART_NIMTHANC		94
#define ART_DETHANC			95
#define ART_RILIA			96
#define ART_BELANGIL		97
#define ART_CALRIS			98
#define ART_ARUNRUTH		99
#define ART_GLAMDRING		100
#define ART_AEGLIN			101
#define ART_ORCRIST			102
#define ART_GURTHANG		103
#define ART_ZARCUTHRA		104
#define ART_MORMEGIL		105
#define ART_GONDRICAM		106
#define ART_CRISDURIAN		107
#define ART_AGLARANG		108
#define ART_RINGIL			109
#define ART_ANDURIL			110
#define ART_ANGUIREL		111
#define ART_ELVAGIL			112
#define ART_FORASGIL		113
#define ART_CARETH			114
#define ART_STING			115
#define ART_HARADEKKET		116
#define ART_GILETTAR		117
#define ART_DOOMCALLER		118
#define ART_IDROST			119
#define ART_ADROST			120
#define ART_DIONURE			121
#define ART_TERRORBLADE		122
#define ART_GUARDIAN		123

/* Polearms */
#define ART_THEODEN			124
#define ART_PAIN			125
#define ART_OSONDIR			126
#define ART_TIL				127
#define ART_AEGLOS			128
#define ART_OROME			129
#define ART_NIMLOTH			130
#define ART_EORLINGAS		131
#define ART_DURIN			132
#define ART_EONWE			133
#define ART_BALLI			134
#define ART_LOTHARANG		135
#define ART_MUNDWINE		136
#define ART_BARUKKHELED		137
#define ART_WRATH			138
#define ART_ULMO			139
#define ART_POSEIDON		140
#define ART_AVAVIR			141
#define ART_REAPER			142
#define ART_LAWGIVER		143

/* Hafted */
#define ART_GROND			144
#define ART_TOTILA			145
#define ART_THUNDERFIST		146
#define ART_BLOODSPIKE		147
#define ART_FIRESTAR		148
#define ART_TARATOL			149
#define ART_AULE			150
#define ART_NAR				151
#define ART_ERIRIL			152
#define ART_OLORIN			153
#define ART_DEATHWREAKER	154
#define ART_TURMIL			155
#define ART_GRANT_WIZARDRY	156
#define ART_SKULLBASHER		157

/* Bows */
#define ART_BELTHRONDING	158
#define ART_BARD			159
#define ART_CUBRAGOL		160
#define ART_SUNSTRIKE		161
#define ART_HELLWIND		162

/* Digging Tools */
#define ART_NAIN			163
#define ART_GLOD			164

/*** Ego-Item indexes (see "lib/edit/e_info.txt") ***/

/* Body Armor */
#define EGO_RESIST_ACID		1
#define EGO_RESIST_ELEC		2
#define EGO_RESIST_FIRE		3
#define EGO_RESIST_COLD		4
#define EGO_RESISTANCE		5
#define EGO_RESIST_WATER	6
#define EGO_HEALTH			7
#define EGO_ELVENKIND		8
#define EGO_VULNERABILITY1	9
/* Robes */
#define EGO_PERMANENCE		10
#define EGO_MANA			11
/* Heavy Armor */
#define EGO_DWARVEN			12
#define EGO_BLACKROCK_STUD	13

/* Shields */
#define EGO_ENDURE_ACID		15
#define EGO_ENDURE_ELEC		16
#define EGO_ENDURE_FIRE		17
#define EGO_ENDURE_COLD		18
#define EGO_ENDURANCE		19
#define EGO_PRESERVATION	20
#define EGO_PERFECT_HEALTH	21
#define EGO_VULNERABILITY2	22
#define EGO_UMAGIC			23

/* Crowns and Helms */
#define EGO_INTELLIGENCE	24
#define EGO_WISDOM			25
#define EGO_BEAUTY			26
#define EGO_MAGI			27
#define EGO_MIGHT			28
#define EGO_LORDLINESS		29
#define EGO_SEEING			30
#define EGO_LITE			31
#define EGO_REGENERATION	32
#define EGO_TELEPATHY		33
#define EGO_SERENITY		34
#define EGO_NIGHT_AND_DAY	35
#define EGO_WIZARDRY		36
#define EGO_TELEPORTATION	37
#define EGO_DULLNESS		38
#define EGO_SICKLINESS		39

/* Cloaks */
#define EGO_PROTECTION		40
#define EGO_STEALTH			41
#define EGO_AMAN			42
#define EGO_INVISIBILITY	43
#define EGO_CLOAK_MAGI		44
#define EGO_KINGS			45
#define EGO_IRRITATION		46
#define EGO_ENVELOPING		47

/* Gloves */
#define EGO_FREE_ACTION		48
#define EGO_SLAYING			49
#define EGO_AGILITY			50
#define EGO_COMBAT			51
#define EGO_THIEVERY		52
#define EGO_SPELLCASTING	53
#define EGO_WEAKNESS		54
#define EGO_CLUMSINESS		55

/* Boots */
#define EGO_SLOW_DESCENT	56
#define EGO_QUIET			57
#define EGO_MOTION			58
#define EGO_SPEED			59
#define EGO_STABILITY		60
#define	EGO_BOOTS_ELVEN		61
#define EGO_SLOWNESS		62
#define EGO_NOISE			63

/* Weapons */
#define EGO_HA				64
#define EGO_DF				65
#define EGO_BLESS_BLADE		66
#define EGO_GONDOLIN		67
#define EGO_WEST			68
#define EGO_ATTACKS			69
#define EGO_FURY			70
#define EGO_TERROR			71
#define EGO_BRAND_ACID		72
#define EGO_BRAND_ELEC		73
#define EGO_BRAND_FIRE		74
#define EGO_BRAND_COLD		75
#define EGO_BRAND_VENOM		76
#define EGO_BRAND_LITE		77
#define EGO_BRAND_DARK		78
#define EGO_SLAY_PLANT		79
#define EGO_SLAY_ANIMAL		80
#define EGO_SLAY_EVIL		81
#define EGO_SLAY_CHAOS		82
#define EGO_SLAY_UNDEAD		83
#define EGO_SLAY_DEMON		84
#define EGO_SLAY_HUMANOID	85
#define EGO_SLAY_PERSON		86
#define EGO_SLAY_DRAGON		87
#define EGO_KILL_PLANT		88
#define EGO_KILL_ANIMAL		89
#define EGO_KILL_EVIL		90
#define EGO_KILL_CHAOS		91
#define EGO_KILL_UNDEAD		92
#define EGO_KILL_DEMON		93
#define EGO_KILL_HUMANOID	94
#define EGO_KILL_PERSON		95
#define EGO_KILL_DRAGON		96
#define EGO_SLAY_NATURE		97
#define EGO_CARNAGE			98
#define EGO_LAW				99
#define EGO_MORGUL			100
#define EGO_DIGGING			101
#define EGO_EARTHQUAKES		102
#define EGO_SHARPNESS		103

/* Bows */
#define EGO_ACCURACY		104
#define EGO_BOW_POWER		105
#define EGO_LOTHERIEN		106
#define EGO_HARADRIM		107
#define EGO_EXTRA_MIGHT		108
#define EGO_EXTRA_SHOTS		109
#define EGO_BUCKLAND		110
#define EGO_NAZGUL			111

/* Ammo */
#define EGO_HURT_PLANT		112
#define EGO_HURT_ANIMAL		113
#define EGO_HURT_EVIL		114
#define EGO_HURT_CHAOS		115
#define EGO_HURT_UNDEAD		116
#define EGO_HURT_DEMON		117
#define EGO_HURT_DRAGON		118
#define EGO_HURT_HUMANOID	119
#define EGO_HURT_PERSON		120
#define EGO_HURT_HOLY_MIGHT	121
/* xxx */
#define EGO_AMMO_ACID		122
#define EGO_AMMO_ELEC		123
#define EGO_FLAME			124
#define EGO_FROST			125
#define EGO_POISON			126
#define EGO_AMMO_LITE		127
#define EGO_AMMO_DARK		128
#define EGO_WOUNDING		129
#define EGO_BACKBITING		130

/* Special */
#define EGO_SHATTERED		131
#define EGO_BLASTED			132

/*** Object "tval" and "sval" codes ***/

/*
 * The values for the "tval" field of various objects.
 *
 * This value is the primary means by which items are sorted in the
 * player inventory, followed by "sval" and "cost".
 *
 * Note that a "BOW" with tval = 19 and sval S = 10*N+P takes a missile
 * weapon with tval = 16+N, and does (xP) damage when so combined.  This
 * fact is not actually used in the source, but it kind of interesting.
 *
 */

#define TV_SPIKE		5	/* Spikes ('~') */
#define TV_CHEST		7	/* Chests ('~') */
#define TV_SHOT			16	/* Ammo for slings */
#define TV_ARROW		17	/* Ammo for bows */
#define TV_BOLT			18	/* Ammo for x-bows */
#define TV_BOW			19	/* Slings/Bows/Xbows */
#define TV_DIGGING		20	/* Shovels/Picks */
#define TV_HAFTED		21	/* Priest Weapons */
#define TV_POLEARM		22	/* Axes and Pikes */
#define TV_SWORD		23	/* Edged Weapons */
#define TV_BOOTS		30	/* Boots */
#define TV_GLOVES		31	/* Gloves */
#define TV_HELM			32	/* Helms */
#define TV_CROWN		33	/* Crowns */
#define TV_SHIELD		34	/* Shields */
#define TV_CLOAK		35	/* Cloaks */
#define TV_SOFT_ARMOR	36	/* Soft Armor */
#define TV_HARD_ARMOR	37	/* Hard Armor */
#define TV_DRAG_ARMOR	38	/* Dragon Scale Mail */
#define TV_LITE			39	/* Refueling Lites */
#define TV_LITE_SPECIAL	40	/* Artifact lights */
#define TV_AMULET		41	/* Amulets (including Specials) */
#define TV_RING			45	/* Rings (including Specials) */
#define TV_MUSIC		50  /* Musical Instrument */
#define TV_STAFF		55
#define TV_WAND			65
#define TV_ROD			66
#define TV_SCROLL		70
#define TV_POTION		75
#define TV_POWDER		76
#define TV_FLASK		77
#define TV_FOOD			80
#define TV_MAGIC_BOOK	90
#define TV_GOLD			100	/* Gold can only be picked up by players */

/* The "sval" codes for TV_SHOT */
#define SV_SHOT_PEBBLE		0	/* pebbles */
#define SV_SHOT_NORMAL		1	/* shots */
#define SV_SHOT_BULLET		2	/* spiked bullets */

/* The "sval" codes for TV_ARROW */
#define SV_ARROW_NORMAL		1	/* arrows */
#define SV_ARROW_SEEKER		2	/* seeker arrows */
#define SV_ARROW_BITER		3	/* biter arrows */
#define SV_ARROW_TOUGH		4	/* tough arrows */

/* The "sval" codes for TV_BOLT */
#define SV_BOLT_NORMAL		1	/* bolts */
#define SV_BOLT_SEEKER		2	/* seeker bolts */
#define SV_BOLT_BITER		3	/* biter bolts */

/* The "sval" codes for TV_BOW (note information in "sval") */
#define SV_SLING			2	/* (x2) */
#define SV_SHORT_BOW		12	/* (x2) */
#define SV_LONG_BOW			13	/* (x3) */
#define SV_LIGHT_XBOW		23	/* (x3) */
#define SV_HEAVY_XBOW		24	/* (x4) */

/* The "sval" codes for TV_DIGGING */
#define SV_SHOVEL			1
#define SV_GNOMISH_SHOVEL	2
#define SV_DWARVEN_SHOVEL	3
#define SV_PICK				4
#define SV_ORCISH_PICK		5
#define SV_DWARVEN_PICK		6
#define SV_MATTOCK			7

/* The "sval" values for TV_HAFTED */
#define SV_WHIP					2	/* 1d6 */
#define SV_QUARTERSTAFF			3	/* 1d9 */
#define SV_WOODEN_CLUB			4	/* 1d7 */
#define SV_MACE					5	/* 2d4 */
#define SV_BALL_AND_CHAIN		6	/* 2d4 */
#define SV_WAR_HAMMER			8	/* 3d3 */
#define SV_LUCERN_HAMMER		10	/* 2d5 */
#define SV_MORNING_STAR			12	/* 2d6 */
#define SV_FLAIL				13	/* 2d6 */
#define SV_LEAD_FILLED_MACE		15	/* 3d4 */
#define SV_TWO_HANDED_FLAIL		18	/* 3d6 */
#define SV_MACE_OF_DISRUPTION	20	/* 5d8 */
#define SV_GROND				50	/* 3d4 */

/* The "sval" values for TV_POLEARM */
#define SV_SPEAR				2	/* 1d6 */
#define SV_AWL_PIKE				4	/* 1d8 */
#define SV_TRIDENT				5	/* 1d9 */
#define SV_PIKE					8	/* 2d5 */
#define SV_BEAKED_AXE			10	/* 2d6 */
#define SV_BROAD_AXE			11	/* 2d6 */
#define SV_GLAIVE				13	/* 2d6 */
#define SV_HALBERD				15	/* 3d4 */
#define SV_SCYTHE				17	/* 5d3 */
#define SV_LANCE				20	/* 2d8 */
#define SV_BATTLE_AXE			22	/* 2d8 */
#define SV_GREAT_AXE			25	/* 4d4 */
#define SV_LOCHABER_AXE			28	/* 3d8 */
#define SV_SCYTHE_OF_SLICING	30	/* 8d4 */
#define SV_BLACKROCK_SPEAR		31	/* 4d5 */

/* The "sval" codes for TV_SWORD */
#define SV_BROKEN_DAGGER		1	/* 1d1 */
#define SV_BROKEN_SWORD			2	/* 1d2 */
#define SV_DAGGER				4	/* 1d4 */
#define SV_MAIN_GAUCHE			5	/* 1d5 */
#define SV_RAPIER				7	/* 1d6 */
#define SV_SHORT_SWORD			10	/* 1d7 */
#define SV_SABRE				11	/* 1d7 */
#define SV_CUTLASS				12	/* 2d3 */
#define SV_TULWAR				15	/* 2d4 */
#define SV_BROAD_SWORD			16	/* 2d5 */
#define SV_LONG_SWORD			17	/* 2d6 */
#define SV_SCIMITAR				18	/* 2d5 */
#define SV_KATANA				20	/* 3d4 */
#define SV_BASTARD_SWORD		21	/* 3d4 */
#define SV_TWO_HANDED_SWORD		25	/* 3d6 */
#define SV_EXECUTIONERS_SWORD	28	/* 4d5 */
#define SV_BLADE_OF_STABILITY	29	/* 6d5 */
#define SV_BLADE_OF_CHAOS		30	/* 6d5 */
#define SV_BLACKROCK_SWORD		31	/* 4d6 */

/* The "sval" codes for TV_SHIELD */
#define SV_WOODEN_SHIELD			1
#define SV_SMALL_LEATHER_SHIELD		2
#define SV_SMALL_METAL_SHIELD		3
#define SV_LARGE_LEATHER_SHIELD		4
#define SV_LARGE_METAL_SHIELD		5
#define SV_KITE_SHIELD				7
#define SV_SHIELD_OF_DEFLECTION		10

/* The "sval" codes for TV_HELM */
#define SV_HARD_LEATHER_CAP		2
#define SV_METAL_CAP			3
#define SV_IRON_HELM			5
#define SV_STEEL_HELM			6
#define SV_KNIGHTS_HELM			8

/* The "sval" codes for TV_CROWN */
#define SV_IRON_CROWN			10
#define SV_GOLDEN_CROWN			11
#define SV_JEWELED_CROWN		12
#define SV_MORGOTH				50

/* The "sval" codes for TV_BOOTS */
#define SV_PAIR_OF_LEATHER_SANDALS		1
#define SV_PAIR_OF_SOFT_LEATHER_BOOTS	2
#define SV_PAIR_OF_HARD_LEATHER_BOOTS	3
#define SV_PAIR_OF_SPIKED_LEATHER_BOOTS	4
#define SV_PAIR_OF_METAL_SHOD_BOOTS		6

/* The "sval" codes for TV_CLOAK */
#define SV_CLOAK					1
#define SV_FUR_CLOAK				2
#define SV_ELVEN_CLOAK				4
#define SV_SHADOW_CLOAK				6

/* The "sval" codes for TV_GLOVES */
#define SV_SET_OF_SILK_GLOVES		0
#define SV_SET_OF_LEATHER_GLOVES	1
#define SV_SET_OF_GAUNTLETS			2
#define SV_SET_OF_CESTI				5

/* The "sval" codes for TV_SOFT_ARMOR */
#define SV_FILTHY_RAG				 1
#define SV_ROBE						 2
#define SV_WIZARD_ROBE				 3	/* 5 */
#define SV_SOFT_LEATHER_ARMOR		 4
#define SV_SOFT_STUDDED_LEATHER		 5
#define SV_HARD_LEATHER_ARMOR		 6
#define SV_HARD_STUDDED_LEATHER		 7
#define SV_LEATHER_SCALE_MAIL		11

/* The "sval" codes for TV_HARD_ARMOR */
#define SV_RUSTY_CHAIN_MAIL			 1	/* 14- */
#define SV_METAL_SCALE_MAIL			 3	/* 13 */
#define SV_CHAIN_MAIL				 4	/* 14 */
#define SV_AUGMENTED_CHAIN_MAIL		 6	/* 16 */
#define SV_DOUBLE_CHAIN_MAIL		 7	/* 16 */
#define SV_BAR_CHAIN_MAIL			 8	/* 18 */
#define SV_METAL_BRIGANDINE_ARMOUR	 9	/* 19 */
#define SV_PARTIAL_PLATE_ARMOUR		12	/* 22 */
#define SV_METAL_LAMELLAR_ARMOUR	13	/* 23 */
#define SV_FULL_PLATE_ARMOUR		15	/* 25 */
#define SV_RIBBED_PLATE_ARMOUR		18	/* 28 */
#define SV_MITHRIL_CHAIN_MAIL		20	/* 28+ */
#define SV_MITHRIL_PLATE_MAIL		25	/* 35+ */
#define SV_ADAMANTITE_PLATE_MAIL	30	/* 40+ */

/* The "sval" codes for TV_DRAG_ARMOR */
#define SV_DRAGON_BLACK			 1
#define SV_DRAGON_BLUE			 2
#define SV_DRAGON_WHITE			 3
#define SV_DRAGON_RED			 4
#define SV_DRAGON_GREEN			 5
#define SV_DRAGON_MULTIHUED		 6
#define SV_DRAGON_SHINING		10
#define SV_DRAGON_LAW			12
#define SV_DRAGON_BRONZE		14
#define SV_DRAGON_GOLD			16
#define SV_DRAGON_CHAOS			18
#define SV_DRAGON_BALANCE		20
#define SV_DRAGON_ETHEREAL		25
#define SV_DRAGON_POWER			30

/* The sval codes for TV_FLASK */
#define SV_FLASK_LANTERN	0
#define SV_FLASK_BURNING	1

/* The sval codes for TV_LITE */
#define SV_TORCH				0
#define SV_LANTERN				1
#define SV_LANTERN_SIGHT		2
#define SV_LANTERN_FEARLESS		3
#define SV_LANTERN_INT			4
#define SV_LANTERN_WIS			5
#define SV_LANTERN_BRIGHTNESS	6
/* Artifact Lanterns */
#define SV_LANTERN_CHERADENINE	7
#define SV_LANTERN_ETERNITY		8

/* The sval codes for TV_LITE_SPECIAL */
#define SV_LITE_GALADRIEL	1
#define SV_LITE_BEACON		2
#define SV_LITE_ELENDIL		3
#define SV_LITE_THRAIN		4
#define SV_LITE_PALANTIR	5

/* The sval codes for TV_RING */
#define SV_RING_WOE					 0
#define SV_RING_AGGRAVATION			 1
#define SV_RING_WEAKNESS			 2
#define SV_RING_STUPIDITY			 3
#define SV_RING_TELEPORTATION		 4
#define SV_RING_SLOWNESS			 5
#define SV_RING_DRAIN_LIFE			 6
#define SV_RING_FEATHER_FALL		 7
#define SV_RING_SUSTAIN_STR_CHR		 8
#define SV_RING_SUSTAIN_CON_DEX		 9
#define SV_RING_SUSTAIN_INT_WIS		10
#define SV_RING_SUSTAIN_ALL			11
#define SV_RING_RESIST_FIRE_COLD	12
#define SV_RING_RESIST_ACID_ELEC	13
#define SV_RING_FREE_ACTION			14
#define SV_RING_BRAVERY				15
#define SV_RING_RESIST_CONFU		16
#define SV_RING_RESIST_POIS			17
#define SV_RING_RESIST_DISEASE		18
#define SV_RING_RESIST_DISEN		19
#define SV_RING_PROTECTION			20
#define SV_RING_LIGHTNING			21
#define SV_RING_ACID				22
#define SV_RING_FLAMES				23
#define SV_RING_ICE					24
#define SV_RING_SEE_INVIS			25
#define SV_RING_SEARCHING			26
#define SV_RING_STR					27
#define SV_RING_DEX					28
#define SV_RING_CON					29
#define SV_RING_GREATNESS			30
#define SV_RING_ACCURACY			31
#define SV_RING_DAMAGE				32
#define SV_RING_SLAYING				33
#define SV_RING_SPEED				34
#define SV_RING_MANA				35
#define SV_RING_HEALTH				36
/* Artifact rings */
#define SV_RING_BARAHIR				37
#define SV_RING_TULKAS				38
#define SV_RING_NARYA				39
#define SV_RING_NENYA				40
#define SV_RING_VILYA				41
#define SV_RING_POWER				42
#define SV_RING_CALFIN				43
#define SV_RING_SATURN				44

/* The "sval" codes for TV_AMULET */
#define SV_AMULET_DOOM			 0
#define SV_AMULET_TELEPORT		 1
#define SV_AMULET_UNMAGIC		 2
#define SV_AMULET_ADORNMENT		 3
#define SV_AMULET_SLOW_DIGEST	 4
#define SV_AMULET_HOLD_LIFE		 5
#define SV_AMULET_RESIST_ACID	 6
#define SV_AMULET_RESIST_TIME	 7
#define SV_AMULET_SEARCHING		 8
#define SV_AMULET_WISDOM		 9
#define SV_AMULET_INTELLIGENCE	10
#define SV_AMULET_CHARISMA		11
#define SV_AMULET_THE_MAGI		12
#define SV_AMULET_INVISIBILITY	13
#define SV_AMULET_POWER			14
#define SV_AMULET_BRIGHTNESS	19
/* Artifact amulets */
#define SV_AMULET_CARLAMMAS		15
#define SV_AMULET_INGWE			16
#define SV_AMULET_DWARVES		17
#define SV_AMULET_HEARTSTONE	18

/* The "sval" codes for TV_STAFF */
#define SV_STAFF_DARKNESS		 0
#define SV_STAFF_SLOWNESS		 1
#define SV_STAFF_HASTE_MONSTERS	 2
#define SV_STAFF_SUMMONING		 3
#define SV_STAFF_TELEPORTATION	 4
#define SV_STAFF_IDENTIFY		 5
#define SV_STAFF_REMOVE_CURSE	 6
#define SV_STAFF_STARLITE		 7
#define SV_STAFF_LITE			 8
#define SV_STAFF_MAPPING		 9
#define SV_STAFF_DETECT_GOLD	10
#define SV_STAFF_DETECT_ITEM	11
#define SV_STAFF_DETECT_TRAP	12
#define SV_STAFF_DETECT_DOOR	13
#define SV_STAFF_DETECT_INVIS	14
#define SV_STAFF_DETECT_EVIL	15
#define SV_STAFF_CURE_LIGHT		16
#define SV_STAFF_CURING			17
#define SV_STAFF_HEALING		18
#define SV_STAFF_THE_MAGI		19
#define SV_STAFF_SLEEP_MONSTERS	20
#define SV_STAFF_SLOW_MONSTERS	21
#define SV_STAFF_SPEED			22
#define SV_STAFF_PROBING		23
#define SV_STAFF_DISPEL_EVIL	24
#define SV_STAFF_POWER			25
#define SV_STAFF_HOLINESS		26
#define SV_STAFF_GENOCIDE		27
#define SV_STAFF_EARTHQUAKES	28
#define SV_STAFF_DESTRUCTION	29

/* The "sval" codes for TV_WAND */
#define SV_WAND_HEAL_MONSTER	 0
#define SV_WAND_HASTE_MONSTER	 1
#define SV_WAND_CLONE_MONSTER	 2
#define SV_WAND_TELEPORT_AWAY	 3
#define SV_WAND_DISARMING		 4
#define SV_WAND_TRAP_DOOR_DEST	 5
#define SV_WAND_STONE_TO_MUD	 6
#define SV_WAND_LITE			 7
#define SV_WAND_SLEEP_MONSTER	 8
#define SV_WAND_SLOW_MONSTER	 9
#define SV_WAND_CONFUSE_MONSTER	10
#define SV_WAND_FEAR_MONSTER	11
#define SV_WAND_CALL_MONSTER	12
#define SV_WAND_CALM_MONSTER	13
#define SV_WAND_BLIND_MONSTER	14
#define SV_WAND_DRAIN_LIFE		15
#define SV_WAND_POLYMORPH		16
#define SV_WAND_STINKING_CLOUD	17
#define SV_WAND_MAGIC_MISSILE	18
#define SV_WAND_ACID_BOLT		19
#define SV_WAND_ELEC_BOLT		20
#define SV_WAND_FIRE_BOLT		21
#define SV_WAND_COLD_BOLT		22
#define SV_WAND_ACID_BALL		23
#define SV_WAND_ELEC_BALL		24
#define SV_WAND_FIRE_BALL		25
#define SV_WAND_COLD_BALL		26
#define SV_WAND_WONDER			27
#define SV_WAND_ANNIHILATION	28
#define SV_WAND_DRAGON_FIRE		29
#define SV_WAND_DRAGON_COLD		30
#define SV_WAND_DRAGON_BREATH	31

/* The "sval" codes for TV_ROD */
#define SV_ROD_DETECT_TRAP		 0
#define SV_ROD_DETECT_DOOR		 1
#define SV_ROD_IDENTIFY			 2
#define SV_ROD_RECALL			 3
#define SV_ROD_ILLUMINATION		 4
#define SV_ROD_MAPPING			 5
#define SV_ROD_DETECTION		 6
#define SV_ROD_PROBING			 7
#define SV_ROD_CURING			 8
#define SV_ROD_HEALING			 9
#define SV_ROD_RESTORATION		10
#define SV_ROD_SPEED			11
/* xxx (aimed) */
#define SV_ROD_TELEPORT_AWAY	13
#define SV_ROD_DISARMING		14
#define SV_ROD_LITE				15
#define SV_ROD_SLEEP_MONSTER	16
#define SV_ROD_SLOW_MONSTER		17
#define SV_ROD_DRAIN_LIFE		18
#define SV_ROD_POLYMORPH		19
#define SV_ROD_ACID_BOLT		20
#define SV_ROD_ELEC_BOLT		21
#define SV_ROD_FIRE_BOLT		22
#define SV_ROD_COLD_BOLT		23
#define SV_ROD_ACID_BALL		24
#define SV_ROD_ELEC_BALL		25
#define SV_ROD_FIRE_BALL		26
#define SV_ROD_COLD_BALL		27

/* The "sval" codes for TV_MUSIC */
#define SV_MUSIC_LYRE			0
#define SV_MUSIC_HORN			1
#define SV_MUSIC_FLUTE			2
#define SV_MUSIC_LUTE			3
#define SV_MUSIC_DRUM			4
#define SV_MUSIC_HARP			5

/* The "sval" codes for TV_MAGIC_BOOK */
#define SV_BOOK_MAGE1			 0
#define SV_BOOK_MAGE2			 1
#define SV_BOOK_MAGE3			 2
#define SV_BOOK_MAGE4			 3
#define SV_BOOK_MAGE5			 4
#define SV_BOOK_MAGE6			 5
#define SV_BOOK_MAGE7			 6
#define SV_BOOK_MAGE8			 7
#define SV_BOOK_MAGE9			 8
#define SV_BOOK_RANGER			 9
#define SV_BOOK_PRIEST1			10
#define SV_BOOK_PRIEST2			11
#define SV_BOOK_PRIEST3			12
#define SV_BOOK_PRIEST4			13
#define SV_BOOK_PRIEST5			14
#define SV_BOOK_PRIEST6			15
#define SV_BOOK_PRIEST7			16
#define SV_BOOK_PRIEST8			17
#define SV_BOOK_PRIEST9			18
/* xxx */
#define SV_BOOK_MYSTIC1			20
#define SV_BOOK_MYSTIC2			21
#define SV_BOOK_CODEX			22
#define SV_BOOK_NECRONOMICON	23

/* The "sval" codes for TV_SCROLL */
#define SV_SCROLL_DARKNESS				 0
#define SV_SCROLL_AGGRAVATE_MONSTER		 1
#define SV_SCROLL_CURSE_ARMOR			 2
#define SV_SCROLL_CURSE_WEAPON			 3
#define SV_SCROLL_SUMMON_MONSTER		 4
#define SV_SCROLL_SUMMON_UNDEAD			 5
#define SV_SCROLL_SUMMON_DRAGON			 6
#define SV_SCROLL_TRAP_CREATION			 7
#define SV_SCROLL_PHASE_DOOR			 8
#define SV_SCROLL_TELEPORT				 9
#define SV_SCROLL_TELEPORT_LEVEL		10
#define SV_SCROLL_WORD_OF_RECALL		11
#define SV_SCROLL_ALTER_REALITY			12
#define SV_SCROLL_IDENTIFY				13
#define SV_SCROLL_STAR_IDENTIFY			14
#define SV_SCROLL_REMOVE_CURSE			15
#define SV_SCROLL_STAR_REMOVE_CURSE		16
#define SV_SCROLL_ENCHANT_ARMOR			17
#define SV_SCROLL_ENCHANT_WEAPON_TO_HIT	18
#define SV_SCROLL_ENCHANT_WEAPON_TO_DAM	19
#define SV_SCROLL_STAR_ENCHANT_ARMOR	20
#define SV_SCROLL_STAR_ENCHANT_WEAPON	21
#define SV_SCROLL_RECHARGING			22
#define SV_SCROLL_ELEMENTAL_BRAND		23
#define SV_SCROLL_LIGHT					24
#define SV_SCROLL_MAPPING				25
#define SV_SCROLL_DETECT_GOLD			26
#define SV_SCROLL_DETECT_ITEM			27
#define SV_SCROLL_DETECT_TRAP			28
#define SV_SCROLL_DETECT_DOOR			29
#define SV_SCROLL_DETECT_INVIS			30
/* xxx (detect evil?) */
#define SV_SCROLL_ABSORB_HIT			32
#define SV_SCROLL_BLESSING				33
#define SV_SCROLL_HOLY_CHANT			34
#define SV_SCROLL_HOLY_PRAYER			35
#define SV_SCROLL_MONSTER_CONFUSION		36
#define SV_SCROLL_PROTECTION_FROM_EVIL	37
#define SV_SCROLL_RUNE_OF_PROTECTION	38
#define SV_SCROLL_TRAP_DOOR_DESTRUCTION	39
/* xxx */
#define SV_SCROLL_STAR_DESTRUCTION		41
#define SV_SCROLL_DISPEL_UNDEAD			42
/* xxx */
#define SV_SCROLL_GENOCIDE				44
#define SV_SCROLL_MASS_GENOCIDE			45
#define SV_SCROLL_ACQUIREMENT			46
#define SV_SCROLL_STAR_ACQUIREMENT		47

/* The "sval" codes for TV_POTION */
#define SV_POTION_WATER					 0
#define SV_POTION_APPLE_JUICE			 1
#define SV_POTION_SLIME_MOLD			 2
/* xxx (fixed color) */	
#define SV_POTION_SLOWNESS				 4
#define SV_POTION_SALT_WATER			 5
#define SV_POTION_POISON				 6
#define SV_POTION_BLINDNESS				 7
#define SV_POTION_DISEASE				 8
#define SV_POTION_CONFUSION				 9
#define SV_POTION_SLEEP					10
#define SV_POTION_LOSE_MEMORIES			11
#define SV_POTION_DEFORM				12
#define SV_POTION_RUINATION				13
#define SV_POTION_DEC_STR				14
#define SV_POTION_DEC_INT				15
#define SV_POTION_DEC_WIS				16
#define SV_POTION_DEC_DEX				17
#define SV_POTION_DEC_CON				18
#define SV_POTION_DEC_CHR				19
#define SV_POTION_DETONATIONS			20
#define SV_POTION_DEATH					21
#define SV_POTION_RISK					22
/* xxx */	
#define SV_POTION_INFRAVISION			24
#define SV_POTION_DETECT_INVIS			25
#define SV_POTION_SPEED					26
#define SV_POTION_SATISFY_HUNGER		27
#define SV_POTION_BOLDNESS				28
#define SV_POTION_HEROISM				29
#define SV_POTION_BESERK_STRENGTH		30
#define SV_POTION_CURE_LIGHT			31
#define SV_POTION_CURE_SERIOUS			32
#define SV_POTION_CURE_CRITICAL			33
#define SV_POTION_HEALING				34
#define SV_POTION_STAR_HEALING			35
#define SV_POTION_LIFE					36
#define SV_POTION_SLOW_POISON			37
#define SV_POTION_CURE_POISON			38
#define SV_POTION_CURE_DISEASE			39
#define SV_POTION_RESTORE_MANA			40
#define SV_POTION_RESTORE_EXP			41
#define SV_POTION_RES_STR				42
#define SV_POTION_RES_INT				43
#define SV_POTION_RES_WIS				44
#define SV_POTION_RES_DEX				45
#define SV_POTION_RES_CON				46
#define SV_POTION_RES_CHR				47
#define SV_POTION_INC_STR				48
#define SV_POTION_INC_INT				49
#define SV_POTION_INC_WIS				50
#define SV_POTION_INC_DEX				51
#define SV_POTION_INC_CON				52
#define SV_POTION_INC_CHR				53
#define SV_POTION_AUGMENTATION			54
#define SV_POTION_ENLIGHTENMENT			55
#define SV_POTION_STAR_ENLIGHTENMENT	56
#define SV_POTION_SELF_KNOWLEDGE		57
#define SV_POTION_EXPERIENCE			58
#define SV_POTION_RESIST_HEAT			59
#define SV_POTION_RESIST_COLD			60
#define SV_POTION_RESISTANCE			61
#define SV_POTION_STAR_RESISTANCE		62
#define SV_POTION_INVISIBILITY			63

/* The "sval" codes for TV_POWDER */
#define SV_POWDER_HASTE			 0
#define SV_POWDER_HEAL			 1
#define SV_POWDER_CONFUSE		 2
#define SV_POWDER_STARTLE		 3
#define SV_POWDER_SLEEP			 4
#define SV_POWDER_SLOW			 5
#define SV_POWDER_CALM			 6
#define SV_POWDER_FLASH			 7
#define SV_POWDER_DARKNESS		 8
#define SV_POWDER_POISON		 9
#define SV_POWDER_FIRE1			10
#define SV_POWDER_COLD1			11
#define SV_POWDER_FIRE2			12
#define SV_POWDER_COLD2			13
#define SV_POWDER_ENERGY		14

/* The "sval" codes for TV_FOOD */
#define SV_FOOD_POISON			 0
#define SV_FOOD_BLINDNESS		 1
#define SV_FOOD_PARANOIA		 2
#define SV_FOOD_CONFUSION		 3
#define SV_FOOD_HALLUCINATION	 4
#define SV_FOOD_PARALYSIS		 5
#define SV_FOOD_WEAKNESS		 6
#define SV_FOOD_SICKNESS		 7
#define SV_FOOD_STUPIDITY		 8
#define SV_FOOD_NAIVETY			 9
#define SV_FOOD_UNHEALTH		10
#define SV_FOOD_DISEASE			11
#define SV_FOOD_CURE_POISON		12
#define SV_FOOD_CURE_DISEASE	13
#define SV_FOOD_CURE_BLINDNESS	14
#define SV_FOOD_CURE_PARANOIA	15
#define SV_FOOD_CURE_CONFUSION	16
#define SV_FOOD_CURE_SERIOUS	17
#define SV_FOOD_RESTORE_STR		18
#define SV_FOOD_RESTORE_CON		19
#define SV_FOOD_RESTORE_DEX		20
#define SV_FOOD_RESTORING		21
/* eight missing mushrooms */
#define SV_FOOD_JERKY			30
#define SV_FOOD_RATION			31
#define SV_FOOD_SLIME_MOLD		32
#define SV_FOOD_WAYBREAD		33
#define SV_FOOD_PINT_OF_NECTAR	34

/*
 * Special "sval" limits -- first "normal" food, number of mushrooms
 */
#define SV_FOOD_MIN_FOOD	30
#define SV_MAX_SHROOMS		22

/*
 * Special "sval" limit -- first "aimed" rod
 */
#define SV_ROD_MIN_DIRECTION	12

/*
 * Special "sval" limit -- first "large" chest
 */
#define SV_CHEST_MIN_LARGE	4

/*
 * Special "sval" limit - maximum amount of spellbooks
 */
#define SV_MAX_BOOKS		24

/* 
 * Special "sval" limit - maximum amount of musical instruments
 */
#define SV_MAX_MUSIC		6

/*
 * Special "sval" limit -- maximum amount of potions
 */
#define SV_MAX_POTIONS		64

/*
 * Special "sval" limit -- maximum amount of potions
 */
#define SV_MAX_SCROLLS		48

/*
 * Special "sval" limit -- maximum amount of powders
 */
#define SV_MAX_POWDERS		15

/* 
 * Special "sval" limit -- maximum amount of rechargable lights 
 */
#define SV_MAX_LITES		10

/* 
 * Special "sval" limit -- maximum amount of rings
 */
#define SV_MAX_RINGS		45

/* 
 * Special "sval" limit -- maximum amount of rings
 */
#define SV_MAX_AMULETS		20

/* 
 * Special "k_info" hard coded values - 
 */
#define OBJ_GOLD_LIST	550	/* First "gold" entry */
#define MAX_GOLD		18	/* Number of "gold" entries */

/*** Monster blow constants ***/

/*
 * New monster blow methods
 */
#define RBM_HIT		1
#define RBM_TOUCH	2
#define RBM_PUNCH	3
#define RBM_KICK	4
#define RBM_CLAW	5
#define RBM_BITE	6
#define RBM_STING	7
#define RBM_KISS	8
#define RBM_BUTT	9
#define RBM_CRUSH	10
#define RBM_ENGULF	11
#define RBM_CRAWL	12
#define RBM_DROOL	13
#define RBM_SPIT	14
#define RBM_GAZE	15
#define RBM_WAIL	16
#define RBM_SPORE	17
#define RBM_BEG		18
#define RBM_INSULT	19
#define RBM_MOAN	20

/*
 * Monster blow effects
 */
#define RBE_HURT		 1
#define RBE_POISON		 2
#define RBE_UN_BONUS	 3
#define RBE_UN_POWER	 4
#define RBE_EAT_GOLD	 5
#define RBE_EAT_ITEM	 6
#define RBE_EAT_FOOD	 7
#define RBE_EAT_LITE	 8
#define RBE_ACID		 9
#define RBE_ELEC		10
#define RBE_FIRE		11
#define RBE_COLD		12
#define RBE_BLIND		13
#define RBE_CONFUSE		14
#define RBE_TERRIFY		15
#define RBE_PARALYZE	16
#define RBE_LOSE_STR	17
#define RBE_LOSE_INT	18
#define RBE_LOSE_WIS	19
#define RBE_LOSE_DEX	20
#define RBE_LOSE_CON	21
#define RBE_LOSE_CHR	22
#define RBE_LOSE_ALL	23
#define RBE_SHATTER		24
#define RBE_EXP_1		25
#define RBE_EXP_2		26
#define RBE_EXP_3		27
#define RBE_EXP_4		28
#define RBE_DISEASE		29

/*** Function flags ***/

/*
 * Bit flags for the "project()" function
 *
 *   JUMP: Jump directly to the target location (this is a hack)
 *   BEAM: Work as a beam weapon (affect every grid passed through)
 *   THRU: Continue "through" the target (used for "bolts"/"beams")
 *   STOP: Stop as soon as we hit a monster (used for "bolts")
 *   GRID: Affect each grid in the "blast area" in some way
 *   ITEM: Affect each object in the "blast area" in some way
 *   KILL: Affect each monster in the "blast area" in some way
 *   HIDE: Hack -- disable "visual" feedback from projection
 */
#define PROJECT_JUMP	0x01
#define PROJECT_BEAM	0x02
#define PROJECT_THRU	0x04
#define PROJECT_STOP	0x08
#define PROJECT_GRID	0x10
#define PROJECT_ITEM	0x20
#define PROJECT_KILL	0x40
#define PROJECT_HIDE	0x80

/*
 * Bit flags for spellbooks
 */
#define SBF_MYSTIC		0x01
#define SBF_MAGIC		0x02
#define SBF_PRAYER		0x04
#define SBF_CODEX		0x08
#define SBF_NECRONOM	0x10
#define SBF_GOOD		0x20
#define SBF_ARTIFACT	0x40

#define SBF_TYPE_MASK (SBF_MYSTIC | SBF_MAGIC | SBF_PRAYER | SBF_CODEX | SBF_NECRONOM)

/*
 * Bit flags for the "enchant()" function
 */
#define ENCH_TOHIT	0x01
#define ENCH_TODAM	0x02
#define ENCH_TOAC	0x04

/*
 * Bit flags for the "target_set" function
 *
 *	KILL: Target monsters
 *	LOOK: Describe grid fully
 *	XTRA: Currently unused flag
 *	GRID: Select from all grids
 */
#define TARGET_KILL		0x01
#define TARGET_LOOK		0x02
#define TARGET_XTRA		0x04
#define TARGET_GRID		0x08

/*
 * Bit flags for the "monster_desc" function
 */
#define MDESC_OBJE		0x01	/* Objective (or Reflexive) */
#define MDESC_POSS		0x02	/* Possessive (or Reflexive) */
#define MDESC_IND1		0x04	/* Indefinites for hidden monsters */
#define MDESC_IND2		0x08	/* Indefinites for visible monsters */
#define MDESC_PRO1		0x10	/* Pronominalize hidden monsters */
#define MDESC_PRO2		0x20	/* Pronominalize visible monsters */
#define MDESC_HIDE		0x40	/* Assume the monster is hidden */
#define MDESC_SHOW		0x80	/* Assume the monster is visible */

/*
 * Bit flags for the "get_item" function
 */
#define USE_EQUIP		0x01	/* Allow equip items */
#define USE_INVEN		0x02	/* Allow inven items */
#define USE_FLOOR		0x04	/* Allow floor items */

/*** Player flags ***/

/*
 * Bit flags for the "p_ptr->notice" variable
 */
#define PN_COMBINE		0x00000001L	/* Combine the pack */
#define PN_REORDER		0x00000002L	/* Reorder the pack */
/* xxx (many) */

/*
 * Bit flags for the "p_ptr->update" variable
 */
#define PU_BONUS		0x00000001L	/* Calculate bonuses */
#define PU_TORCH		0x00000002L	/* Calculate torch radius */
/* xxx (many) */
#define PU_HP			0x00000010L	/* Calculate chp and mhp */
#define PU_MANA			0x00000020L	/* Calculate csp and msp */
#define PU_SPELLS		0x00000040L	/* Calculate spells */
/* xxx (many) */
#define PU_FORGET_VIEW	0x00010000L	/* Forget field of view */
#define PU_UPDATE_VIEW	0x00020000L	/* Update field of view */
/* xxx (many) */
#define PU_FORGET_FLOW	0x00100000L	/* Forget flow data */
#define PU_UPDATE_FLOW	0x00200000L	/* Update flow data */
/* xxx (many) */
#define PU_MONSTERS		0x10000000L	/* Update monsters */
#define PU_DISTANCE		0x20000000L	/* Update distances */
/* xxx */
#define PU_PANEL		0x80000000L	/* Update panel */

/*
 * Bit flags for the "p_ptr->redraw" variable
 */
#define PR_MISC			0x00000001L	/* Display Race/Class */
#define PR_TITLE		0x00000002L	/* Display Title */
#define PR_LEV			0x00000004L	/* Display Level */
#define PR_EXP			0x00000008L	/* Display Experience */
#define PR_STATS		0x00000010L	/* Display Stats */
#define PR_ARMOR		0x00000020L	/* Display Armor */
#define PR_HP			0x00000040L	/* Display Hitpoints */
#define PR_MANA			0x00000080L	/* Display Mana */
#define PR_GOLD			0x00000100L	/* Display Gold */
#define PR_DEPTH		0x00000200L	/* Display Depth */
#define PR_EQUIPPY		0x00000400L	/* Display equippy chars */
#define PR_HEALTH		0x00000800L	/* Display Health Bar */
#define PR_CUT			0x00001000L	/* Display Extra (Cut) */
#define PR_STUN			0x00002000L	/* Display Extra (Stun) */
#define PR_HUNGER		0x00004000L	/* Display Extra (Hunger) */
#define PR_DISEASED		0x00008000L	/* Display Extra (Disease) */
#define PR_BLIND		0x00010000L	/* Display Extra (Blind) */
#define PR_CONFUSED		0x00020000L	/* Display Extra (Confused) */
#define PR_AFRAID		0x00040000L	/* Display Extra (Afraid) */
#define PR_POISONED		0x00080000L	/* Display Extra (Poisoned) */
#define PR_STATE		0x00100000L	/* Display Extra (State) */
#define PR_SPEED		0x00200000L	/* Display Extra (Speed) */
#define PR_STUDY		0x00400000L	/* Display Extra (Study) */
/* xxx */
#define PR_EXTRA		0x01000000L	/* Display Extra Info */
#define PR_BASIC		0x02000000L	/* Display Basic Info */
/* xxx */
#define PR_MAP			0x08000000L	/* Display Map */

/*
 * Bit flags for the "p_ptr->window" variable (etc)
 */
#define PW_INVEN		0x00000001L	/* Display inven/equip */
#define PW_EQUIP		0x00000002L	/* Display equip/inven */
#define PW_PLAYER_0		0x00000004L	/* Display player (basic) */
#define PW_PLAYER_1		0x00000008L	/* Display player (extra) */
#define PW_M_LIST		0x00000010L	/* Show monster list */
/* xxx */
#define PW_MESSAGE		0x00000040L	/* Display messages */
#define PW_OVERHEAD		0x00000080L	/* Display overhead view */
#define PW_MONSTER		0x00000100L	/* Display monster recall */
#define PW_OBJECT		0x00000200L	/* Display object recall */
/* xxx */
#define PW_SNAPSHOT		0x00000800L	/* Display snap-shot */
/* xxx */
/* xxx */
#define PW_BORG_1		0x00004000L	/* Display borg messages */
#define PW_BORG_2		0x00008000L	/* Display borg status */

/*** Cave flags ***/

/*
 * Special cave grid flags
 */
#define CAVE_MARK		0x01	/* memorized feature */
#define CAVE_GLOW		0x02	/* self-illuminating */
#define CAVE_ICKY		0x04	/* part of a vault */
#define CAVE_ROOM		0x08	/* part of a room */
#define CAVE_SEEN		0x10	/* seen flag */
#define CAVE_VIEW		0x20	/* view flag */
#define CAVE_TEMP		0x40	/* temp flag */
#define CAVE_WALL		0x80	/* wall flag */

/*** Object flags ***/

/*
 * Chest trap flags (see "tables.c")
 */
#define CHEST_LOSE_STR	0x01
#define CHEST_LOSE_CON	0x02
#define CHEST_POISON	0x04
#define CHEST_PARALYZE	0x08
#define CHEST_EXPLODE	0x10
#define CHEST_SUMMON	0x20

/*
 * Special Object Flags
 */
#define IDENT_SENSE		0x01	/* Item has been "sensed" */
#define IDENT_FIXED		0x02	/* Item has been "haggled" */
#define IDENT_EMPTY		0x04	/* Item charges are known */
#define IDENT_KNOWN		0x08	/* Item abilities are known */
#define IDENT_RUMOUR	0x10	/* Item background is known */
#define IDENT_MENTAL	0x20	/* Item information is known */
#define IDENT_CURSED	0x40	/* Item is temporarily cursed */
#define IDENT_BROKEN	0x80	/* Item is permanently worthless */

/*
 * The special inscriptions.
 */
#define INSCRIP_NULL		100
#define INSCRIP_TERRIBLE	100+1
#define INSCRIP_WORTHLESS	100+2
#define INSCRIP_CURSED		100+3
#define INSCRIP_BROKEN		100+4
#define INSCRIP_AVERAGE		100+5
#define INSCRIP_GOOD		100+6
#define INSCRIP_EXCELLENT	100+7
#define INSCRIP_SPECIAL		100+8
#define INSCRIP_UNCURSED	100+9
#define INSCRIP_INDESTRUCT	100+10

/*
 * Number of special inscriptions, plus one.
 */
#define MAX_INSCRIP			11

/*
 * Some bit-flags for the "smart" field of "monster_type".
 *
 * Most of these map to the "TR2_xxx" flags.
 */
#define SM_OPP_ACID		0x00000001
#define SM_OPP_ELEC		0x00000002
#define SM_OPP_FIRE		0x00000004
#define SM_OPP_COLD		0x00000008
#define SM_OPP_POIS		0x00000010
#define SM_IMM_FREE		0x00000020
#define SM_IMM_MANA		0x00000040	/* Immunity to mana drain, not mana attacks */
#define SM_IMM_BRAVE	0x00000080
#define SM_IMM_BLIND	0x00000100
#define SM_IMM_ACID		0x00000200
#define SM_IMM_ELEC		0x00000400
#define SM_IMM_FIRE		0x00000800
#define SM_IMM_COLD		0x00001000
#define SM_RES_ACID		0x00002000
#define SM_RES_ELEC		0x00004000
#define SM_RES_FIRE		0x00008000
#define SM_RES_COLD		0x00010000
#define SM_RES_POIS		0x00020000
#define SM_RES_LITE		0x00040000
#define SM_RES_DARK		0x00080000
#define SM_RES_CONFU	0x00100000
#define SM_RES_SOUND	0x00200000
#define SM_RES_SHARD	0x00400000
#define SM_RES_NEXUS	0x00800000
#define SM_RES_NETHR	0x01000000
#define SM_RES_CHAOS	0x02000000
#define SM_RES_DISEN	0x04000000
#define SM_RES_TIME		0x08000000
#define SM_RES_MANA		0x10000000	/* Resistance to mana attacks */
#define SM_RES_DISEASE	0x20000000
#define SM_RES_WATER	0x40000000
#define SM_XXX4			0x80000000

/*
 * Note that "flags1" contains all flags dependant on "pval", plus all "sustains".
 *
 * Note that "flags2" contains all "resistances" (including special resistance flags,
 * immunity flags, and resistance flags).  
 *
 * Note that "flags3" contains everything else (including eight good flags,
 * six unused flags, five bad flags, four damage ignoring flags, six weird
 * flags, and three cursed flags).
 *
 * Note that "flags4" contains weapon flags.
 */

#define TR1_STR				0x00000001L	/* STR += "pval" */
#define TR1_INT				0x00000002L	/* INT += "pval" */
#define TR1_WIS				0x00000004L	/* WIS += "pval" */
#define TR1_DEX				0x00000008L	/* DEX += "pval" */
#define TR1_CON				0x00000010L	/* CON += "pval" */
#define TR1_CHR				0x00000020L	/* CHR += "pval" */
#define TR1_XXX1			0x00000040L	
#define TR1_XXX2			0x00000080L	
#define TR1_STEALTH			0x00000100L	/* Stealth += "pval" */
#define TR1_SEARCH			0x00000200L	/* Search += "pval" */
#define TR1_INFRA			0x00000400L	/* Infra += "pval" */
#define TR1_TUNNEL			0x00000800L	/* Tunnel += "pval" */
#define TR1_SPEED			0x00001000L	/* Speed += "pval" */
#define TR1_BLOWS			0x00002000L	/* Blows += "pval" */
#define TR1_SHOTS			0x00004000L	/* Shots += "pval" */
#define TR1_MANA			0x00008000L	/* Mana += "pval*10" */  
#define TR1_HEALTH			0x00010000L	/* Health += "pval*10" */
#define TR1_MIGHT			0x00020000L	/* Might += "pval" */
#define TR1_XXX3			0x00040000L	
#define TR1_XXX4			0x00080000L	
#define TR1_XXX5			0x00100000L	
#define TR1_XXX6			0x00200000L	
#define TR1_XXX7			0x00400000L	
#define TR1_XXX8			0x00800000L	
#define TR1_XXX9			0x01000000L	
#define TR1_XXX10			0x02000000L	
#define TR1_SUST_STR		0x04000000L	/* Sustain STR */
#define TR1_SUST_INT		0x08000000L	/* Sustain INT */
#define TR1_SUST_WIS		0x10000000L	/* Sustain WIS */
#define TR1_SUST_DEX		0x20000000L	/* Sustain DEX */
#define TR1_SUST_CON		0x40000000L	/* Sustain CON */
#define TR1_SUST_CHR		0x80000000L	/* Sustain CHR */

#define TR2_IM_ACID			0x00000001L	/* Immunity to acid */
#define TR2_IM_ELEC			0x00000002L	/* Immunity to elec */
#define TR2_IM_FIRE			0x00000004L	/* Immunity to fire */
#define TR2_IM_COLD			0x00000008L	/* Immunity to cold */
#define TR2_RES_ACID		0x00000010L	/* Resist acid */
#define TR2_RES_ELEC		0x00000020L	/* Resist elec */
#define TR2_RES_FIRE		0x00000040L	/* Resist fire */
#define TR2_RES_COLD		0x00000080L	/* Resist cold */
#define TR2_FREE_ACT		0x00000100L	/* Free action */
#define TR2_HOLD_LIFE		0x00000200L	/* Hold life */
#define TR2_NO_BLIND		0x00000400L	/* No blindness */
#define TR2_BRAVERY			0x00000800L	/* Bravery */
#define TR2_RES_POIS		0x00001000L	/* Resist poison */
#define TR2_RES_DISEASE		0x00002000L	/* Resist disease */
#define TR2_RES_LITE		0x00004000L	/* Resist lite */
#define TR2_RES_DARK		0x00008000L	/* Resist dark */
#define TR2_RES_CONFU		0x00010000L	/* Resist confusion */
#define TR2_RES_SOUND		0x00020000L	/* Resist sound */
#define TR2_RES_SHARD		0x00040000L	/* Resist shards */
#define TR2_RES_WATER		0x00080000L	/* Resist water */
#define TR2_RES_NEXUS		0x00100000L	/* Resist nexus */
#define TR2_RES_NETHR		0x00200000L	/* Resist nether */
#define TR2_RES_CHAOS		0x00400000L	/* Resist chaos */
#define TR2_RES_DISEN		0x00800000L	/* Resist disenchant */
#define TR2_RES_TIME		0x01000000L	/* Resist time */
#define TR2_RES_MANA		0x02000000L	/* Resist mana */  
#define TR2_XXX1			0x04000000L	
#define TR2_XXX2			0x08000000L	
#define TR2_XXX3			0x10000000L	
#define TR2_XXX4			0x20000000L	
#define TR2_XXX5			0x40000000L	
#define TR2_XXX6			0x80000000L	

#define TR3_SLOW_DIGEST		0x00000001L	/* Slow digest */
#define TR3_FEATHER	 		0x00000002L	/* Feather Falling */
#define TR3_REGEN			0x00000004L	/* Regeneration */
#define TR3_TELEPATHY		0x00000008L	/* Telepathy */
#define TR3_SEE_INVIS		0x00000010L	/* See invis */
#define TR3_INVIS			0x00000020L	/* Invisibility*/
#define TR3_GLOW			0x00000040L	/* Perma-lite */
#define TR3_XXX1			0x00000080L
#define TR3_LITE1			0x00000100L
#define TR3_LITE2			0x00000200L
#define TR3_LITE3			0x00000400L
#define TR3_LITE4			0x00000800L
#define TR3_IGNORE_ACID		0x00001000L	/* Item ignores Acid Damage */
#define TR3_IGNORE_ELEC		0x00002000L	/* Item ignores Elec Damage */
#define TR3_IGNORE_FIRE		0x00004000L	/* Item ignores Fire Damage */
#define TR3_IGNORE_COLD		0x00008000L	/* Item ignores Cold Damage */
#define TR3_IGNORE_DISEN	0x00010000L	/* Item ignores Disenchantment */  
#define TR3_XXX2			0x00020000L	
#define TR3_ACTIVATE		0x00040000L	/* Item can be activated */
#define TR3_DONT_RANDOMIZE	0x00080000L /* Artifact will not become randart */
#define TR3_EASY_KNOW		0x00100000L	/* Item is known if aware */
#define TR3_HIDE_TYPE		0x00200000L	/* Item hides description */
#define TR3_SHOW_MODS		0x00400000L	/* Item shows Tohit/Todam */
#define TR3_XXX3			0x00800000L	
#define TR3_DRAIN_ITEM		0x01000000L	/* Drains other items */ 
#define TR3_DISRUPT			0x02000000L	/* Interferes with spellcasting */
#define TR3_TELEPORT		0x04000000L	/* Random teleportation */
#define TR3_AGGRAVATE		0x08000000L	/* Aggravate monsters */
#define TR3_DRAIN_EXP		0x10000000L	/* Experience drain */
#define TR3_LIGHT_CURSE		0x20000000L	/* Item has Light Curse */
#define TR3_HEAVY_CURSE		0x40000000L	/* Item has Heavy Curse */
#define TR3_PERMA_CURSE		0x80000000L	/* Item has Perma Curse */

#define TR4_SLAY_ANIMAL		0x00000001L	/* Weapon slays animals */
#define TR4_SLAY_PLANT		0x00000002L	/* Weapon slays plants */   
#define TR4_SLAY_EVIL		0x00000004L	/* Weapon slays evil */
#define TR4_SLAY_CHAOS		0x00000008L	/* Weapon slays chaos */   
#define TR4_SLAY_UNDEAD		0x00000010L	/* Weapon slays undead */
#define TR4_SLAY_DEMON		0x00000020L	/* Weapon slays demon */
#define TR4_SLAY_HUMANOID	0x00000040L	/* Weapon slays humanoids */
#define TR4_SLAY_PERSON		0x00000080L	/* Weapon slays people */
#define TR4_SLAY_DRAGON		0x00000100L	/* Weapon slays dragon */
#define TR4_KILL_DRAGON		0x00000200L	/* Weapon kills dragon */
#define TR4_XXX1			0x00000400L	
#define TR4_XXX2			0x00000800L
#define TR4_BLESSED			0x00001000L /* Weapon has been blessed */
#define TR4_XXX3			0x00002000L
#define TR4_XXX4			0x00004000L
#define TR4_XXX5			0x00008000L
#define TR4_WOUNDING		0x00010000L	/* Weapon causes cuts */ 
#define TR4_TERROR			0x00020000L /* Weapon causes fear */ 
#define TR4_XXX6			0x00040000L
#define TR4_XXX7			0x00080000L
#define TR4_IMPACT			0x00100000L /* Earthquake blows */
#define TR4_XXX8			0x00200000L
#define TR4_XXX9			0x00400000L
#define TR4_BRAND_ACID		0x00800000L	/* Weapon has cold brand */
#define TR4_BRAND_ELEC		0x01000000L	/* Weapon has elec brand */
#define TR4_BRAND_FIRE		0x02000000L	/* Weapon has fire brand */
#define TR4_BRAND_COLD		0x04000000L	/* Weapon has cold brand */
#define TR4_BRAND_POIS		0x08000000L	/* Weapon has venom brand */
#define TR4_BRAND_LITE		0x10000000L	/* Weapon has light brand */ 
#define TR4_BRAND_DARK		0x20000000L	/* Weapon has darkness brand */
#define TR4_XXX10			0x40000000L
#define TR4_XXX11			0x80000000L

/*
 * Hack -- flag set 1 -- mask for "pval-dependant" flags.
 * Note that all "pval" dependant flags must be in "flags1".
 */
#define TR1_PVAL_MASK \
	(TR1_STR | TR1_INT | TR1_WIS | TR1_DEX | TR1_CON | TR1_CHR | \
	 TR1_STEALTH | TR1_SEARCH | TR1_INFRA | TR1_TUNNEL | TR1_MANA | \
	 TR1_HEALTH | TR1_SPEED | TR1_BLOWS | TR1_SHOTS | TR1_MIGHT)

/*
 * Hack -- flag set 1 -- mask for "pval-dependant" flags, except might (used 
 * for display purposes).
 * Note that all "pval" dependant flags must be in "flags1".
 */
#define TR1_PVAL_NOMIGHT_MASK \
	(TR1_STR | TR1_INT | TR1_WIS | TR1_DEX | TR1_CON | TR1_CHR | \
	 TR1_STEALTH | TR1_SEARCH | TR1_INFRA | TR1_TUNNEL | TR1_MANA | \
	 TR1_HEALTH | TR1_SPEED | TR1_BLOWS | TR1_SHOTS)

/*
 * Flag set 2 -- mask for flags that can become double resists.
 */
#define TR2_DOUBLE_RES_MASK \
 (TR2_RES_ACID | TR2_RES_ELEC | TR2_RES_FIRE | TR2_RES_COLD | TR2_RES_POIS)

/*
 * Flag set 3 -- mask for "ignore element" flags.
 */
#define TR3_IGNORE_MASK \
	(TR3_IGNORE_ACID | TR3_IGNORE_ELEC | TR3_IGNORE_FIRE | TR3_IGNORE_COLD )

/*
 * Flag set 3 -- mask for "lite" flags.
 */
#define TR3_LITE_MASK \
	(TR3_LITE1 | TR3_LITE2 | TR3_LITE3 | TR3_LITE4 )

/*
 * Hack -- special "xtra" object flag info (type)
 */
#define OBJECT_XTRA_TYPE_SUSTAIN	1
#define OBJECT_XTRA_TYPE_RESIST		2 /* Either mid(75%) or high(25%) resist */
#define OBJECT_XTRA_TYPE_POWER		3

#define OBJECT_XTRA_TYPE_MID_RESIST		4
#define OBJECT_XTRA_TYPE_HIGH_RESIST	5

/*
 * Hack -- special "xtra" object flag info (base flag value)
 */
#define OBJECT_XTRA_BASE_SUSTAIN		TR1_SUST_STR
#define OBJECT_XTRA_BASE_MID_RESIST		TR2_FREE_ACT
#define OBJECT_XTRA_BASE_HIGH_RESIST	TR2_RES_WATER
#define OBJECT_XTRA_BASE_POWER			TR3_SLOW_DIGEST

/*
 * Hack -- special "xtra" object flag info (number of flags)
 */
#define OBJECT_XTRA_SIZE_SUSTAIN		6
#define OBJECT_XTRA_SIZE_MID_RESIST		11
#define OBJECT_XTRA_SIZE_HIGH_RESIST	6
#define OBJECT_XTRA_SIZE_POWER			7

/*** Class flags ***/

#define CF_EXTRA_SHOT		0x00000001L	/* Extra shots */
#define CF_BRAVERY_30		0x00000002L	/* Gains resist fear at plev 30 */
#define CF_BLESS_WEAPON		0x00000004L	/* Requires blessed/hafted weapons */
#define CF_NO_GLOVE			0x00000008L	/* Gloves disturb spellcasting */
#define CF_POWER			0x00000010L	/* Powerful spells */
#define CF_EXTRA_MANA		0x00000020L	/* Extra mana */
#define CF_ZERO_FAIL		0x00000040L	/* Fail rates reach 0% */
#define CF_BEAM				0x00000080L	/* Higher chance of spells beaming */
#define CF_MYSTIC_CAST		0x00000100L	/* Allow casting of mystic spells when dark/confused */
#define CF_EXTRA_SPELL		0x00000200L	/* Allow faster acquisition of spells */
#define CF_PSEUDO_ID_HEAVY	0x00000400L	/* Allow heavy pseudo-id */
#define CF_CHOOSE_SPELLS	0x00000800L	/* Allow choice of spells */
#define CF_MUSIC			0x00001000L	/* Allow use of musical instruments */
#define CF_LORE				0x00002000L	/* Identify acts as *identify* for artifacts */
#define CF_BETTER_CRITICAL	0x00004000L	/* Better critical hits */
#define CF_BETTER_SHOT		0x00008000L	/* Better critical hits with missiles*/
#define CF_XXX1				0x00010000L	
#define CF_XXX2				0x00020000L	
#define CF_XXX3				0x00040000L	
#define CF_XXX4				0x00080000L	
#define CF_XXX5				0x00100000L	
#define CF_XXX6				0x00200000L	
#define CF_XXX7				0x00400000L	
#define CF_XXX8				0x00800000L	
#define CF_XXX9				0x01000000L	
#define CF_XXX10			0x02000000L	
#define CF_XXX11			0x04000000L	
#define CF_PSEUDO_ID1		0x08000000L	/* Very slow light sensing */ 
#define CF_PSEUDO_ID2		0x10000000L	/* Slow light sensing */
#define CF_PSEUDO_ID3		0x20000000L	/* Fast light sensing */
#define CF_PSEUDO_ID4		0x40000000L	/* Slow heavy sensing */
#define CF_PSEUDO_ID5		0x80000000L	/* Fast heavy sensing */

#define CF_PSEUDO_ID_MASK \
	(CF_PSEUDO_ID1 | CF_PSEUDO_ID2 | CF_PSEUDO_ID3 | CF_PSEUDO_ID4 | CF_PSEUDO_ID5)

/*** Monster flags ***/

/*
 * Special Monster Flags (all temporary)
 */
#define MFLAG_VIEW	0x01	/* Monster is in line of sight */
/* xxx */
#define MFLAG_BORN	0x10	/* Monster is still being born */
#define MFLAG_NICE	0x20	/* Monster is still being nice */
#define MFLAG_SHOW	0x40	/* Monster is recently memorized */
#define MFLAG_MARK	0x80	/* Monster is currently memorized */

/*
 * New monster race bit flags
 */
#define RF1_UNIQUE			0x00000001	/* Unique Monster */
#define RF1_QUESTOR			0x00000002	/* Quest Monster */
#define RF1_MALE			0x00000004	/* Male gender */
#define RF1_FEMALE			0x00000008	/* Female gender */
#define RF1_XXX1			0x00000010	/* Absorbs symbol */
#define RF1_CHAR_CLEAR		0x00000020	/* Changes symbol */
#define RF1_ATTR_CLEAR		0x00000040	/* Absorbs color */
#define RF1_ATTR_MULTI		0x00000080	/* Changes color */
#define RF1_FORCE_DEPTH		0x00000100	/* Start at "correct" depth */
#define RF1_FORCE_MAXHP		0x00000200	/* Start with max hitpoints */
#define RF1_FORCE_SLEEP		0x00000400	/* Start out sleeping */
#define RF1_COMPANION		0x00000800	/* Arrive with a unique from same level */
#define RF1_FRIEND			0x00001000	/* Arrove with a small group of friends */
#define RF1_FRIENDS			0x00002000	/* Arrive with a large group of friends */
#define RF1_ESCORT			0x00004000	/* Arrive with a small group of escorts */
#define RF1_ESCORTS			0x00008000	/* Arrive with a larger group of escorts */
#define RF1_NEVER_BLOW		0x00010000	/* Never make physical blow */
#define RF1_NEVER_MOVE		0x00020000	/* Never make physical move */
#define RF1_RAND_25			0x00040000	/* Moves randomly (25%) */
#define RF1_RAND_50			0x00080000	/* Moves randomly (50%) */
#define RF1_ONLY_GOLD		0x00100000	/* Drop only gold */
#define RF1_ONLY_ITEM		0x00200000	/* Drop only items */
#define RF1_DROP_60			0x00400000	/* Drop an item/gold (60%) */
#define RF1_DROP_90			0x00800000	/* Drop an item/gold (90%) */
#define RF1_DROP_1D2		0x01000000	/* Drop 1d2 items/gold */
#define RF1_DROP_2D2		0x02000000	/* Drop 2d2 items/gold */
#define RF1_DROP_3D2		0x04000000	/* Drop 3d2 items/gold */
#define RF1_DROP_4D2		0x08000000	/* Drop 4d2 items/gold */
#define RF1_DROP_GOOD		0x10000000	/* Drop good items */
#define RF1_DROP_GREAT		0x20000000	/* Drop great items */
#define RF1_XXX2			0x40000000	
#define RF1_DROP_CHOSEN		0x80000000	/* Drop "chosen" items */

/*
 * New monster race bit flags
 */
#define RF2_STUPID			0x00000001	/* Monster is stupid */
#define RF2_SMART			0x00000002	/* Monster is smart */
#define RF2_SEE_INVIS 		0x00000004	/* Monster can see invisible */
#define RF2_HAS_LITE		0x00000008	/* Monster carries light */
#define RF2_INVISIBLE		0x00000010	/* Monster avoids vision */
#define RF2_COLD_BLOOD		0x00000020	/* Monster avoids infra */
#define RF2_EMPTY_MIND		0x00000040	/* Monster avoids telepathy */
#define RF2_WEIRD_MIND		0x00000080	/* Monster avoids telepathy? */
#define RF2_MULTIPLY		0x00000100	/* Monster reproduces */
#define RF2_REGENERATE		0x00000200	/* Monster regenerates */
#define RF2_POWERFUL		0x00000400	/* Monster has strong breath */
#define RF2_OPEN_DOOR		0x00000800	/* Monster can open doors */
#define RF2_BASH_DOOR		0x00001000	/* Monster can bash doors */
#define RF2_PASS_WALL		0x00002000	/* Monster can pass walls */
#define RF2_KILL_WALL		0x00004000	/* Monster can destroy walls */
#define RF2_MOVE_BODY		0x00008000	/* Monster can move monsters */
#define RF2_KILL_BODY		0x00010000	/* Monster can kill monsters */
#define RF2_TAKE_ITEM		0x00020000	/* Monster can pick up items */
#define RF2_KILL_ITEM		0x00040000	/* Monster can crush items */
#define RF2_XXX1			0x00080000	
#define RF2_XXX2			0x00100000	
#define RF2_XXX3			0x00200000	
#define RF2_XXX4			0x00400000	/
#define RF2_PERSON			0x00800000	/* Person */
#define RF2_HUMANOID		0x01000000	/* Humanoid */
#define RF2_DRAGON			0x02000000	/* Dragon */
#define RF2_DEMON			0x04000000	/* Demon */
#define RF2_UNDEAD			0x08000000	/* Undead */
#define RF2_EVIL			0x10000000	/* Evil */
#define RF2_ANIMAL			0x20000000	/* Animal */
#define RF2_PLANT			0x40000000	/* Plant */
#define RF2_CHAOTIC			0x80000000	/* Chaotic */

/*
 * New monster race bit flags
 */
#define RF3_HURT_LITE		0x00000001	/* Hurt by lite */	
#define RF3_HURT_ROCK		0x00000002	/* Hurt by rock remover */	
#define RF3_HURT_DARK		0x00000004	/* Hurt by darkness */	
#define RF3_XXX1			0x00000008	
#define RF3_NO_BLIND		0x00000010	/* Cannot be blinded */
#define RF3_NO_FEAR			0x00000020	/* Cannot be scared */	
#define RF3_NO_STUN			0x00000040	/* Cannot be stunned */	
#define RF3_NO_SLEEP		0x00000080	/* Cannot be slept */	
#define RF3_NO_CUT			0x00000100	/* Cannot be cut */
#define RF3_NO_CALM			0x00000200	/* Cannot be calmed */     
#define RF3_RES_ACID		0x00000400	/* Resist acid a lot */
#define RF3_RES_ELEC		0x00000800	/* Resist elec a lot */	
#define RF3_RES_FIRE		0x00001000	/* Resist fire a lot */	
#define RF3_RES_COLD		0x00002000	/* Resist cold a lot */	
#define RF3_RES_POIS		0x00004000	/* Resist poison a lot and cannot be poisoned*/	
#define RF3_RES_NETH		0x00008000	/* Resist Nether */
#define RF3_RES_LITE		0x00010000	/* Resist Light */
#define RF3_RES_DARK		0x00020000	/* Resist Dark */
#define RF3_RES_CONF		0x00040000	/* Resist confusion and cannot be confused*/
#define RF3_RES_SOUN		0x00080000	/* Resist Sound */
#define RF3_RES_CHAO		0x00100000	/* Resist Chaos */
#define RF3_RES_DISE		0x00200000	/* Resist Disenchant */
#define RF3_RES_NEXU		0x00400000	/* Resist Nexus */
#define RF3_RES_TIME		0x00800000	/* Resist Time */
#define RF3_RES_INER		0x01000000	/* Resist Inertia */
#define RF3_RES_GRAV		0x02000000	/* Resist Gravity */
#define RF3_RES_SHAR		0x04000000	/* Resist Shards */
#define RF3_RES_PLAS		0x08000000	/* Resist Plasma */
#define RF3_RES_FORCE		0x10000000	/* Resist Force */
#define RF3_RES_MANA		0x20000000	/* Resist Mana somewhat*/
#define RF3_RES_WATER		0x40000000	/* Resist Water */
#define RF3_RES_DISEASE		0x80000000	/* Resist Disease a lot */

/*
 * New monster race bit flags
 */
#define RF4_SHRIEK			0x00000001	/* Shriek for help */
#define RF4_XXX1			0x00000002
#define RF4_XXX2			0x00000004
#define RF4_XXX3			0x00000008	
#define RF4_ARROW_1			0x00000010	/* Fire an arrow (light) */
#define RF4_ARROW_2			0x00000020	/* Fire an arrow (heavy) */
#define RF4_ARROW_3			0x00000040	/* Fire missiles (light) */
#define RF4_ARROW_4			0x00000080	/* Fire missiles (heavy) */
#define RF4_BR_ACID			0x00000100	/* Breathe Acid */
#define RF4_BR_ELEC			0x00000200	/* Breathe Elec */
#define RF4_BR_FIRE			0x00000400	/* Breathe Fire */
#define RF4_BR_COLD			0x00000800	/* Breathe Cold */
#define RF4_BR_POIS			0x00001000	/* Breathe Poison */
#define RF4_BR_NETH			0x00002000	/* Breathe Nether */
#define RF4_BR_LITE			0x00004000	/* Breathe Lite */
#define RF4_BR_DARK			0x00008000	/* Breathe Dark */
#define RF4_BR_CONF			0x00010000	/* Breathe Confusion */
#define RF4_BR_SOUN			0x00020000	/* Breathe Sound */
#define RF4_BR_CHAO			0x00040000	/* Breathe Chaos */
#define RF4_BR_DISE			0x00080000	/* Breathe Disenchant */
#define RF4_BR_NEXU			0x00100000	/* Breathe Nexus */
#define RF4_BR_TIME			0x00200000	/* Breathe Time */
#define RF4_BR_INER			0x00400000	/* Breathe Inertia */
#define RF4_BR_GRAV			0x00800000	/* Breathe Gravity */
#define RF4_BR_SHAR			0x01000000	/* Breathe Shards */
#define RF4_BR_PLAS			0x02000000	/* Breathe Plasma */
#define RF4_BR_FORCE		0x04000000	/* Breathe Force */
#define RF4_BR_MANA			0x08000000	/* Breathe Mana */ 
#define RF4_BR_WATER		0x10000000  /* Breathe Water */ 
#define RF4_BR_DISEASE		0x20000000  /* Breathe Disease */
#define RF4_XXX4			0x40000000
#define RF4_XXX5			0x80000000

/*
 * New monster race bit flags
 */
#define RF5_BA_ACID			0x00000001	/* Acid Ball */
#define RF5_BA_ELEC			0x00000002	/* Elec Ball */
#define RF5_BA_FIRE			0x00000004	/* Fire Ball */
#define RF5_BA_COLD			0x00000008	/* Cold Ball */
#define RF5_BA_POIS			0x00000010	/* Poison Ball */
#define RF5_BA_NETH			0x00000020	/* Nether Ball */
#define RF5_BA_WATE			0x00000040	/* Water Ball */
#define RF5_BA_MANA			0x00000080	/* Mana Storm */
#define RF5_BA_DARK			0x00000100	/* Darkness Storm */
#define RF5_DRAIN_MANA		0x00000200	/* Drain Mana */
#define RF5_MIND_BLAST		0x00000400	/* Blast Mind */
#define RF5_BRAIN_SMASH		0x00000800	/* Smash Brain */
#define RF5_CAUSE_1			0x00001000	/* Cause Light Wound */
#define RF5_CAUSE_2			0x00002000	/* Cause Serious Wound */
#define RF5_CAUSE_3			0x00004000	/* Cause Critical Wound */
#define RF5_CAUSE_4			0x00008000	/* Cause Mortal Wound */
#define RF5_BO_ACID			0x00010000	/* Acid Bolt */
#define RF5_BO_ELEC			0x00020000	/* Elec Bolt (unused) */
#define RF5_BO_FIRE			0x00040000	/* Fire Bolt */
#define RF5_BO_COLD			0x00080000	/* Cold Bolt */
#define RF5_XXX1			0x00100000	
#define RF5_BO_NETH			0x00200000	/* Nether Bolt */
#define RF5_BO_WATE			0x00400000	/* Water Bolt */
#define RF5_BO_MANA			0x00800000	/* Mana Bolt */
#define RF5_BO_PLAS			0x01000000	/* Plasma Bolt */
#define RF5_BO_ICEE			0x02000000	/* Ice Bolt */
#define RF5_MISSILE			0x04000000	/* Magic Missile */
#define RF5_SCARE			0x08000000	/* Frighten Player */
#define RF5_BLIND			0x10000000	/* Blind Player */
#define RF5_CONF			0x20000000	/* Confuse Player */
#define RF5_SLOW			0x40000000	/* Slow Player */
#define RF5_HOLD			0x80000000	/* Paralyze Player */

/*
 * New monster race bit flags
 */
#define RF6_HASTE			0x00000001	/* Speed self */
#define RF6_XXX1			0x00000002
#define RF6_HEAL			0x00000004	/* Heal self */
#define RF6_XXX2			0x00000008
#define RF6_BLINK			0x00000010	/* Teleport Short */
#define RF6_TPORT			0x00000020	/* Teleport Long */
#define RF6_BLINK_TO		0x00000040	/* Move monster near player */
#define RF6_XXX3			0x00000080
#define RF6_TELE_TO			0x00000100	/* Move player to monster */
#define RF6_TELE_AWAY		0x00000200	/* Move player far away */
#define RF6_TELE_LEVEL		0x00000400	/* Move player vertically */
#define RF6_XXX4			0x00000800	
#define RF6_DARKNESS		0x00001000	/* Create Darkness */
#define RF6_TRAPS			0x00002000	/* Create Traps */
#define RF6_FORGET			0x00004000	/* Cause amnesia */
#define RF6_XXX5			0x00008000
#define RF6_S_KIN			0x00010000	/* Summon Kin */
#define RF6_S_HI_DEMON		0x00020000	/* Summon Greater Demons */
#define RF6_S_MONSTER		0x00040000	/* Summon Monster */
#define RF6_S_MONSTERS		0x00080000	/* Summon Monsters */
#define RF6_S_ANIMALS		0x00100000	/* Summon Animals */
#define RF6_S_SPIDER		0x00200000	/* Summon Spiders */
#define RF6_S_HOUND			0x00400000	/* Summon Hounds */
#define RF6_S_HYDRA			0x00800000	/* Summon Hydras */
#define RF6_S_HORROR        0x01000000	/* Summon Horrors */
#define RF6_S_DEMON			0x02000000	/* Summon Demon */
#define RF6_S_UNDEAD		0x04000000	/* Summon Undead */
#define RF6_S_DRAGON		0x08000000	/* Summon Dragon */
#define RF6_S_HI_UNDEAD		0x10000000	/* Summon Greater Undead */
#define RF6_S_HI_DRAGON		0x20000000	/* Summon Ancient Dragon */
#define RF6_S_WRAITH		0x40000000	/* Summon Unique Wraith */
#define RF6_S_UNIQUE		0x80000000	/* Summon Unique Monster */

/*
 * Hack -- Bit masks to control what spells are considered
 */

/*
 * Resistance flags (for knowledge purposes)
 */
#define RF3_RES_MASK \
	(RF3_RES_ACID | RF3_RES_ELEC | RF3_RES_FIRE | RF3_RES_COLD | RF3_RES_POIS | \
	 RF3_RES_NETH | RF3_RES_LITE | RF3_RES_DARK | RF3_RES_CONF | RF3_RES_SOUN | \
	 RF3_RES_CHAO | RF3_RES_DISE | RF3_RES_NEXU | RF3_RES_TIME | RF3_RES_INER | \
	 RF3_RES_GRAV | RF3_RES_SHAR | RF3_RES_PLAS | RF3_RES_FORCE | RF3_RES_MANA | \
	 RF3_RES_WATER | RF3_RES_DISEASE )


/*
 * Choose "intelligent" spells when desperate
 */

#define RF4_INT_MASK \
	(0L)

#define RF5_INT_MASK \
	(RF5_HOLD | RF5_SLOW | RF5_CONF | RF5_BLIND | RF5_SCARE)

#define RF6_INT_MASK \
	(RF6_BLINK |  RF6_TPORT | RF6_TELE_LEVEL | RF6_TELE_AWAY | \
	 RF6_HEAL | RF6_HASTE | RF6_TRAPS | \
	 RF6_S_KIN | RF6_S_MONSTER | RF6_S_MONSTERS | \
	 RF6_S_ANIMALS | RF6_S_SPIDER | RF6_S_HOUND | RF6_S_HYDRA | \
	 RF6_S_HORROR | RF6_S_DRAGON | RF6_S_UNDEAD | RF6_S_DEMON | \
	 RF6_S_HI_DRAGON | RF6_S_HI_UNDEAD | RF6_S_HI_DEMON | \
	 RF6_S_WRAITH | RF6_S_UNIQUE)

/*
 * "Bolt" spells that may hurt fellow monsters
 */
#define RF4_BOLT_MASK \
	(RF4_ARROW_1 | RF4_ARROW_2 | RF4_ARROW_3 | RF4_ARROW_4)

#define RF5_BOLT_MASK \
	(RF5_BO_ACID | RF5_BO_ELEC | RF5_BO_FIRE | RF5_BO_COLD | \
	 RF5_BO_NETH | RF5_BO_WATE | RF5_BO_MANA | RF5_BO_PLAS | \
	 RF5_BO_ICEE | RF5_MISSILE)

#define RF6_BOLT_MASK \
	(0L)

/*
 * Spells that allow the caster to escape
 */
#define RF4_ESCAPE_MASK \
	(0L)

#define RF5_ESCAPE_MASK \
	(0L)

#define RF6_ESCAPE_MASK \
	(RF6_BLINK | RF6_TPORT | RF6_TELE_AWAY | RF6_TELE_LEVEL)

/*
 * Spells that hurt the player directly
 */
#define RF4_ATTACK_MASK \
	(RF4_ARROW_1 | RF4_ARROW_2 | RF4_ARROW_3 | RF4_ARROW_4 | \
	 RF4_BR_ACID | RF4_BR_ELEC | RF4_BR_FIRE | RF4_BR_COLD | RF4_BR_POIS | \
	 RF4_BR_NETH | RF4_BR_LITE | RF4_BR_DARK | RF4_BR_CONF | RF4_BR_SOUN | \
	 RF4_BR_CHAO | RF4_BR_DISE | RF4_BR_NEXU | RF4_BR_TIME | RF4_BR_INER | \
	 RF4_BR_GRAV | RF4_BR_SHAR | RF4_BR_PLAS | RF4_BR_FORCE | RF4_BR_MANA | \
     RF4_BR_WATER | RF4_BR_DISEASE)

#define RF5_ATTACK_MASK \
	(RF5_BA_ACID | RF5_BA_ELEC | RF5_BA_FIRE | RF5_BA_COLD | RF5_BA_POIS | \
	 RF5_BA_NETH | RF5_BA_WATE | RF5_BA_MANA | RF5_BA_DARK | \
	 RF5_MIND_BLAST | RF5_BRAIN_SMASH | RF5_CAUSE_1 | RF5_CAUSE_2 | \
	 RF5_CAUSE_3 | RF5_CAUSE_4 | RF5_BO_ACID | RF5_BO_ELEC | RF5_BO_FIRE | \
	 RF5_BO_COLD | RF5_BO_NETH | RF5_BO_WATE | RF5_BO_MANA | RF5_BO_PLAS | \
	 RF5_BO_ICEE | RF5_MISSILE)

#define RF6_ATTACK_MASK \
	(0L)

/*
 * Spells that require sight
 */
#define RF4_SIGHT_MASK \
	(RF4_SHRIEK | RF4_ARROW_1 | RF4_ARROW_2 | RF4_ARROW_3 | RF4_ARROW_4 | \
	 RF4_BR_ACID | RF4_BR_ELEC | RF4_BR_FIRE | RF4_BR_COLD | RF4_BR_POIS | \
	 RF4_BR_NETH | RF4_BR_LITE | RF4_BR_DARK | RF4_BR_CONF | RF4_BR_SOUN | \
	 RF4_BR_CHAO | RF4_BR_DISE | RF4_BR_NEXU | RF4_BR_TIME | RF4_BR_INER | \
	 RF4_BR_GRAV | RF4_BR_SHAR | RF4_BR_PLAS | RF4_BR_FORCE | RF4_BR_MANA | \
     RF4_BR_WATER | RF4_BR_DISEASE)

#define RF5_SIGHT_MASK \
	(RF5_BA_ACID | RF5_BA_ELEC | RF5_BA_FIRE | RF5_BA_COLD | RF5_BA_POIS | \
	 RF5_BA_NETH | RF5_BA_WATE | RF5_BA_MANA | RF5_BA_DARK | \
	 RF5_MIND_BLAST | RF5_BRAIN_SMASH | RF5_CAUSE_1 | RF5_CAUSE_2 | \
	 RF5_CAUSE_3 | RF5_CAUSE_4 | RF5_BO_ACID | RF5_BO_ELEC | RF5_BO_FIRE | \
	 RF5_BO_COLD | RF5_BO_NETH | RF5_BO_WATE | RF5_BO_MANA | RF5_BO_PLAS | \
	 RF5_BO_ICEE | RF5_MISSILE | RF5_BLIND | RF5_SCARE | RF5_CONF | RF5_SLOW | \
     RF5_HOLD)

#define RF6_SIGHT_MASK \
	(RF6_BLINK_TO | RF6_TELE_TO | RF6_FORGET | RF6_TELE_AWAY | RF6_TELE_LEVEL)

/*
 * Summoning spells
 */
#define RF4_SUMMON_MASK \
	(0L)

#define RF5_SUMMON_MASK \
	(0L)

#define RF6_SUMMON_MASK \
	(RF6_S_KIN | RF6_S_MONSTER | RF6_S_MONSTERS | RF6_S_ANIMALS | \
	 RF6_S_SPIDER | RF6_S_HOUND | RF6_S_HYDRA | RF6_S_HORROR | \
	 RF6_S_DEMON | RF6_S_UNDEAD | RF6_S_DRAGON | RF6_S_HI_UNDEAD | \
	 RF6_S_HI_DEMON | RF6_S_HI_DRAGON | RF6_S_WRAITH | RF6_S_UNIQUE)

/*
 * Spells that improve the caster's tactical position if it's too close
 */
#define RF4_TACTIC_CLOSE_MASK \
	(0L)

#define RF5_TACTIC_CLOSE_MASK \
	(0L)

#define RF6_TACTIC_CLOSE_MASK \
	(RF6_BLINK)

/*
 * Spells that improve the caster's tactical position if it's too far
 */
#define RF4_TACTIC_FAR_MASK \
	(0L)

#define RF5_TACTIC_FAR_MASK \
	(0L)

#define RF6_TACTIC_FAR_MASK \
	(RF6_BLINK_TO | RF6_TELE_TO)

/*
 * Annoying spells
 */
#define RF4_ANNOY_MASK \
	(RF4_SHRIEK)

#define RF5_ANNOY_MASK \
	(RF5_DRAIN_MANA | RF5_MIND_BLAST | RF5_BRAIN_SMASH | RF5_SCARE | \
	 RF5_BLIND | RF5_CONF | RF5_SLOW | RF5_HOLD)

#define RF6_ANNOY_MASK \
	(RF6_TELE_TO | RF6_DARKNESS | RF6_TRAPS | RF6_FORGET)

/*
 * Spells that increase the caster's relative speed
 */
#define RF4_HASTE_MASK \
	(0L)

#define RF5_HASTE_MASK \
	(RF5_SLOW | RF5_HOLD)

#define RF6_HASTE_MASK \
	(RF6_HASTE)

/*
 * Healing spells
 */
#define RF4_HEAL_MASK \
	(0L)

#define RF5_HEAL_MASK \
	(0L)

#define RF6_HEAL_MASK \
	(RF6_HEAL)

/*
 * Innate spell-like effects
 */
#define RF4_INNATE_MASK \
	(RF4_SHRIEK | RF4_ARROW_1 | RF4_ARROW_2 | RF4_ARROW_3 | RF4_ARROW_4 | \
	 RF4_BR_ACID | RF4_BR_ELEC | RF4_BR_FIRE | RF4_BR_COLD | RF4_BR_POIS | \
	 RF4_BR_NETH | RF4_BR_LITE | RF4_BR_DARK | RF4_BR_CONF | RF4_BR_SOUN | \
	 RF4_BR_CHAO | RF4_BR_DISE | RF4_BR_NEXU | RF4_BR_TIME | RF4_BR_INER | \
	 RF4_BR_GRAV | RF4_BR_SHAR | RF4_BR_PLAS | RF4_BR_FORCE | RF4_BR_MANA | \
	 RF4_BR_WATER | RF4_BR_DISEASE)

#define RF5_INNATE_MASK \
	(0L)

#define RF6_INNATE_MASK \
	(0L)

/*** Option Definitions ***/

/*
 * Option indexes
 *
 * These values are hard-coded by savefiles (and various pieces of code).
 */
#define OPT_NORMAL					56 /* Regular options */
#define OPT_BIRTH					17 /* Birth/adult options */
#define OPT_CHEAT					9  /* Cheat/score options */

/*
 * Option indexes (normal)
 *
 * These values are hard-coded by savefiles.
 */
#define OPT_rogue_like_commands		0 
#define OPT_quick_messages			1
#define OPT_floor_query_flag		2
#define OPT_carry_query_flag		3
#define OPT_use_old_target			4
#define OPT_always_pickup			5
#define OPT_always_repeat			6
#define OPT_depth_in_feet			7
#define OPT_stack_force_notes		8
#define OPT_stack_force_costs		9
#define OPT_show_labels				10
#define OPT_show_weights			11
#define OPT_ring_bell				12
#define OPT_show_flavors			13
#define OPT_run_ignore_stairs		14
#define OPT_run_ignore_doors		15
#define OPT_run_cut_corners			16
#define OPT_disturb_move			17
#define OPT_disturb_near			18
#define OPT_disturb_panel			19
#define OPT_disturb_state			20
#define OPT_disturb_minor			21
#define OPT_alert_failure			22
#define OPT_verify_destroy			23
#define OPT_verify_destroy_junk		24
#define OPT_auto_haggle				25
#define OPT_expand_look				26
#define OPT_expand_list				27
#define OPT_view_perma_grids		28
#define OPT_view_torch_grids		29
#define OPT_dungeon_align			30
#define OPT_view_reduce_lite		31
#define OPT_hidden_player			32
#define OPT_avoid_abort				33
#define OPT_avoid_other				34
#define OPT_flush_failure			35
#define OPT_flush_disturb			36
#define OPT_fresh_before			37
#define OPT_fresh_after				38
#define OPT_compress_savefile		39
#define OPT_hilite_player			40
#define OPT_view_yellow_lite		41
#define OPT_view_bright_lite		42
#define OPT_view_granite_lite		43
#define OPT_view_special_lite		44
#define OPT_easy_direction 			45
#define OPT_easy_alter				46
#define OPT_easy_floor 				47
#define OPT_show_piles				48
#define OPT_center_player			49
#define OPT_run_avoid_center		50
#define OPT_scroll_target			51
#define OPT_auto_more				52
#define OPT_view_monster_lite		53
#define OPT_verify_leave_quest		54
#define OPT_carry_heavy_query		55

/*
 * Option indexes (birth and adult)
 */
#define OPT_birth_point_based		0
#define OPT_birth_auto_roller		1
#define OPT_birth_preserve			2
#define OPT_birth_ironman			3
#define OPT_birth_no_stores			4
#define OPT_birth_no_artifacts		5
#define OPT_birth_rand_artifacts	6
#define OPT_birth_autoscum			7
#define OPT_birth_no_feelings		8
#define OPT_birth_start_kit			9
#define OPT_birth_smart_packs		10
#define OPT_birth_smart_cheat		11
#define OPT_birth_flow_by_sound		12
#define OPT_birth_flow_by_smell		13
#define OPT_birth_random_hp			14
#define OPT_birth_force_small_lev	15
#define OPT_birth_easy_mode			16

/*
 * Option indexes (cheat and score)
 */
#define OPT_cheat_peek				0
#define OPT_cheat_hear				1
#define OPT_cheat_room				2
#define OPT_cheat_xtra				3
#define OPT_cheat_know				4
#define OPT_cheat_live				5
#define OPT_cheat_no_save			6
#define OPT_cheat_debug				7
#define OPT_cheat_wizard			8

/*
 * Hack -- Option symbols
 */
#define rogue_like_commands		op_ptr->opt[OPT_rogue_like_commands]
#define quick_messages			op_ptr->opt[OPT_quick_messages]
#define floor_query_flag		op_ptr->opt[OPT_floor_query_flag]
#define carry_query_flag		op_ptr->opt[OPT_carry_query_flag]
#define use_old_target			op_ptr->opt[OPT_use_old_target]
#define always_pickup			op_ptr->opt[OPT_always_pickup]
#define always_repeat			op_ptr->opt[OPT_always_repeat]
#define depth_in_feet			op_ptr->opt[OPT_depth_in_feet]
#define stack_force_notes		op_ptr->opt[OPT_stack_force_notes]
#define stack_force_costs		op_ptr->opt[OPT_stack_force_costs]
#define show_labels				op_ptr->opt[OPT_show_labels]
#define show_weights			op_ptr->opt[OPT_show_weights]
#define ring_bell				op_ptr->opt[OPT_ring_bell]
#define show_flavors			op_ptr->opt[OPT_show_flavors]
#define run_ignore_stairs		op_ptr->opt[OPT_run_ignore_stairs]
#define run_ignore_doors		op_ptr->opt[OPT_run_ignore_doors]
#define run_cut_corners			op_ptr->opt[OPT_run_cut_corners]
#define disturb_move			op_ptr->opt[OPT_disturb_move]
#define disturb_near			op_ptr->opt[OPT_disturb_near]
#define disturb_panel			op_ptr->opt[OPT_disturb_panel]
#define disturb_state			op_ptr->opt[OPT_disturb_state]
#define disturb_minor			op_ptr->opt[OPT_disturb_minor]
#define alert_failure			op_ptr->opt[OPT_alert_failure]
#define verify_destroy			op_ptr->opt[OPT_verify_destroy]
#define verify_destroy_junk		op_ptr->opt[OPT_verify_destroy_junk]
#define auto_haggle				op_ptr->opt[OPT_auto_haggle]
#define expand_look				op_ptr->opt[OPT_expand_look]
#define expand_list				op_ptr->opt[OPT_expand_list]
#define view_perma_grids		op_ptr->opt[OPT_view_perma_grids]
#define view_torch_grids		op_ptr->opt[OPT_view_torch_grids]
#define dungeon_align			op_ptr->opt[OPT_dungeon_align]
#define view_reduce_lite		op_ptr->opt[OPT_view_reduce_lite]
#define hidden_player			op_ptr->opt[OPT_hidden_player]
#define avoid_abort				op_ptr->opt[OPT_avoid_abort]
#define avoid_other				op_ptr->opt[OPT_avoid_other]
#define flush_failure			op_ptr->opt[OPT_flush_failure]
#define flush_disturb			op_ptr->opt[OPT_flush_disturb]
#define fresh_before			op_ptr->opt[OPT_fresh_before]
#define fresh_after				op_ptr->opt[OPT_fresh_after]
#define compress_savefile		op_ptr->opt[OPT_compress_savefile]
#define hilite_player			op_ptr->opt[OPT_hilite_player]
#define view_yellow_lite		op_ptr->opt[OPT_view_yellow_lite]
#define view_bright_lite		op_ptr->opt[OPT_view_bright_lite]
#define view_granite_lite		op_ptr->opt[OPT_view_granite_lite]
#define view_special_lite		op_ptr->opt[OPT_view_special_lite]
#define easy_direction			op_ptr->opt[OPT_easy_direction]
#define easy_alter				op_ptr->opt[OPT_easy_alter]
#define easy_floor				op_ptr->opt[OPT_easy_floor]
#define show_piles				op_ptr->opt[OPT_show_piles]
#define center_player			op_ptr->opt[OPT_center_player]
#define run_avoid_center		op_ptr->opt[OPT_run_avoid_center]
#define scroll_target			op_ptr->opt[OPT_scroll_target]
#define auto_more				op_ptr->opt[OPT_auto_more]
#define view_monster_lite		op_ptr->opt[OPT_view_monster_lite]
#define verify_leave_quest		op_ptr->opt[OPT_verify_leave_quest]
#define carry_heavy_query		op_ptr->opt[OPT_carry_heavy_query]
#define birth_point_based		op_ptr->opt_birth[OPT_birth_point_based]
#define birth_auto_roller		op_ptr->opt_birth[OPT_birth_auto_roller]
#define birth_preserve			op_ptr->opt_birth[OPT_birth_preserve]
#define birth_ironman			op_ptr->opt_birth[OPT_birth_ironman]
#define birth_no_stores			op_ptr->opt_birth[OPT_birth_no_stores]
#define birth_no_artifacts		op_ptr->opt_birth[OPT_birth_no_artifacts]
#define birth_rand_artifacts	op_ptr->opt_birth[OPT_birth_rand_artifacts]
#define birth_autoscum      	op_ptr->opt_birth[OPT_birth_autoscum]
#define birth_no_feelings	    op_ptr->opt_birth[OPT_birth_no_feelings]
#define birth_start_kit			op_ptr->opt_birth[OPT_birth_start_kit]
#define birth_smart_packs		op_ptr->opt_birth[OPT_birth_smart_packs]
#define birth_smart_cheat		op_ptr->opt_birth[OPT_birth_smart_cheat]
#define birth_flow_by_sound		op_ptr->opt_birth[OPT_birth_flow_by_sound]
#define birth_flow_by_smell		op_ptr->opt_birth[OPT_birth_flow_by_smell]
#define birth_random_hp			op_ptr->opt_birth[OPT_birth_random_hp]
#define	birth_force_small_lev	op_ptr->opt_birth[OPT_birth_force_small_lev]
#define	birth_easy_mode			op_ptr->opt_birth[OPT_birth_easy_mode]
#define adult_point_based		op_ptr->opt_adult[OPT_birth_point_based]
#define adult_auto_roller		op_ptr->opt_adult[OPT_birth_auto_roller]
#define adult_preserve			op_ptr->opt_adult[OPT_birth_preserve]
#define adult_ironman			op_ptr->opt_adult[OPT_birth_ironman]
#define adult_no_stores			op_ptr->opt_adult[OPT_birth_no_stores]
#define adult_no_artifacts		op_ptr->opt_adult[OPT_birth_no_artifacts]
#define adult_rand_artifacts	op_ptr->opt_adult[OPT_birth_rand_artifacts]
#define adult_autoscum			op_ptr->opt_adult[OPT_birth_autoscum]
#define adult_no_feelings	    op_ptr->opt_adult[OPT_birth_no_feelings]
#define adult_start_kit			op_ptr->opt_adult[OPT_birth_start_kit]
#define adult_smart_packs		op_ptr->opt_adult[OPT_birth_smart_packs]
#define adult_smart_cheat		op_ptr->opt_adult[OPT_birth_smart_cheat]
#define adult_flow_by_sound		op_ptr->opt_adult[OPT_birth_flow_by_sound]
#define adult_flow_by_smell		op_ptr->opt_adult[OPT_birth_flow_by_smell]
#define adult_random_hp			op_ptr->opt_adult[OPT_birth_random_hp]
#define	adult_force_small_lev	op_ptr->opt_adult[OPT_birth_force_small_lev]
#define	adult_easy_mode			op_ptr->opt_adult[OPT_birth_easy_mode]
#define cheat_peek				op_ptr->opt_cheat[OPT_cheat_peek]
#define cheat_hear				op_ptr->opt_cheat[OPT_cheat_hear]
#define cheat_room				op_ptr->opt_cheat[OPT_cheat_room]
#define cheat_xtra				op_ptr->opt_cheat[OPT_cheat_xtra]
#define cheat_know				op_ptr->opt_cheat[OPT_cheat_know]
#define cheat_live				op_ptr->opt_cheat[OPT_cheat_live]
#define cheat_no_save			op_ptr->opt_cheat[OPT_cheat_no_save]
#define cheat_debug				op_ptr->opt_cheat[OPT_cheat_debug]
#define cheat_wizard			op_ptr->opt_cheat[OPT_cheat_wizard]
#define score_peek				op_ptr->opt_score[OPT_cheat_peek]
#define score_hear				op_ptr->opt_score[OPT_cheat_hear]
#define score_room				op_ptr->opt_score[OPT_cheat_room]
#define score_xtra				op_ptr->opt_score[OPT_cheat_xtra]
#define score_know				op_ptr->opt_score[OPT_cheat_know]
#define score_live				op_ptr->opt_score[OPT_cheat_live]
#define score_no_save			op_ptr->opt_score[OPT_cheat_no_save]
#define score_debug				op_ptr->opt_score[OPT_cheat_debug]
#define score_wizard			op_ptr->opt_score[OPT_cheat_wizard]

/*
 * Information for "do_cmd_options()".
 */
#define OPT_PAGE_MAX				9
#define OPT_PAGE_PER				16

/*** Macro Definitions ***/

/*
 * Hack -- The main "screen"
 */
#define term_screen	(angband_term[0])

/*
 * Determine if a given inventory item is "aware"
 */
#define object_aware_p(T) \
	(k_info[(T)->k_idx].aware)

/*
 * Determine if a given inventory item is "tried"
 */
#define object_tried_p(T) \
	(k_info[(T)->k_idx].tried)

/*
 * Determine if a given inventory item is "known"
 * Test One -- Check for special "known" tag
 * Test Two -- Check for "Easy Know" + "Aware"
 */
#define object_known_p(T) \
	(((T)->ident & (IDENT_KNOWN)) || \
	 (k_info[(T)->k_idx].easy_know && k_info[(T)->k_idx].aware))

/*
 * Return the "attr" for a given item.
 * Use "flavor" if available.
 * Default to user definitions.
 */
#define object_attr(T) \
	((k_info[(T)->k_idx].flavor) ? \
	 (misc_to_attr[k_info[(T)->k_idx].flavor]) : \
	 (k_info[(T)->k_idx].x_attr))

/*
 * Return the "char" for a given item.
 * Use "flavor" if available.
 * Default to user definitions.
 */
#define object_char(T) \
	((k_info[(T)->k_idx].flavor) ? \
	 (misc_to_char[k_info[(T)->k_idx].flavor]) : \
	 (k_info[(T)->k_idx].x_char))

/*
 * Artifacts use the "name1" field
 */
#define artifact_p(T) \
	((T)->name1 ? TRUE : FALSE)

/*
 * Ego-Items use the "name2" field
 */
#define ego_item_p(T) \
	((T)->name2 ? TRUE : FALSE)

/*
 * Broken items.
 */
#define broken_p(T) \
	((T)->ident & (IDENT_BROKEN))

/*
 * Cursed items.
 */
#define cursed_p(T) \
	((T)->ident & (IDENT_CURSED))

/*
 * Weight factor for weapon plusses
 */
#define wgt_factor(T) \
	(((T)->weight > 300) ? 20 : \
	(((T)->weight < 10) ? 3 : max_item_plus[((T)->weight/10)-1]))

/*
 * Convert an "attr"/"char" pair into a "pict" (P)
 */
#define PICT(A,C) \
	((((u16b)(A)) << 8) | ((byte)(C)))

/*
 * Convert a "pict" (P) into an "attr" (A)
 */
#define PICT_A(P) \
	((byte)((P) >> 8))

/*
 * Convert a "pict" (P) into an "char" (C)
 */
#define PICT_C(P) \
	((char)((byte)(P)))

/*
 * Convert a "location" (Y,X) into a "grid" (G)
 */
#define GRID(Y,X) \
	(256 * (Y) + (X))

/*
 * Convert a "grid" (G) into a "location" (Y)
 */
#define GRID_Y(G) \
	((int)((G) / 256U))

/*
 * Convert a "grid" (G) into a "location" (X)
 */
#define GRID_X(G) \
	((int)((G) % 256U))

/*
 * Determines if a map location is "meaningful"
 */
#define in_bounds(Y,X) \
	(((unsigned)(Y) < (unsigned)(p_ptr->cur_hgt)) && \
	 ((unsigned)(X) < (unsigned)(p_ptr->cur_wid)))

/*
 * Determines if a map location is fully inside the outer walls
 * This is more than twice as expensive as "in_bounds()", but
 * often we need to exclude the outer walls from calculations.
 */
#define in_bounds_fully(Y,X) \
	(((Y) > 0) && ((Y) < p_ptr->cur_hgt-1) && \
	 ((X) > 0) && ((X) < p_ptr->cur_wid-1))

/*
 * Determines if a map location is currently "on screen"
 * Note that "panel_contains(Y,X)" always implies "in_bounds(Y,X)".
 * Pre-storing this into a cave_info flag would be nice.  XXX XXX
 */
#define panel_contains(Y,X) \
	(((unsigned)((Y) - p_ptr->wy) < (unsigned)(SCREEN_HGT)) && \
	 ((unsigned)((X) - p_ptr->wx) < (unsigned)(SCREEN_WID)))

/*
 * Determine if a "legal" grid is a "floor" grid
 *
 * Line 1 -- forbid doors, rubble, seams, walls
 *
 * Note the use of the new "CAVE_WALL" flag.
 */
#define cave_floor_bold(Y,X) \
	(!(cave_info[Y][X] & (CAVE_WALL)))

/*
 * Determine if a "legal" grid is a "clean" floor grid
 *
 * Line 1 -- forbid non-floors
 * Line 2 -- forbid normal objects
 */
#define cave_clean_bold(Y,X) \
	((cave_feat[Y][X] == FEAT_FLOOR) && \
	 (cave_o_idx[Y][X] == 0))

/*
 * Determine if a "legal" grid is an "empty" floor grid
 *
 * Line 1 -- forbid doors, rubble, seams, walls
 * Line 2 -- forbid player/monsters
 */
#define cave_empty_bold(Y,X) \
	(cave_floor_bold(Y,X) && \
	 (cave_m_idx[Y][X] == 0))

/*
 * Determine if a "legal" grid is an "naked" floor grid
 *
 * Line 1 -- forbid non-floors
 * Line 2 -- forbid normal objects
 * Line 3 -- forbid player/monsters
 */
#define cave_naked_bold(Y,X) \
	((cave_feat[Y][X] == FEAT_FLOOR) && \
	 (cave_o_idx[Y][X] == 0) && \
	 (cave_m_idx[Y][X] == 0))

/*
 * Determine if a "legal" grid is "permanent"
 *
 * Line 1 -- perma-walls
 * Line 2-3 -- stairs
 * Line 4-5 -- shop doors
 */
#define cave_perma_bold(Y,X) \
	((cave_feat[Y][X] >= FEAT_PERM_EXTRA) || \
	 ((cave_feat[Y][X] == FEAT_LESS) || \
	  (cave_feat[Y][X] == FEAT_MORE)) || \
	 ((cave_feat[Y][X] >= FEAT_SHOP_HEAD) && \
	  (cave_feat[Y][X] <= FEAT_SHOP_TAIL)))

/*
 * Determine if a "legal" grid is within "los" of the player
 *
 * Note the use of comparison to zero to force a "boolean" result
 */
#define player_has_los_bold(Y,X) \
	((cave_info[Y][X] & (CAVE_VIEW)) != 0)

/*
 * Determine if a "legal" grid can be "seen" by the player
 *
 * Note the use of comparison to zero to force a "boolean" result
 */
#define player_can_see_bold(Y,X) \
	((cave_info[Y][X] & (CAVE_SEEN)) != 0)

/*
 * Hack -- Prepare to use the "Secure" routines
 */
#if defined(SET_UID) && defined(SECURE)
extern int PlayerUID;
# define getuid() PlayerUID
# define geteuid() PlayerUID
#endif

/*** Color constants ***/

/*
 * Angband "attributes" (with symbols, and base (R,G,B) codes)
 *
 * The "(R,G,B)" codes are given in "fourths" of the "maximal" value,
 * and should "gamma corrected" on most (non-Macintosh) machines.
 */
#define TERM_DARK		0	/* 'd' */	/* 0,0,0 */
#define TERM_WHITE		1	/* 'w' */	/* 4,4,4 */
#define TERM_SLATE		2	/* 's' */	/* 2,2,2 */
#define TERM_ORANGE		3	/* 'o' */	/* 4,2,0 */
#define TERM_RED		4	/* 'r' */	/* 3,0,0 */
#define TERM_GREEN		5	/* 'g' */	/* 0,2,1 */
#define TERM_BLUE		6	/* 'b' */	/* 0,0,4 */
#define TERM_UMBER		7	/* 'u' */	/* 2,1,0 */
#define TERM_L_DARK		8	/* 'D' */	/* 1,1,1 */
#define TERM_L_WHITE	9	/* 'W' */	/* 3,3,3 */
#define TERM_VIOLET		10	/* 'v' */	/* 4,0,4 */
#define TERM_YELLOW		11	/* 'y' */	/* 4,4,0 */
#define TERM_L_RED		12	/* 'R' */	/* 4,0,0 */
#define TERM_L_GREEN	13	/* 'G' */	/* 0,4,0 */
#define TERM_L_BLUE		14	/* 'B' */	/* 0,4,4 */
#define TERM_L_UMBER	15	/* 'U' */	/* 3,2,1 */

/*
 * Message/Sound types 
 */


/* Generic Messages */
#define MSG_GENERIC				 0 /* System and unclassified messages */
#define MSG_FAIL				 1 /* Generic failure message */
#define MSG_SUCCEED				 2 /* Generic success message */
#define MSG_EFFECT				 3 /* Generic effect message */
#define MSG_MONSTER				 4 /* Generic monster message */

/* Special message types */
#define MSG_NOTE				 5
#define MSG_BELL				 6
#define MSG_TIMEOUT				 7 /* Time-limit */
#define MSG_CHEAT				 8 /* Cheat info */

/* Specific message types */
#define MSG_DEATH				 9 /* Player dies */
#define MSG_HITPOINT_WARN		10 /* Hitpoint warning */
#define MSG_RESIST				11 /* Player Resists */
#define MSG_FEELING				12 /* Level feeling */
#define MSG_HIT					13 /* Player hit */
#define MSG_MISS				14 /* Player miss */
#define MSG_FLEE				15 /* Monster fless */
#define MSG_DROP				16 /* Drop item */
#define MSG_PICKUP				17 /* Pickup an item */
#define MSG_CURSE				18 /* Item cursed */
#define MSG_KILL				19 /* Kill monster */
#define MSG_LEVEL				20 /* Gain level */
#define MSG_STUDY				21 /* Gain spell */
#define MSG_SHOOT				22 /* Shoot */
#define MSG_QUAFF				23 /* Quaff potion */
#define MSG_ZAP					24 /* Zap/use/activate/aim item */
#define MSG_THROW				25 /* Throw something */
#define MSG_FUEL				26 /* Fuel a lite */
#define MSG_EAT					27 /* Eat */
#define MSG_DSM					28 /* Dragon Scale Mail breath */
#define MSG_TELEPORT			29 /* Teleport */
#define MSG_TPLEVEL				30 /* Teleport level (and recall) */
#define MSG_SPELL_FAIL			31 /* Spell failure */
#define MSG_TPOTHER				32 /* Teleport other */
#define MSG_HITWALL				33 /* Hit wall */
#define MSG_STORE				34 /* Normal store message */
#define MSG_STORE_ANGRY			35 /* Storekeeper angry */
#define MSG_STORE_HAPPY			36 /* Storekeeper pleased */
#define MSG_DIG					37 /* Tunnel */
#define MSG_OPENDOOR			38 /* Open Door */
#define MSG_SHUTDOOR			39 /* Close door */
#define MSG_BASH				40 /* Bash door */
#define MSG_SPIKE				41 /* Spike a door */
#define MSG_LOCKPICK_SUCCEED	42 /* Lockpick/disarm success */
#define MSG_LOCKPICK_FAIL		43 /* Lockpick/disarm failure */
#define MSG_STAIRS				44 /* Climb stairs */
#define MSG_QUEST_FAIL			45 /* Succeed in quest */
#define MSG_QUEST_SUCCEED		46 /* Fail in quest */
#define MSG_TRAP				47 /* Hit a trap */
#define MSG_CRITICAL_HIT		48 /* Score critical hit */
#define MSG_FIND				49 /* Find something */
#define MSG_ITEM_RESIST			50 /* Item resists */
#define MSG_ITEM_DAMAGE			51 /* Item damaged */
#define MSG_ITEM_BONUS			52 /* Item enchanted */
#define MSG_ITEM_BREAK			53 /* Item break */
#define MSG_PSEUDO_ID			54 /* Pseudo-ID */
#define MSG_THEFT				55 /* Item/gold stolen */
#define MSG_MON_FAIL			56 /* Monster fails at something */
#define MSG_SUMMON				57 /* Monster summoned */
#define MSG_DESCRIBE			58 /* Describe something */
#define MSG_DETECT				59 /* Detection spells */
#define MSG_FFALL				60 /* Feather Fall */

#define MSG_MAX             61

/*** Hack ***/

/*
 * Hack -- attempt to reduce various values
 */
#ifdef ANGBAND_LITE
# undef MACRO_MAX
# define MACRO_MAX	128
# undef QUARK_MAX
# define QUARK_MAX	128
# undef MESSAGE_MAX
# define MESSAGE_MAX	128
# undef MESSAGE_BUF
# define MESSAGE_BUF	4096
#endif

/*
 * List of commands that will be auto-repeated
 *
 * ToDo: This string should be user-configurable.
 */
#define AUTO_REPEAT_COMMANDS "TBDoc+"

/*
 * Artifact activation index
 */
#define ACT_ILLUMINATION		 0
#define ACT_MAGIC_MAP			 1
#define ACT_CLAIRVOYANCE		 2
#define ACT_PROT_EVIL			 3
#define ACT_DISP_EVIL			 4
#define ACT_HEAL1				 5
#define ACT_HEAL2				 6
#define ACT_CURE_WOUNDS			 7
#define ACT_HASTE1				 8
#define ACT_HASTE2				 9
#define ACT_FIRE1				10
#define ACT_FIRE2				11
#define ACT_FIRE3				12
#define ACT_FROST1				13
#define ACT_FROST2				14
#define ACT_FROST3				15
#define ACT_FROST4				16
#define ACT_FROST5				17
#define ACT_ACID1				18
#define ACT_RECHARGE1			19
#define ACT_SLEEP				20
#define ACT_LIGHTNING_BOLT		21
#define ACT_ELEC2				22
#define ACT_GENOCIDE			23
#define ACT_MASS_GENOCIDE		24
#define ACT_IDENTIFY			25
#define ACT_DRAIN_LIFE1			26
#define ACT_DRAIN_LIFE2			27
#define ACT_BIZZARE				28
#define ACT_STAR_BALL			29
#define ACT_RAGE_BLESS_RESIST	30
#define ACT_PHASE				31
#define ACT_TRAP_DOOR_DEST		32
#define ACT_DETECT				33
#define ACT_RESIST				34
#define ACT_TELEPORT			35
#define ACT_RESTORE_LIFE		36
#define ACT_MISSILE				37
#define ACT_ARROW				38
#define ACT_REM_FEAR_POIS		39
#define ACT_STINKING_CLOUD		40
#define ACT_STONE_TO_MUD		41
#define ACT_TELE_AWAY			42
#define ACT_WOR					43
#define ACT_CONFUSE				44
#define ACT_PROBE				45
#define ACT_FIREBRAND			46
#define ACT_RESTORE_MANA		47
#define ACT_DIMENSION_DOOR		48
#define ACT_SATISFY_HUNGER		49
#define ACT_DETECT_ENCHANT		50
#define ACT_DETECT_TRAPS		51
#define ACT_RAGE				52
#define ACT_MANA_BOLT			53
#define ACT_LITE_BOLT			54
#define ACT_DARK_BOLT			55
#define ACT_WATER_BOLT			56
#define ACT_LITEBRAND			57
#define ACT_VENOMSHOT			58
#define ACT_DETECT_TREASURE		59
#define ACT_CALM_NON_CHAOS		60

#define ACT_MAX					61

/*
 * Indexes for various spells 
 */
#define SP_HEAL_1				 1
#define SP_HEAL_2A				 2
#define SP_HEAL_2B				 3
#define SP_HEAL_3				 4
#define SP_HEAL_4				 5
#define SP_HEAL_5				 6
#define SP_HEAL_6				 7
#define SP_RESTORE_STATS		 8
#define SP_RESTORE_LEVEL		 9
#define SP_CURE_FEAR			10
#define SP_CURE_DISEASE			11
#define SP_CURE_POISON_1		12
#define SP_CURE_POISON_2		13
#define SP_CURE_POIS_DISE		14
#define SP_CURE_BODY			15
#define SP_CLEAR_MIND			16
#define SP_TELE_10				17
#define SP_TELE_MINOR			18
#define SP_TELE_MAJOR			19
#define SP_TELE_OTHER			20
#define SP_TELE_LEVEL			21
#define SP_TELE_CONTROL			22
#define SP_WORD_RECALL			23
#define SP_ALTER_REALITY		24
#define SP_BOLT_MISSILE			25
#define SP_BOLT_ELEC		 	26
#define SP_BOLT_FROST			27
#define SP_BOLT_ACID			28
#define SP_BOLT_FIRE			29
#define SP_BOLT_SOUND			30
#define SP_BOLT_FORCE			31
#define SP_BOLT_MANA			32
#define SP_BEAM_WEAK_LITE		33
#define SP_BEAM_NETHER			34
#define SP_BALL_POISON_1		35
#define SP_BALL_POISON_2		36
#define SP_BALL_ACID			37
#define SP_BALL_FIRE			38
#define SP_BALL_FROST_1			39
#define SP_BALL_FROST_2			40
#define SP_BALL_SOUND			41
#define SP_BALL_METEOR			42
#define SP_BALL_MANA			43
#define SP_BALL_HOLY			44
#define SP_BANISH				45
#define SP_ANNIHILATION			46
#define SP_DISPEL_UNDEAD_1		47
#define SP_DISPEL_UNDEAD_2		48
#define SP_DISPEL_NON_EVIL		49
#define SP_DISPEL_EVIL_1		50
#define SP_DISPEL_EVIL_2		51
#define SP_WORD_HOLY			52
#define SP_GENOCIDE				53
#define SP_MASS_GENOCIDE		54
#define SP_EARTHQUAKE			55
#define SP_WORD_DESTRUCTION		56
#define SP_LIGHT_AREA			57
#define SP_DARK_AREA			58
#define SP_DETECT_MONSTERS		59
#define SP_DETECT_EVIL			60
#define SP_DETECT_TRAP			61
#define SP_DETECT_TRAP_DOOR		62
#define SP_DETECT_DOOR_STAIR	63
#define SP_DETECT_ENCHANT		64
#define SP_DETECT_ALL			65
#define SP_ABSORB_HIT			66
#define SP_BLESS				67
#define SP_CHANT				68
#define SP_PRAYER				69
#define SP_HEROISM				70
#define SP_RAGE					71
#define SP_SHIELD				72
#define SP_INVIS				73
#define SP_RESILIENCE			74
#define SP_SEE_INVIS			75
#define SP_PROT_EVIL			76
#define SP_HASTE_SELF_1			77
#define SP_HASTE_SELF_2			78
#define SP_DESTROY_TRAP_DOOR	79
#define SP_STONE_TO_MUD			80
#define SP_CREATE_DOOR			81
#define SP_CREATE_STAIR			82
#define SP_AGGRAVATE			83
#define SP_CONFUSE_MONSTER		84
#define SP_CONFUSE_ALL			85
#define SP_SLEEP_MONSTER		86
#define SP_SLEEP_ADJACENT		87
#define SP_SLEEP_ALL			88
#define SP_SLOW_MONSTER			89
#define SP_SLOW_ALL				90
#define SP_CALM_MONSTER			91
#define SP_CALM_ANIMALS			92
#define SP_CALM_NON_EVIL		93
#define SP_CALM_ALL				94
#define SP_BLIND_MONSTER		95
#define SP_SCARE_MONSTER		96
#define SP_SCARE_UNDEAD			97
#define SP_SCARE_ALL			98
#define SP_POLY_MONSTER			99
#define SP_SATISFY_HUNGER		100
#define SP_RECHARGE_1			101
#define SP_RECHARGE_2			102
#define SP_RECHARGE_3			103
#define SP_RECHARGE_4			104
#define SP_IDENTIFY				105
#define SP_IDENTIFY_FULL		106
#define SP_RES_FIRE				107
#define SP_RES_COLD				108
#define SP_RES_FIRE_COLD		109
#define SP_RES_ACID_ELEC		110
#define SP_RES_POISON			111
#define SP_RES_SOUND			112
#define SP_RES_ELEMENTS			113
#define SP_RES_GREATER			114
#define SP_RESISTANCE			115
#define SP_GLYPH_WARDING		116
#define SP_REMOVE_CURSE_1		117
#define SP_REMOVE_CURSE_2		118
#define SP_MAP_1				119
#define SP_MAP_2				120
#define SP_PROBE				121
#define SP_SELF_KNOW			122
#define SP_ENCHANT_WEAP			123
#define SP_ENCHANT_ARMR			124
#define SP_BRAND_ARROW_ANML		125
#define SP_BRAND_ARROW_WOUND	126
#define SP_BRAND_ARROW_ELMNT	127
#define SP_BRAND_SHOT_HOLY		128

/*
 * Number of different spells in the game
 */
#define SPELLS_TOTAL	129

/* 
 * Hack - variables defined in order to be compatible with the general main*.c files.
 * DO NOT USE WITHIN EYANGBAND SOURCE FILES 
 */

/* Dungeon height variables */
#define DUNGEON_WID MAX_DUNGEON_WID
#define DUNGEON_HGT MAX_DUNGEON_HGT

/* Fake directory names - redirect to the save dir */
#define ANGBAND_DIR_BONE ANGBAND_DIR_SAVE
#define ANGBAND_DIR_INFO ANGBAND_DIR_SAVE

/*
 * Maximum known sounds - Should be the same as MSG_MAX for compatibility reasons.
 */
#define SOUND_MAX MSG_MAX
