/* File: sound.h */

/* Purpose: sound system definitions */

/*
 * Copyright (c) 1997-2009 Tim Baker
 *
 * This software may be copied and distributed for educational, research, and
 * not for profit purposes provided that this copyright and statement are
 * included in all such copies.
 */

#ifndef INCLUDED_SOUND_H
#define INCLUDED_SOUND_H

#define SNDGRP_EVENT 0
#define SNDGRP_MONSTER 1
#define SNDGRP_MONSTER_SPELL 2
#define SNDGRP_MONSTER_ATTACK 3
#if defined(ANGBANDTK) || defined(KANGBANDTK)
#define SNDGRP_MAX 4
#endif /* ANGBANDTK, KANGBANDTK */
#if defined(OANGBANDTK) || defined(ZANGBANDTK)
#define SNDGRP_MARTIAL_ART 4
#define SNDGRP_MAX 5
#endif /* ZANGBANDTK */

/* SNDGRP_EVENT constants */
enum {
SND_ACTION_FAILED,
SND_STORE_ENTER,
SND_STORE_LEAVE,
SND_STORE_BUY,
SND_STORE_SELL,
SND_STORE_SELL_GOOD,
SND_STORE_SELL_BAD,
SND_HOME_ENTER,
SND_HOME_LEAVE,
SND_ACTIVATE,
SND_USE_FOOD,
SND_USE_POTION,
SND_USE_ROD,
SND_USE_SCROLL,
SND_USE_STAFF,
SND_USE_WAND,
SND_USE_FUEL,
SND_USE_SPIKE,
SND_SPELL_CAST,
SND_SPELL_LEARN,
SND_SPELL_BALL,
SND_SPELL_BEAM,
SND_SPELL_BOLT,
SND_SPELL_TELEPORT,
SND_SPELL_DESTRUCTION,
SND_SPELL_EARTHQUAKE,
SND_SPELL_SHATTERQUAKE,
#if defined(OANGBANDTK)
SND_MTRAP_SET,
SND_MTRAP_HIT,
#endif
SND_DISARM,
SND_PICK_LOCK,
SND_OPEN,
SND_CLOSE,
SND_PACK_DROP,
SND_PACK_PICKUP,
SND_PACK_REMOVE,
SND_PACK_WEAR,
SND_PACK_DESTROY,
SND_PACK_OVERFLOW,
SND_PACK_STEAL,
SND_PACK_DISENCHANT,
SND_PACK_DAMAGE_ACID,
SND_PACK_DRAIN,
SND_AMNESIA,
SND_STATE_BLIND,
SND_STATE_CONFUSED,
SND_STATE_CUT,
SND_STATE_STUN,
SND_STATE_POISONED,
SND_STATE_PARALYZED,
SND_STATE_AFRAID,
SND_STATE_HALLUCINATE,
SND_STATE_HUNGRY,
SND_STATE_HUNGRY_END,
SND_STATE_FULL,
SND_STATE_FULL_END,
SND_STATE_GORGED,
SND_STATE_GORGED_END,
SND_STATE_FAST,
SND_STATE_SLOW,
SND_STATE_SHIELD,
SND_STATE_BLESS,
SND_STATE_HERO,
SND_STATE_BERSERK,
SND_STATE_PROT_EVIL,
SND_STATE_INVULN,
SND_STATE_SEE_INVIS,
SND_STATE_INFRA,
SND_STATE_RESIST_ACID,
SND_STATE_RESIST_LIGHTNING,
SND_STATE_RESIST_FIRE,
SND_STATE_RESIST_COLD,
SND_STATE_RESIST_POISON,
SND_STATE_RECOVER,
SND_STATE_CHANGE,
SND_ATTACK_HIT,
SND_ATTACK_MISS,
SND_ATTACK_GOOD,
SND_ATTACK_GREAT,
SND_ATTACK_SUPERB,
SND_ATTACK_GREAT2,
SND_ATTACK_SUPERB2,
SND_ATTACK_BOW,
SND_ATTACK_THROW,
SND_BASH,
SND_MISSILE_HIT,
SND_MISSILE_MISS,
SND_TUNNEL_RUBBLE,
SND_TUNNEL_MAGMA,
SND_TUNNEL_QUARTZ,
SND_TUNNEL_GRANITE,
SND_TUNNEL_PERMANENT,
SND_TUNNEL_DOOR,
SND_STAT_DRAIN,
SND_STAT_RESTORE,
SND_STAT_GAIN,
SND_EXPER_DRAIN,
SND_EXPER_RESTORE,
SND_EXPER_LEVEL_UP,
SND_EXPER_LEVEL_DOWN,
SND_TRAP_MISS,
SND_TRAP_DOOR,
SND_TRAP_PIT_OPEN,
SND_TRAP_PIT_SPIKED,
SND_TRAP_PIT_POISON,
SND_TRAP_RUNE_SUMMON,
SND_TRAP_RUNE_TELEPORT,
SND_TRAP_SPOT_FIRE,
SND_TRAP_SPOT_ACID,
SND_TRAP_DART_SLOW,
SND_TRAP_DART_STRENGTH,
SND_TRAP_DART_DEXTERITY,
SND_TRAP_DART_CONSTITUTION,
SND_TRAP_GAS_BLIND,
SND_TRAP_GAS_CONFUSE,
SND_TRAP_GAS_POISON,
SND_TRAP_GAS_SLEEP,
SND_MONEY,
SND_MONEY_200,
SND_MONEY_600,
SND_MONSTER_DEATH,
SND_MONSTER_DEATH_UNIQUE,
SND_MONSTER_KILL_OTHER,
SND_MONSTER_MULTIPLY,
SND_MONSTER_TELEPORT,
SND_MONSTER_PICKUP,
SND_BREAK_DOOR,
SND_TARGET_SET,
SND_WALK,
#if defined(KANGBANDTK) || defined(OANGBANDTK) || defined(ZANGBANDTK)
SND_WALK_WATER,
#endif /* */
#if defined(KANGBANDTK) || defined(ZANGBANDTK)
SND_DROWN_IN_WATER,
SND_BURNED_BY_LAVA,
#endif /* */
SND_DEPTH_UP,
SND_DEPTH_DOWN,
SND_DEPTH_JUMP,
SND_REST,
SND_DISCOVER,
SND_DISTURB,
SND_DISTURB_UNIQUE,
SND_IDENT_WORTHLESS,
SND_IDENT_ARTIFACT,
SND_IDENT_EGO,
SND_OBJECT_DESTROYED,
SND_OBJECT_AUTO_DESTROYED,
SND_WARN_HITPOINT,
SND_CHARACTER_DEATH,
SND_CHARACTER_WIN,
SND_CHARACTER_RETIRE,
SND_TOWN_DAY,
SND_TOWN_NIGHT,
#if defined(ANGBANDTK) || defined(OANGBANDTK)
SND_DUNGEON
#endif /* ANGBANDTK */
#if defined(KANGBANDTK)
SND_DUNGEON,
SND_QUEST_DONE
#endif /* KANGBANDTK */
#if defined(ZANGBANDTK)
SND_WILD_DAY,
SND_WILD_NIGHT,
SND_DUNGEON,
SND_QUEST_DONE,
SND_MUTATE,
SND_LOSE_MUTATION
#endif /* ZANGBANDTK */
};

typedef char *SoundId;
typedef void *SoundData;

extern void sound_init_1(void);
extern void sound_init(void);
extern void sound_exit(void);

extern void sound_done(int chan);
extern void sound(int group, int index, int mode);
#if 0
extern void sound_play_aux(SoundData snd_data, SoundId snd_id, int chan);
extern void sound_play(SoundId snd_id);
#endif
extern void sound_cancel(void);
extern void sound_flush(void);
extern void sound_message(s16b age);
extern void sound_message_play(s16b age);
extern int sound_playing(void);
extern void sound_stop(int group, int index);
extern void sound_monster_reset(void);
extern void sound_monster(int r_idx);
extern void sound_assign(int group, int index, SoundId snd_id);

#endif /* INCLUDED_SOUND_H */
