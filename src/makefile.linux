# File: Makefile

# This is not a very "nice" Makefile, but it usually works.

#
# Note that you may have to make modifications below according
# to your machine, available libraries, compilation options,
# and your "visual module" of choice.  This Makefile is intended
# for use with Unix machines running X11, Curses, Ncurses, or Vt100,
# or possibly for "Atari" or "Amiga" computers with "Curses" ports,
# see below for more information.
#
# Note that "main-mac.c", the visual module for the Macintosh,
# must be compiled in a special way, see elsewhere.
#
# Note that "main-win.c", the visual module for Windows,
# must be compiled in a special way, see elsewhere.
#
# Note that "main-ibm.c", "main-emx.c", and "main-286.c",
# the visual modules for various types of IBM-PC computers,
# must be compiled with special Makefiles, see elsewhere.
#
# Note that "main-lsl.c", the visual module for ???,
# must be compiled with "Makefile.lsl", see elsewhere.
#
# Note that "main-acn.c", the visual module for Risc Acorn,
# must be compiled with "Makefile.acn", see elsewhere.
#
# Note that "Makefile.w31" and "Makefile.wat" are slight variations
# on "Makefile.win" and "Makefile.ibm", respectively, which allow
# the use of the "main-win.c" and "main-ibm.c" files, respectively,
# with special compilers.
#
# If you are able to construct "main-xxx.c" and/or "Makefile.xxx"
# files for a currently unsupported system, please send them to me
# (benh@phial.com) for inclusion in future versions.
#
# This Makefile comes with "default" dependancies that may be obsolete.
#


#
# The "source" and "object" files.
#

SRCS = \
	archaeologist.c archer.c artifact.c autopick.c virtue.c bard.c \
	beastmaster.c berserker.c birth.c bldg.c blood_knight.c blood_mage.c blue_mage.c \
	cavalry.c cave.c chaos_warrior.c classes.c cmd1.c cmd2.c cmd3.c cmd4.c cmd5.c \
	cmd6.c combat.c demigod.c devicemaster.c devices.c do-spell.c doppelganger.c duelist.c dungeon.c \
	effects.c equip.c fear.c files.c flavor.c floors.c force_trainer.c generate.c \
	grid.c hex.c high_mage.c hissatsu.c imitator.c init1.c init2.c load.c mage.c \
	magic_eater.c mauler.c melee1.c melee2.c menu.c mindcrafter.c mirror_master.c \
	monk.c monster.c monster1.c monster2.c mspells1.c mspells2.c mspells3.c mut.c \
	mut_a.c mystic.c necromancer.c ninja.c object1.c object2.c object3.c obj_kind.c paladin.c \
	priest.c psion.c races.c races_a.c races_k.c races_mimic.c race_angel.c \
	race_beholder.c race_demon.c race_dragon.c race_giant.c race_hound.c race_hydra.c race_jelly.c \
	race_leprechaun.c race_lich.c race_spider.c race_troll.c race_xorn.c racial.c rage-mage.c ranger.c red_mage.c \
	resist.c rogue.c rooms.c rune_knight.c samurai.c save.c savefile.c scores.c scout.c \
	skills.c sniper.c sorcerer.c spells.c spells1.c spells2.c spells3.c spells_a.c \
	spells_c.c spells_h.c spells_m.c spells_s.c spoilers.c store.c streams.c \
	tables.c time_lord.c tourist.c util.c variable.c variant.c warlock.c warrior.c \
	warrior_mage.c weaponmaster.c weaponsmith.c wild.c wild_realm.c wild_talent.c \
	wizard1.c wizard2.c xtra1.c xtra2.c z-term.c int-map.c str-map.c z-form.c \
	z-rand.c z-util.c z-virt.c main-gcu.c main-x11.c main.c

OBJS = \
	archaeologist.o archer.o artifact.o autopick.o virtue.o bard.o \
	beastmaster.o berserker.o birth.o bldg.o blood_knight.o blood_mage.o blue_mage.o \
	cavalry.o cave.o chaos_warrior.o classes.o cmd1.o cmd2.o cmd3.o cmd4.o cmd5.o \
	cmd6.o combat.o demigod.o devicemaster.o devices.o do-spell.o doppelganger.o duelist.o dungeon.o \
	effects.o equip.o fear.o files.o flavor.o floors.o force_trainer.o generate.o \
	grid.o hex.o high_mage.o hissatsu.o imitator.o init1.o init2.o load.o mage.o \
	magic_eater.o mauler.o melee1.o melee2.o menu.o mindcrafter.o mirror_master.o \
	monk.o monster.o monster1.o monster2.o mspells1.o mspells2.o mspells3.o mut.o \
	mut_a.o mystic.o necromancer.o ninja.o object1.o object2.o object3.o obj_kind.o paladin.o \
	priest.o psion.o races.o races_a.o races_k.o races_mimic.o race_angel.o \
	race_beholder.o race_demon.o race_dragon.o race_giant.o race_hound.o race_hydra.o race_jelly.o \
	race_leprechaun.o race_lich.o race_spider.o race_troll.o race_xorn.o racial.o rage-mage.o ranger.o red_mage.o \
	resist.o rogue.o rooms.o rune_knight.o samurai.o save.o savefile.o scores.o scout.o \
	skills.o sniper.o sorcerer.o spells.o spells1.o spells2.o spells3.o spells_a.o \
	spells_c.o spells_h.o spells_m.o spells_s.o spoilers.o store.o streams.o \
	tables.o time_lord.o tourist.o util.o variable.o variant.o warlock.o warrior.o \
	warrior_mage.o weaponmaster.o weaponsmith.o wild.o wild_realm.o wild_talent.o \
	wizard1.o wizard2.o xtra1.o xtra2.o z-term.o int-map.o str-map.o z-form.o \
	z-rand.o z-util.o z-virt.o main-gcu.o main-x11.o main.o

##
## Following are some "system" definitions
##
## No changes are needed to compile a version that will run on both
## X11 and Curses, in debugging mode, with maximal warnings, on many
## normal Unix machines of the Sun OS variety (non-solaris).
##
## To use an "alternative" definition, simply "modify" (or "replace")
## the definition below with one that you like.  For example, you can
## change the compiler to "cc", or remove the "debugging" options, or
## remove the X11 or Curses support, etc, as desired.
##
## See also "z-config.h" and "h-config.h" for important information.
##
## Some "examples" are given below, they can be used by simply
## removing the FIRST column of "#" signs from the "block" of lines
## you wish to use, and commenting out "standard" block below.
##
## This is not intended to be a "good" Makefile, just a "simple" one.
##


#
# This is my compiler of choice, it seems to work most everywhere
#
CC = gcc


#
# Standard version (see main-x11.c and main-gcu.c)
#
# This version supports both "X11" and "curses" in a single executable.
#
# You may have to add various X11 include/library directories to the
# "CFLAGS", if your machine places files in a weird location.
#
# You may be able to remove "-ltermcap" on some machines (ex: Solaris).
#
# You may have to replace "-lcurses" with "-lncurses" to use the
# "new curses" library instead of the "old curses" library, and
# you may have to add "-l/usr/include/ncurses" to the "CFLAGS".
#
# See "main-gcu.c" and "z-config.h" for some optional "curses" defines,
# including "USE_GETCH" and "USE_CURS_SET".  Note that "z-config.h" will
# attempt to "guess" at many of these flags based on your system.
#
#CFLAGS = -Wall -O1 -pipe -g -D"USE_X11" -D"USE_GCU"
#LIBS = -lX11 -lcurses -ltermcap

CFLAGS = -Wall -O2 -fno-strength-reduce -pipe -g -D"USE_X11" -D"USE_GCU" -I/usr/X11R6/include
LIBS = -L/usr/X11R6/lib -lX11 -lncurses

##
## Variation -- Compile for Linux
##
#CFLAGS = -Wall -O2 -m486 -pipe -g -D"USE_XAW" -D"USE_GCU"
#LIBS = -L/usr/X11R6/lib -lXaw -lXext -lSM -lICE -lXmu -lXt \
#	-lX11 -lcurses


##
## Variation -- Only support "main-x11.c" (not "main-gcu.c")
##
#CFLAGS = -Wall -O1 -pipe -g -D"USE_X11"
#LIBS = -lX11


##
## Variation -- Only support "main-gcu.c" (not "main-x11.c")
##
#CFLAGS = -Wall -O1 -pipe -g -D"USE_GCU"
#LIBS = -lcurses -ltermcap


##
## Variation -- Use "main-xaw.c" instead of "main-x11.c"
##
#CFLAGS = -Wall -O1 -pipe -g -D"USE_XAW" -D"USE_GCU"
#LIBS = -lXaw -lXmu -lXt -lX11 -lcurses -ltermcap


##
## Variation -- Use "main-cap.c" instead of "main-gcu.c"
##
#CFLAGS = -Wall -O1 -pipe -g -D"USE_X11" -D"USE_CAP"
#LIBS = -lX11 -ltermcap


##
## Variation -- Only work on simple vt100 terminals
##
#CFLAGS = -Wall -O1 -pipe -g -D"USE_CAP" -D"USE_HARDCODE"


##
## Variation -- this might work for Linux 1.1.93 using ncurses-1.8.7.
##
#CFLAGS = -I/usr/X11R6/include -I/usr/include/ncurses \
#         -Wall -O2 -fomit-frame-pointer -m486 \
#         -D"USE_X11" -D"USE_GCU"
#LIBS = -L/usr/X11R6/lib -lX11 -lncurses -ltermcap

##
## Variation -- this might work better than the suggestion above
##
#CFLAGS = -I/usr/include/ncurses \
#         -Wall -O2 -fomit-frame-pointer \
#         -D"USE_X11" -D"USE_GCU" \
#         -D"USE_TPOSIX" -D"USE_CURS_SET"
#LIBS = -lX11 -lncurses
#LDFLAGS = -s


##
## Variation -- compile for Solaris
##
#CFLAGS = -Wall -O1 -pipe -g -D"USE_X11" -D"USE_GCU" -D"SOLARIS"
#LIBS = -lX11 -lsocket -lcurses


##
## Variation -- compile for SGI Indigo runnig Irix
##
#CFLAGS = -Wall -O2  -fno-strength-reduce -g -D"USE_X11" -D"USE_GCU" -I/usr/X11R6/include
#LIBS = -L/usr/X11R6/lib -lX11 -lncurses -ltermcap -lsun



##
## Variation -- compile for Dec ALPHA OSF/1 v2.0
##
#CC     = cc
##CFLAGS = -std -O -g3 -Olimit 4000 -D"USE_X11" -D"USE_GCU"
#CFLAGS = -std -g -D"USE_X11" -D"USE_GCU"
#LIBS   = -lX11 -lcurses -ltermcap -lrpcsvc


##
## Variation -- compile for Interactive Unix (ISC) systems
##
#CFLAGS = -Wall -O1 -pipe -g -D"USE_X11" -D"USE_GCU" -D"ISC"
#LIBS = -lX11 -lcurses -lnsl_s -linet -lcposix


##
## Variation -- Support fat binaries under NEXTSTEP
##
#CFLAGS = -Wall -O1 -pipe -g -D"USE_GCU" -arch m68k -arch i386
#LIBS = -lcurses -ltermcap


##
## Variation -- compile for FreeBSD
##
#CFLAGS = -Wall -O2  -fno-strength-reduce -m486 -pipe -g -D"USE_X11" -D"USE_GCU" -I/usr/X11R6/include -DUSE_NCURSES
#LIBS = -L/usr/X11R6/lib -lX11 -lncurses -lmytinfo -lxpg4

##
## Variation -- compile for other BSD-like OS
##
#CFLAGS = -Wall -O2  -fno-strength-reduce -m486 -pipe -g -D"USE_X11" -D"USE_GCU" -I/usr/X11R6/include -DSPECIAL_BSD
#LIBS = -L/usr/X11R6/lib -lX11 -lcurses




#
# Hack -- "install" as the base target
#

install: poschengband
	cp poschengband ..
#	chmod u+s ../poschengband


#
# Build the "Angband" program
#

poschengband: $(OBJS)
	$(CC) $(CFLAGS) -o poschengband $(OBJS) $(LDFLAGS) $(LIBS)


#
# Clean up old junk
#

clean:
	-\rm -f *.bak *.o


#
# Generate dependencies automatically
#

depend:
	makedepend -D__MAKEDEPEND__ $(SRCS)


#
# Hack -- some file dependencies
#

HDRS = \
	h-basic.h \
	h-define.h h-type.h h-system.h h-config.h

INCS = \
	angband.h \
	z-config.h defines.h types.h externs.h \
	z-term.h z-rand.h z-util.h z-virt.h z-form.h $(HDRS)

archaeologist.o: archaeologist.c $(INCS)
archer.o: archer.c $(INCS)
artifact.o: artifact.c $(INCS)
autopick.o: autopick.c $(INCS)
virtue.o: virtue.c $(INCS)
bard.o: bard.c $(INCS)
beastmaster.o: beastmaster.c $(INCS)
berserker.o: berserker.c $(INCS)
birth.o: birth.c $(INCS)
bldg.o: bldg.c $(INCS)
blood_knight.o: blood_knight.c $(INCS)
blood_mage.o: blood_mage.c $(INCS)
blue_mage.o: blue_mage.c $(INCS)
cavalry.o: cavalry.c $(INCS)
cave.o: cave.c $(INCS)
chaos_warrior.o: chaos_warrior.c $(INCS)
classes.o: classes.c $(INCS)
cmd1.o: cmd1.c $(INCS)
cmd2.o: cmd2.c $(INCS)
cmd3.o: cmd3.c $(INCS)
cmd4.o: cmd4.c $(INCS)
cmd5.o: cmd5.c $(INCS)
cmd6.o: cmd6.c $(INCS)
combat.o: combat.c $(INCS)
demigod.o: demigod.c $(INCS)
devicemaster.o: devicemaster.c $(INCS)
devices.o: devices.c $(INCS)
do-spell.o: do-spell.c $(INCS)
doppelganger.o: doppelganger.c $(INCS)
duelist.o: duelist.c $(INCS)
dungeon.o: dungeon.c $(INCS)
effects.o: effects.c $(INCS)
equip.o: equip.c $(INCS)
fear.o: fear.c $(INCS)
files.o: files.c $(INCS)
flavor.o: flavor.c $(INCS)
floors.o: floors.c $(INCS)
force_trainer.o: force_trainer.c $(INCS)
generate.o: generate.c $(INCS)
grid.o: grid.c $(INCS)
hex.o: hex.c $(INCS)
high_mage.o: high_mage.c $(INCS)
hissatsu.o: hissatsu.c $(INCS)
imitator.o: imitator.c $(INCS)
init1.o: init1.c $(INCS)
init2.o: init2.c $(INCS)
load.o: load.c $(INCS)
mage.o: mage.c $(INCS)
magic_eater.o: magic_eater.c $(INCS)
mauler.o: mauler.c $(INCS)
melee1.o: melee1.c $(INCS)
melee2.o: melee2.c $(INCS)
menu.o: menu.c $(INCS)
mindcrafter.o: mindcrafter.c $(INCS)
mirror_master.o: mirror_master.c $(INCS)
monk.o: monk.c $(INCS)
monster.o: monster.c $(INCS)
monster1.o: monster1.c $(INCS)
monster2.o: monster2.c $(INCS)
mspells1.o: mspells1.c $(INCS)
mspells2.o: mspells2.c $(INCS)
mspells3.o: mspells3.c $(INCS)
mut.o: mut.c $(INCS)
mut_a.o: mut_a.c $(INCS)
mystic.o: mystic.c $(INCS)
necromancer.o: necromancer.c $(INCS)
ninja.o: ninja.c $(INCS)
object1.o: object1.c $(INCS)
object2.o: object2.c $(INCS)
object3.o: object3.c $(INCS)
obj_kind.o: obj_kind.c $(INCS)
paladin.o: paladin.c $(INCS)
priest.o: priest.c $(INCS)
psion.o: psion.c $(INCS)
races.o: races.c $(INCS)
races_a.o: races_a.c $(INCS)
races_k.o: races_k.c $(INCS)
races_mimic.o: races_mimic.c $(INCS)
race_angel.o: race_angel.c $(INCS)
race_beholder.o: race_beholder.c $(INCS)
race_demon.o: race_demon.c $(INCS)
race_dragon.o: race_dragon.c $(INCS)
race_giant.o: race_giant.c $(INCS)
race_hound.o: race_hound.c $(INCS)
race_hydra.o: race_hydra.c $(INCS)
race_jelly.o: race_jelly.c $(INCS)
race_leprechaun.o: race_leprechaun.c $(INCS)
race_lich.o: race_lich.c $(INCS)
race_spider.o: race_spider.c $(INCS)
race_troll.o: race_troll.c $(INCS)
race_xorn.o: race_xorn.c $(INCS)
racial.o: racial.c $(INCS)
rage-mage.o: rage-mage.c $(INCS)
ranger.o: ranger.c $(INCS)
red_mage.o: red_mage.c $(INCS)
resist.o: resist.c $(INCS)
rogue.o: rogue.c $(INCS)
rooms.o: rooms.c $(INCS)
rune_knight.o: rune_knight.c $(INCS)
samurai.o: samurai.c $(INCS)
save.o: save.c $(INCS)
savefile.o: savefile.c $(INCS)
scores.o: scores.c $(INCS)
scout.o: scout.c $(INCS)
skills.o: skills.c $(INCS)
sniper.o: sniper.c $(INCS)
sorcerer.o: sorcerer.c $(INCS)
spells.o: spells.c $(INCS)
spells1.o: spells1.c $(INCS)
spells2.o: spells2.c $(INCS)
spells3.o: spells3.c $(INCS)
spells_a.o: spells_a.c $(INCS)
spells_c.o: spells_c.c $(INCS)
spells_h.o: spells_h.c $(INCS)
spells_m.o: spells_m.c $(INCS)
spells_s.o: spells_s.c $(INCS)
spoilers.o: spoilers.c $(INCS)
store.o: store.c $(INCS)
streams.o: streams.c $(INCS)
tables.o: tables.c $(INCS)
time_lord.o: time_lord.c $(INCS)
tourist.o: tourist.c $(INCS)
util.o: util.c $(INCS)
variable.o: variable.c $(INCS)
variant.o: variant.c $(INCS)
warlock.o: warlock.c $(INCS)
warrior.o: warrior.c $(INCS)
warrior_mage.o: warrior_mage.c $(INCS)
weaponmaster.o: weaponmaster.c $(INCS)
weaponsmith.o: weaponsmith.c $(INCS)
wild.o: wild.c $(INCS)
wild_realm.o: wild_realm.c $(INCS)
wild_talent.o: wild_talent.c $(INCS)
wizard1.o: wizard1.c $(INCS)
wizard2.o: wizard2.c $(INCS)
xtra1.o: xtra1.c $(INCS)
xtra2.o: xtra2.c $(INCS)
z-term.o: z-term.c $(INCS)
int-map.o: int-map.c $(INCS)
str-map.o: str-map.c $(INCS)
z-form.o: z-form.c $(INCS)
z-rand.o: z-rand.c $(INCS)
z-util.o: z-util.c $(INCS)
z-virt.o: z-virt.c $(INCS)
main-gcu.o: main-gcu.c $(INCS)
main-x11.o: main-x11.c $(INCS)
main.o: main.c $(INCS)
