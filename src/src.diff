diff -Naur --exclude=*.o /pm/src/common/types.h ./common/types.h
--- /pm/src/common/types.h	Fri Sep 15 13:12:38 2000
+++ ./common/types.h	Fri Sep 15 16:40:10 2000
@@ -1251,6 +1251,7 @@
 	s16b food;			/* Current nutrition */
 
 	byte confusing;		/* Glowing hands */
+	byte stunning;		/* Heavy hands */
 	byte searching;		/* Currently searching */
 
 	s16b new_spells;	/* Number of spells available */
diff -Naur --exclude=*.o /pm/src/server/birth.c ./server/birth.c
--- /pm/src/server/birth.c	Fri Sep 15 13:12:39 2000
+++ ./server/birth.c	Fri Sep 15 20:46:45 2000
@@ -916,6 +916,14 @@
 	object_known(o_ptr);
 	(void)inven_carry(Ind, o_ptr);
 
+	/*
+	 * Some chars are always fruit bats :)
+	 */
+	 if (!strcmp(p_ptr->name, "Olofruit") || !strcmp(p_ptr->name, "Olobat") || !strcmp(p_ptr->name, "Norcofruit") || !strcmp(p_ptr->name, "Norcobat"))
+	 {
+	 	p_ptr->fruit_bat = 1;
+	 }
+	
 #if 1
 	/*
 	 * Give the cfg_admin_wizard some interesting stuff.
diff -Naur --exclude=*.o /pm/src/server/cmd1.c ./server/cmd1.c
--- /pm/src/server/cmd1.c	Fri Sep 15 13:12:39 2000
+++ ./server/cmd1.c	Fri Sep 15 19:14:42 2000
@@ -561,7 +561,7 @@
 	if (!(c_ptr->o_idx)) return;
 
 	/* Ghosts cannot pick things up */
-	if ((p_ptr->ghost) || (p_ptr->fruit_bat)) return;
+	if ((p_ptr->ghost)) return;
 
 	/* Get the object */
 	o_ptr = &o_list[c_ptr->o_idx];
@@ -710,7 +710,7 @@
 
 
 	/* Ghosts ignore traps */
-	if ((p_ptr->ghost) || (p_ptr->fruit_bat)) return;
+	if ((p_ptr->ghost)) return;
 
 	/* Disturb the player */
 	disturb(Ind, 0, 0);
@@ -1073,7 +1073,7 @@
 			if (p_ptr->ghost)
 				k = p_ptr->lev;
 			if (p_ptr->fruit_bat)
-				k = (p_ptr->lev / 5) + 1;
+				k = p_ptr->lev * ((p_ptr->lev / 10) + 1);
 
 			/* Handle normal weapon */
 			if (o_ptr->k_idx)
@@ -1125,6 +1125,27 @@
 				}
 			}
 
+			/* Stunning attack */
+			if (p_ptr->stunning)
+			{
+				/* Cancel heavy hands */
+				p_ptr->stunning = FALSE;
+
+				/* Message */
+				msg_print(Ind, "Your hands feel less heavy.");
+
+				/* Stun the monster */
+				if (rand_int(100) < q_ptr->lev)
+				{
+					msg_format(Ind, "%^s is unaffected.", p_name);
+				}
+				else
+				{
+					msg_format(Ind, "%^s appears stunned.", p_name);
+					set_stun(0 - c_ptr->m_idx, q_ptr->stun + 20 + rand_int(p_ptr->lev) / 5);
+				}
+			}
+
 			/* Ghosts get fear attacks */
 			if (p_ptr->ghost)
 			{
@@ -1136,6 +1157,18 @@
 					set_afraid(0 - c_ptr->m_idx, q_ptr->afraid + 4 + rand_int(p_ptr->lev) / 5);
 				}
 			}
+
+			/* Fruit bats get life stealing */
+			if (p_ptr->fruit_bat)
+			{
+				int leech;
+				
+				leech = q_ptr->chp;
+				if (k < leech) leech = k;
+				leech /= 10;
+			
+				hp_player(Ind, rand_int(leech));
+			}
 		}
 
 		/* Player misses */
@@ -1254,7 +1287,7 @@
 				k = p_ptr->lev;
 				
 			if (p_ptr->fruit_bat)
-				k = (p_ptr->lev / 5) + 1;
+				k = p_ptr->lev * ((p_ptr->lev / 10) + 1);
 
 			/* Handle normal weapon */
 			if (o_ptr->k_idx)
@@ -1316,6 +1349,35 @@
 				}
 			}
 
+			/* Stunning attack */
+			if (p_ptr->stunning)
+			{
+				/* Cancel heavy hands */
+				p_ptr->stunning = FALSE;
+
+				/* Message */
+				msg_print(Ind, "Your hands feel less heavy.");
+
+				/* Stun the monster */
+				if (r_ptr->flags3 & RF3_NO_STUN)
+				{
+					if (p_ptr->mon_vis[c_ptr->m_idx]) r_ptr->r_flags3 |= RF3_NO_STUN;
+					msg_format(Ind, "%^s is unaffected.", m_name);
+				}
+				else if (rand_int(115) < r_ptr->level)
+				{
+					msg_format(Ind, "%^s is unaffected.", m_name);
+				}
+				else
+				{
+					if (!m_ptr->stunned)
+						msg_format(Ind, "%^s appears stuned.", m_name);
+					else
+						msg_format(Ind, "%^s appears more stunned.", m_name);
+					m_ptr->stunned += 20 + rand_int(p_ptr->lev) / 5;
+				}
+			}
+
 			/* Ghosts get fear attacks */
 			if (p_ptr->ghost)
 			{
@@ -1328,6 +1390,18 @@
 				}
 			}
 
+
+			/* Fruit bats get life stealing */
+			if (p_ptr->fruit_bat)
+			{
+				int leech;
+				
+				leech = m_ptr->hp;
+				if (k < leech) leech = k;
+				leech /= 10;
+			
+				hp_player(Ind, rand_int(leech));
+			}
 		}
 
 		/* Player misses */
diff -Naur --exclude=*.o /pm/src/server/cmd2.c ./server/cmd2.c
--- /pm/src/server/cmd2.c	Fri Sep 15 13:12:39 2000
+++ ./server/cmd2.c	Fri Sep 15 18:52:35 2000
@@ -457,7 +457,7 @@
 
 
 	/* Ghosts cannot open doors */
-	if ((p_ptr->ghost) || (p_ptr->fruit_bat))
+	if ((p_ptr->ghost))
 	{
 		msg_print(Ind, "You cannot open things!");
 		return;
@@ -736,7 +736,7 @@
 
 
 	/* Ghosts cannot close */
-	if ( (p_ptr->ghost) || (p_ptr->fruit_bat) )
+	if ( (p_ptr->ghost))
 	{
 		msg_print(Ind, "You cannot close things!");
 		return;
@@ -906,7 +906,7 @@
 
 
 	/* Ghosts have no need to tunnel */
-	if ( (p_ptr->ghost) || (p_ptr->fruit_bat) )
+	if ( (p_ptr->ghost))
 	{
 		/* Message */
 		msg_print(Ind, "You cannot tunnel.");
@@ -1187,7 +1187,7 @@
 
 
 	/* Ghosts cannot disarm */
-	if ( (p_ptr->ghost) || (p_ptr->fruit_bat) )
+	if ( (p_ptr->ghost))
 	{
 		/* Message */
 		msg_print(Ind, "You cannot disarm things!");
@@ -1603,7 +1603,7 @@
 
 
 	/* Ghosts cannot spike */
-	if ( (p_ptr->ghost) || (p_ptr->fruit_bat) )
+	if ( (p_ptr->ghost))
 	{
 		/* Message */
 		msg_print(Ind, "You cannot spike doors!");
@@ -2875,7 +2875,7 @@
 	object_type key;
 
 	/* Ghosts cannot buy houses */
-	if ( (p_ptr->ghost) || (p_ptr->fruit_bat) )
+	if ( (p_ptr->ghost))
 	{
 		/* Message */
 		msg_print(Ind, "You cannot buy a house.");
diff -Naur --exclude=*.o /pm/src/server/cmd3.c ./server/cmd3.c
--- /pm/src/server/cmd3.c	Fri Sep 15 13:12:39 2000
+++ ./server/cmd3.c	Fri Sep 15 20:57:17 2000
@@ -304,8 +304,27 @@
  */
 static bool item_tester_hook_wear(int Ind, object_type *o_ptr)
 {
-	/* Check for a usable slot */
-	if (wield_slot(Ind, o_ptr) >= INVEN_WIELD) return (TRUE);
+	player_type *p_ptr = Players[Ind];
+	
+	/* Restrict fruit bats */
+	if (p_ptr->fruit_bat)
+	{
+		switch(wield_slot(Ind, o_ptr))
+		{
+			case INVEN_RIGHT:
+			case INVEN_LEFT:
+			case INVEN_NECK:
+			case INVEN_HEAD:
+			case INVEN_OUTER:
+			case INVEN_LITE:
+				return TRUE;
+		}
+	}
+	else
+	{
+		/* Check for a usable slot */
+		if (wield_slot(Ind, o_ptr) >= INVEN_WIELD) return (TRUE);
+	}
 
 	/* Assume not wearable */
 	return (FALSE);
@@ -947,7 +966,7 @@
 	int success, notice;
 
 	/* Ghosts cannot steal */
-	if ((p_ptr->ghost) || (p_ptr->fruit_bat))
+	if ((p_ptr->ghost))
 	{
 	        msg_print(Ind, "You cannot steal things!");
 	        return;
diff -Naur --exclude=*.o /pm/src/server/cmd4.c ./server/cmd4.c
--- /pm/src/server/cmd4.c	Fri Sep 15 13:12:39 2000
+++ ./server/cmd4.c	Fri Sep 15 21:03:09 2000
@@ -518,11 +518,21 @@
 		fprintf(fff, "%c", attr);
 
 		/* Print a message */
-		fprintf(fff, "     %s the %s %s (Level %d, %s)",
-			q_ptr->name, race_info[q_ptr->prace].title,
-			class_info[q_ptr->pclass].title, q_ptr->lev,
-			parties[q_ptr->party].name);
-
+		if(p_ptr->fruit_bat)
+		{
+			fprintf(fff, "     %s the %s %s (Fruit bat, Level %d, %s)",
+				q_ptr->name, race_info[q_ptr->prace].title,
+				class_info[q_ptr->pclass].title, q_ptr->lev,
+				parties[q_ptr->party].name);
+	    	}
+	    	else
+	    	{
+			fprintf(fff, "     %s the %s %s (Level %d, %s)",
+				q_ptr->name, race_info[q_ptr->prace].title,
+				class_info[q_ptr->pclass].title, q_ptr->lev,
+				parties[q_ptr->party].name);
+	    	}
+				
 		/* Print extra info if these people are in the same party */
 		/* Hack -- always show extra info to dungeon master */
 		if ((p_ptr->party == q_ptr->party && p_ptr->party) || (!strcmp(p_ptr->name,cfg_dungeon_master)))
diff -Naur --exclude=*.o /pm/src/server/cmd5.c ./server/cmd5.c
--- /pm/src/server/cmd5.c	Fri Sep 15 13:12:39 2000
+++ ./server/cmd5.c	Fri Sep 15 18:14:05 2000
@@ -3447,6 +3447,49 @@
 				}
 				break;
 			}
+			
+			/* Heroism */
+			case 1:
+			{
+				msg_format_near(Ind, "%s enters in a battle rage.", p_ptr->name);
+				set_hero(Ind, p_ptr->hero + 20 + randint(20));
+				break;
+			}
+			
+			/* Jump */
+			case 2:
+			{
+				get_aim_dir(Ind);
+				p_ptr->current_spell = j;
+				return;
+			}
+			
+			/* Stunning Blow */
+			case 3:
+			{
+				if (p_ptr->stunning == FALSE)
+				{
+					msg_print(Ind, "Your hands get heavy.");
+					p_ptr->stunning = TRUE;
+				}
+				break;
+			}
+			
+			/* Berserk */
+			case 4:
+			{
+				msg_format_near(Ind, "%s enters in a battle RAGE.", p_ptr->name);
+				set_shero(Ind, p_ptr->hero + 20 + randint(20));
+				break;
+			}
+			
+			/* Iron Skin */
+			case 8:
+			{
+				msg_format_near(Ind, "%s skin turns into iron.", p_ptr->name);
+				set_shield(Ind, p_ptr->hero + 20 + randint(20));
+				break;
+			}
 		}
 
 		/* A spell was cast */
@@ -3513,6 +3556,130 @@
 	}
 
 	/* Redraw mana */
+	p_ptr->redraw |= (PR_MANA);
+
+	/* Window stuff */
+	p_ptr->window |= (PW_PLAYER);
+}
+
+/*
+ * Finish using a technic that required a direction --KLJ--
+ */
+void do_cmd_fight_aux(int Ind, int dir)
+{
+	player_type *p_ptr = Players[Ind];
+
+	int plev = p_ptr->lev;
+
+	magic_type *s_ptr = &p_ptr->mp_ptr->info[p_ptr->current_spell];
+
+	/* Only fire in direction 5 if we have a target */
+	if ((dir == 5) && !target_okay(Ind))
+	{
+		/* Reset current spell */
+		p_ptr->current_spell = -1;
+
+		/* Done */
+		return;
+	}
+
+	/* We assume that the technic can be used, and so forth */
+	switch(p_ptr->current_spell)
+	{
+		case 2:
+		{
+			int ty, tx, rad = 2 + (plev / 10);
+		
+			/* Use the given direction */
+			tx = p_ptr->px + rad * ddx[dir];
+			ty = p_ptr->py + rad * ddy[dir];
+
+			/* Hack -- Use an actual "target" */
+			if ((dir == 5) && target_okay(Ind))
+			{
+				tx = p_ptr->target_col;
+				ty = p_ptr->target_row;
+			
+				if (distance(ty, tx, p_ptr->py, p_ptr->px) > rad)
+				{
+					msg_print(Ind, "You can not jump that far.");
+					return;
+				}
+			}
+		
+			msg_format_near(Ind, "%s jumps.", p_ptr->name);
+			teleport_player_to(Ind, ty, tx);
+			break;
+		}
+		default:  /* For some reason we got called for a technic that */
+		{         /* doesn't require a direction */
+			msg_print(Ind, "SERVER ERROR: do_cmd_fight_aux() called for non-directional technic!");
+			p_ptr->current_spell = -1;
+			return;
+		}
+	}	
+
+	if (!((p_ptr->current_spell < 32) ?
+		(p_ptr->spell_worked1 & (1L << p_ptr->current_spell)) :
+		(p_ptr->spell_worked2 & (1L << (p_ptr->current_spell - 32)))))
+	{
+		int e = s_ptr->sexp;
+
+		if (p_ptr->current_spell < 32)
+		{
+			p_ptr->spell_worked1 |= (1L << p_ptr->current_spell);
+		}
+		else
+		{
+			p_ptr->spell_worked2 |= (1L << (p_ptr->current_spell - 32));
+		}
+
+		gain_exp(Ind, e * s_ptr->slevel);
+
+		/* Fix the spell info */
+		p_ptr->window |= PW_SPELL;
+	}
+
+	p_ptr->energy -= level_speed(p_ptr->dun_depth);
+
+	if (s_ptr->smana <= p_ptr->csp)
+	{
+		/* Use some mana */
+		p_ptr->csp -= s_ptr->smana;
+	}
+
+	/* Over-exert the player */
+	else
+	{
+		int oops = s_ptr->smana - p_ptr->csp;
+
+		/* No mana left */
+		p_ptr->csp = 0;
+		p_ptr->csp_frac = 0;
+
+		/* Message */
+		msg_print(Ind, "You faint from the effort!");
+
+		/* Hack -- bypass free action */
+		(void)set_paralyzed(Ind, p_ptr->paralyzed + randint(5 * oops + 1));
+
+		/* Damage CON (possibly permanently) */
+		if (rand_int(100) < 50)
+		{
+			bool perm = (rand_int(100) < 25);
+
+			/* Message */
+			msg_print(Ind, "You have damaged your health!");
+
+			/* Reduce constitution */
+			(void)dec_stat(Ind, A_CON, 15 + randint(10), perm);
+		}
+	}
+
+	/* Reset current spell */
+	p_ptr->current_spell = -1;
+
+	/* Resend mana */
 	p_ptr->redraw |= (PR_MANA);
 
 	/* Window stuff */
diff -Naur --exclude=*.o /pm/src/server/dungeon.c ./server/dungeon.c
--- /pm/src/server/dungeon.c	Fri Sep 15 13:12:39 2000
+++ ./server/dungeon.c	Fri Sep 15 18:53:26 2000
@@ -1828,6 +1828,8 @@
 				}
 			}
 			/* hack -- make fruit bat wear off */
+			/* No more -- DG */
+#if 0			
 			for (x = 1; x < NumPlayers + 1; x++)
 			{
 				if (Players[x]->fruit_bat)
@@ -1837,6 +1839,7 @@
 					msg_print(x, "Your form feels much more familliar.");
 				}
 			}
+#endif
 		}
 	}
 }
diff -Naur --exclude=*.o /pm/src/server/externs.h ./server/externs.h
--- /pm/src/server/externs.h	Fri Sep 15 13:12:39 2000
+++ ./server/externs.h	Fri Sep 15 17:29:16 2000
@@ -513,6 +513,8 @@
 extern void do_cmd_sorc_aux(int Ind, int dir);
 extern void do_cmd_pray(int Ind, int book, int spell);
 extern void do_cmd_pray_aux(int Ind, int dir);
+extern void do_cmd_fight(int Ind, int book, int spell);
+extern void do_cmd_fight_aux(int Ind, int dir);
 extern void show_ghost_spells(int Ind);
 extern void do_cmd_ghost_power(int Ind, int ability);
 extern void do_cmd_ghost_power_aux(int Ind, int dir);
diff -Naur --exclude=*.o /pm/src/server/load2.c ./server/load2.c
--- /pm/src/server/load2.c	Fri Sep 15 13:12:39 2000
+++ ./server/load2.c	Fri Sep 15 16:50:07 2000
@@ -1233,7 +1233,7 @@
 	rd_byte(&p_ptr->searching);
 	rd_byte(&p_ptr->maximize);
 	rd_byte(&p_ptr->preserve);
-	rd_byte(&tmp8u);
+	rd_byte(&p_ptr->stunning);
 
 	/* Future use */
 	rd_s16b(&p_ptr->tim_meditation);
diff -Naur --exclude=*.o /pm/src/server/netserver.c ./server/netserver.c
--- /pm/src/server/netserver.c	Fri Sep 15 13:12:39 2000
+++ ./server/netserver.c	Fri Sep 15 17:31:20 2000
@@ -5210,6 +5210,8 @@
 			do_cmd_sorc_aux(Ind, dir);
 		else if (p_ptr->mp_ptr->spell_book == TV_PRAYER_BOOK)
 			do_cmd_pray_aux(Ind, dir);
+		else if (p_ptr->mp_ptr->spell_book == TV_FIGHT_BOOK)
+			do_cmd_fight_aux(Ind, dir);
 		else p_ptr->current_spell = -1;
 	}
 	else if (p_ptr->current_rod != -1)
diff -Naur --exclude=*.o /pm/src/server/save.c ./server/save.c
--- /pm/src/server/save.c	Fri Sep 15 13:12:39 2000
+++ ./server/save.c	Fri Sep 15 16:50:36 2000
@@ -1142,7 +1142,7 @@
 	wr_byte(p_ptr->searching);
 	wr_byte(p_ptr->maximize);
 	wr_byte(p_ptr->preserve);
-	wr_byte(0);
+	wr_byte(p_ptr->stunning);
 
 	wr_s16b(p_ptr->tim_meditation);
 	
diff -Naur --exclude=*.o /pm/src/server/spells1.c ./server/spells1.c
--- /pm/src/server/spells1.c	Fri Sep 15 13:12:39 2000
+++ ./server/spells1.c	Fri Sep 15 19:52:10 2000
@@ -731,6 +731,8 @@
 		/* Books */
 		case TV_MAGIC_BOOK:
 		case TV_PRAYER_BOOK:
+		case TV_FIGHT_BOOK:
+		case TV_SORCERY_BOOK:
 		{
 			return (TRUE);
 		}
@@ -4037,6 +4039,7 @@
 		break;
 
 		case GF_HEAL_PLAYER:
+		{
 		
 		if (fuzzy) msg_print(Ind, "You are hit by something good!");		
 		else msg_format(Ind, "%^s heals you!", killer);
@@ -4045,15 +4048,17 @@
 		set_cut(Ind, Players[Ind]->cut - 10);
 		
 		break;
-
+                }
 		case GF_WRAITH_PLAYER:		
+		{
 			if (fuzzy) msg_print(Ind, "You feel less consitant!");
 			else msg_format(Ind, "%^s turns you into a wraith!", killer);
 		
 			set_tim_wraith(Ind, p_ptr->tim_wraith + dam);
 			break;
-
+                }
 		case GF_SPEED_PLAYER:		
+		{
 			if (fuzzy) msg_print(Ind, "You feel faster!");
 			else msg_format(Ind, "%^s speeds you up!", killer);
 		
@@ -4066,8 +4071,9 @@
                                 (void)set_fast(Ind, p_ptr->fast + (dam / 5));
 			}
 			break;
-
-		case GF_SHIELD_PLAYER:		
+                }
+		case GF_SHIELD_PLAYER:
+		{
 			if (fuzzy) msg_print(Ind, "You feel protected!");
 			else msg_format(Ind, "%^s shields you!", killer);
 		
@@ -4076,7 +4082,7 @@
                  	else
                         	(void)set_shield(Ind, p_ptr->shield + (dam / 5));
 			break;
-
+                }
 		case GF_OLD_CONF:
 		
 		if (fuzzy) msg_print(Ind, "You hear puzzling noises!");
@@ -4141,6 +4147,7 @@
 		}
 		else
 		{
+			msg_print(Ind, "The magic continuum twists around you!");
 			apply_morph(Ind, dam, killer);
 		}
 		break;
diff -Naur --exclude=*.o /pm/src/server/spells2.c ./server/spells2.c
--- /pm/src/server/spells2.c	Fri Sep 15 13:12:39 2000
+++ ./server/spells2.c	Fri Sep 15 16:51:04 2000
@@ -546,6 +546,10 @@
 	{
 		info[i++] = "Your hands are glowing dull red.";
 	}
+	if (p_ptr->stunning)
+	{
+		info[i++] = "Your hands are very heavy.";
+	}
 	if (p_ptr->searching)
 	{
 		info[i++] = "You are looking around very carefully.";
diff -Naur --exclude=*.o /pm/src/server/store.c ./server/store.c
--- /pm/src/server/store.c	Fri Sep 15 13:12:39 2000
+++ ./server/store.c	Fri Sep 15 17:16:23 2000
@@ -799,6 +799,7 @@
 			switch (o_ptr->tval)
 			{
 				case TV_MAGIC_BOOK:
+				case TV_SORCERY_BOOK:
 				case TV_AMULET:
 				case TV_RING:
 				case TV_STAFF:
diff -Naur --exclude=*.o /pm/src/server/tables.c ./server/tables.c
--- /pm/src/server/tables.c	Fri Sep 15 13:12:39 2000
+++ ./server/tables.c	Fri Sep 15 16:35:13 2000
@@ -1604,13 +1604,14 @@
 			{  5,  1, 18,   4},
 			{ 10,  2, 22,   4},
 			{ 15,  1, 24,   5},
-			{ 20,  3, 25,   5},
-			
-			{ 99,  0,  0,   0},
-			{ 99,  0,  0,   0},
-			{ 99,  0,  0,   0},
+			{ 20,  2, 25,   5},			
+			{ 25,  3, 30,   6},
 			{ 99,  0,  0,   0},
+			{ 99,  0,  0,   0},			
 			{ 99,  0,  0,   0},
+			
+			{ 15,  5, 30,  15},
+			
 			{ 99,  0,  0,   0},
 			{ 99,  0,  0,   0},
 			{ 99,  0,  0,   0},
@@ -2326,8 +2327,8 @@
 	
 	{
 		/*** Warrior fight books(only 2 books) ***/
-                {0x0000000f, 0x00000000},
-                {0x00000ff0, 0x00000000},
+                {0x0000001f, 0x00000000},
+                {0x00000100, 0x00000000},
 	},
 };
 
@@ -2598,11 +2599,16 @@
 	{
                 /* Bashing for beginners */
                 "Confusing Strike",
-                "Berserk",
+                "Heroism",
                 "Jump",
-                "Death Blow",
+                "Stunning Blow",
+                "Berserk",
+                "",
+                "",
+                "",
 
-                /* Furry and Killing */
+                /* Fingolfin's Combat Technics */
+                "Iron Skin",
 	},
 
 	/*** Ghost abilities ***/
diff -Naur --exclude=*.o /pm/src/server/xtra1.c ./server/xtra1.c
--- /pm/src/server/xtra1.c	Fri Sep 15 13:12:40 2000
+++ ./server/xtra1.c	Fri Sep 15 18:58:37 2000
@@ -1149,13 +1149,13 @@
 	/* Meditation increase mana at the cost of hp */
 	if (p_ptr->tim_meditation)
 	{
-		new_mana += new_mana / 5;
+		new_mana += new_mana / 3;
 	}
 	
 	/* Warrior dont get much */
 	if (p_ptr->pclass == CLASS_WARRIOR)
 	{
-		new_mana /= 10;
+		new_mana /= 8;
 		if (!new_mana) new_mana++;
 	}
 
@@ -1293,16 +1293,16 @@
 	bonus = ((int)(adj_con_mhp[p_ptr->stat_ind[A_CON]]) - 128);
 
 	/* Calculate hitpoints */
-	if (p_ptr->fruit_bat) mhp = p_ptr->lev + 2;
+	if (p_ptr->fruit_bat) mhp = (p_ptr->player_hp[p_ptr->lev-1] / 4) + (bonus * p_ptr->lev);
 	
 	else mhp = p_ptr->player_hp[p_ptr->lev-1] + (bonus * p_ptr->lev / 2);
 
 	/* Always have at least one hitpoint per level */
 	if (mhp < p_ptr->lev + 1) mhp = p_ptr->lev + 1;
 
-	/* Option : give (most!) mages a bonus hitpoint / lvl */
+	/* Option : give mages a bonus hitpoint / lvl */
 	if (cfg_mage_hp_bonus)
-		if ((p_ptr->pclass == CLASS_MAGE) && (strcmp(p_ptr->name,"Seth"))) mhp += p_ptr->lev;
+		if (p_ptr->pclass == CLASS_MAGE) mhp += p_ptr->lev;
 
 	/* Factor in the hero / superhero settings */
 	if (p_ptr->hero) mhp += 10;
@@ -1619,6 +1619,7 @@
 
 	/* Bats get +10 speed ... they need it!*/
 	if (p_ptr->fruit_bat) p_ptr->pspeed += 10;
+	if (p_ptr->fruit_bat) p_ptr->feather_fall = TRUE;
 
 	/* Start with a single blow per turn */
 	p_ptr->num_blow = 1;
diff -Naur --exclude=*.o /pm/src/server/xtra2.c ./server/xtra2.c
--- /pm/src/server/xtra2.c	Fri Sep 15 13:12:40 2000
+++ ./server/xtra2.c	Fri Sep 15 19:08:22 2000
@@ -2469,7 +2469,7 @@
 
 	if (p_ptr->fruit_bat == -1) 
 	{
-		p_ptr->mhp = p_ptr->lev + 2;
+		p_ptr->mhp = (p_ptr->player_hp[p_ptr->lev-1] / 4) + (((adj_con_mhp[p_ptr->stat_ind[A_CON]]) - 128) * p_ptr->lev);
 		p_ptr->chp = p_ptr->mhp;
 		p_ptr->chp_frac = 0;
 	}
