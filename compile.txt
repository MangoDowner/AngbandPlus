Compiling Instructions 
 
(note: in all cases below, the NPPAngband* directory indicates the directory to which you 
have chosen to download the source code.)


========================
Windows & Cygwin by Robert Ruehlmann (edited for NPPAngband)
========================

1.	Getting the free Cygwin compiler: 
Download the free Cygwin compiler. It provides a shell interface very similar to a 
normal Unix/Linux shell with many useful tools. Install it and start the shell. (Note: 
for use in windows, the computers autoexec.bat file needs to be edited to include a 
path to the Cygwin Folder)
2.	Install the NPPAngband source code: 
Unzip and extract the zip-file "NPPAngband Source Code v0.1.0.zip" with your 
favorite archive tool (like WinZip, or untgz.exe).
3.	Compile NPPAngband: (Note: In windows open up a DOS window and go to the 
NPPAndband*\src directory) 
Go to the src-directory and run "make -f makefile.cyg install". NPPAngband should 
now be compiled and installed into the NPPAngband* folder. The executable file 
will be called Angband.exe. 
4.	Run NPPAngband: 
Go back to the NPPAngband* folder and run the Angband.exe. 

========================
Windows & lcc-win32 by Robert Ruehlmann (edited for NPPAngband): 
========================

1.	Getting the free lcc-win32 compiler: 
Download the compiler and install it. 
2.	Install the NPPAngband source: 
Unzip and extract the zip-file "NPPAngband Source Code v0.1.0.zip" with your 
favorite archive tool (like WinZip, or untgz.exe).
3.	Create the LCC project: 
Start lcc-win32. Select 'File/New/Project...' from the menu and enter "NPPAngband" 
as the project name. On the "Definition of a new project" set the working directory 
to "C:\NPPAngband*\src" (wherever you extracted the source code to) and then 
select the "Windows executable" option. Press the 'Create' button and answer the 
question about using the wizard to generate the application skeleton with "no". We 
want to use the existing NPPAngband source code, so we don't need the skeleton 
code. 
4.	Adding the NPPAngband source files to the project: 
Add all files from birth.c to l-ui.c to the project, then add the "main-win.c" file with 
the "Add new file..." option and finally the files from melee1.c to z-virt.c. Select "Add 
new file..." again, and this time select the "Resources" filetype and select the 
"angband.rc" file. "Add new file..." yet again, set the filetype back to "C sources" 
and select all files in the lua directory except for tolua.c and tolualua.c. Now we are 
done on that page and can press the 'ok' button. 
5.	Setting various project options: 
On the 'Compiler settings' page append ";c:\NPPangband*\src\lua" (modify the path 
to match your own NPPAngband source installation of course) to the include path. 
On the 'Linker settings' page change the output filename to "C:\NPPangband*" 
(again - use you own NPPAngband path). Then type "winmm.lib" in the 'Additional 
files to be included in the link' field. In the 'Debugger settings' you should change 
the start directory to "C:\NPPAngband*" (or again use your own path to the 
NPPAngband directory). The 'Executable to start' should be 
"C:\NPPAngband*\NPPangband.exe" (did I already mention change it to your path 
if necessary?). The settings part is now finished. When asked if you want to "Open 
... files?" simply say no. 
6.	Compiling: 
Select 'Compiler/Generate Makefile' from the menu and wait for it to finish. Now 
select 'Compiler/Make' and NPPAngband should be compiled. 
7.	Run NPPAngband: 
Go back to the NPPAngband* folder and run the NPPAngband.exe. 

All other Compilers and Operating Systems
===============================================

The Angband source code contains many other makefiles and has been ported to many 
other different platforms besides Windows. These files have been included with the 
NPPAngband Source code, but have not been updated, with the exception of cygwin's 
makefile.cyg file. All other makefiles will need one or two changes before they can work 
properly: 1) Add the file "squelch.o" for compiling. This is the only new file added for 
NPPAngband. 2) Change the name of the executable file to NPPAngband (optional).
As for porting to other operating systems, I didn't make any changes to any of the main.* 
files (the main files used for the different operating systems), and I used only ANSI-C for 
all code changes, so at least in theory the NPPAngband source code should compile and 
work on any system where Angband -3.0.3 works. 


======================

======================
There is an extensive list of instructions on compiling Angband for other operating 
systems and using other compilers below. 

With the exception of adding instructions to compile the "squelch.o" file 
along with all other files, the instructions should work as well as they work for Angband.

=================
Compiling Angband
=================

Last updated on 25th January 2003 by Robert Ruehlmann


----------------------------------------------------------------------
Quick and dirty compilation instructions
----------------------------------------------------------------------

For many platforms (including Windows and DOS), a "pre-compiled" archive
is available, which contains everything you need to install and play
Angband.  For other platforms, including most UNIX systems, you must
compile the source code yourself.  Try the following non-trivial steps:

Step 1: Acquire.   Ftp to "clockwork.dementia.org/angband/Source"
                   Try "bin" and "mget angband*.tar.gz" and "y"
Step 2: Extract.   Try "gunzip *.gz" then "tar -xvf *.tar"
Step 3: Prepare.   Try "cd angband*/".
Step 4: Configure. Try "./configure". Edit "src/config.h" if you wish.
Step 5: Compile.   Try "make".
Step 6: Install.   Try "make install".
Step 7: Play...    Try "./angband".
                   Read the "online help" via the "?" command.

Of course, if you have a compiler, you can compile a (possibly customized)
executable on almost any system.  You will need the "source archive" (as
above), which contains the standard "src" and "lib" directories, and for
some platforms (including Macintosh and Windows), you will also need an
appropriate "extra archive", which contains some extra platform specific
files, and instructions about how to use them.  Some "extra archives" may
be found at the ftp site (including "/angband/Macintosh/ext-mac.sit.bin"
and "/angband/Windows/ext-win-303.zip"), but be sure that you get a version
of the "extra archive" designed for your Angband version.

About configure:
    ./configure --help
shows which options to use.  Other settings can be tuned like this:
    env CC='cc' CPPFLAGS='-DUSE_HARDCODE' ./configure
You can set CC (compiler), CPPFLAGS (preprocessor flags),
CFLAGS (compiler flags), LDFLAGS (linker flags), and LIBS (libraries).
Configure may modify all but CC.

An alternative to configure is to edit src/h-config.h and a makefile,
probably src/Makefile.std, and run "cd src; make -f Makefile.std".


----------------------------------------------------------------------
DOS + DJGPP
----------------------------------------------------------------------
(written by Robert Ruehlmann < rr9@thangorodrim.net >)

- Install DJGPP:
	You can get the freely available DJGPP C Compiler from
	< http://www.delorie.com/djgpp/ >.  On the DJGPP-page go to the
	Zip-Picker < http://www.delorie.com/djgpp/zip-picker.html >.
	This page helps you decide which ZIP files you need to download
	and will even try to find a ftp-site near you.
	If you want to have graphics and sound then you also need the
	Allegro-library < http://www.talula.demon.co.uk/allegro/ >.
	Get all files and follow the installation instructions.
- Install the Angband source:
	Get the source code archive and the untgz tool from:
	< ftp://clockwork.dementia.org/angband/Tool/untgz.exe >.
	Then extract the source with untgz.
- Install other required files:
	Get the "extra archive" from
	< ftp://clockwork.dementia.org/angband/DOS-386/ext-dos-303.zip >.
	Go to the angband directory and unzip the ext-dos archive into it.
	Then get the graphics archive from
	< ftp://clockwork.dementia.org/angband/Extra/angband-graf.zip >
	and unzip it into the lib/xtra/graf/ folder.
- Select the makefile:
	Go to the src-directory and rename 'Makefile.dos' (or 'Makefile.ibm'
	if you don't want graphics and sound and didn't download the Allegro
	library) to 'Makefile'.
- Compile Angband:
	Run "make install".  Angband should now be compiled and installed
	into the Angband folder.
- Run Angband:
	Go back to the Angband folder and run Angband.exe.

- Possible problems:
	- Make exits with a 'Fatal: Command arguments too long' error message:
	Such problems are usually caused by using the make.exe of another
	compiler (like Borland C++ or cygwin).  DJGPP uses some clever tricks
	to get around the limitations of the MS-DOS "126 characters are enough
	for anybody" commandline that require a specific make tool.  So make
	sure that DJGPP's make.exe is the first (or only) make.exe in your
	path.  See also the DJGPP FAQ entries 16.4, 16.5, and 16.6 for further
	details.


----------------------------------------------------------------------
Windows 95/98/NT/2000 + MS Visual C++ 5.0/6.0
----------------------------------------------------------------------
(written by Robert Ruehlmann < rr9@thangorodrim.net >)

- Install the Angband source:
	Get the source code and the untgz tool from:
	< ftp://clockwork.dementia.org/angband/Tool/untgz32.exe >.
	Then extract the source with "untgz32 angband-3.0.3.tar.gz".
- Install other required files:
	Get the "extra archive" from
	< ftp://clockwork.dementia.org/angband/Windows/ext-win-303.zip >.
	Go to the angband directory and unzip the ext-win archive into it.
	Again make sure the directory structure is preserved (use the -d
	option in pkunzip).
	Then get the graphics archive from
	< ftp://clockwork.dementia.org/angband/Extra/angband-graf.zip >
	and unzip it into the lib/xtra/graf/ folder.
- Open the project-file:
	Go to the src-folder and open the file "Angband.dsw".  That opens
	Visual C++ already properly configured for compiling Angband.
- Compile Angband:
	Select "Build Angband.exe" in the Build menu.  Angband should now
	be compiled and the Angband.exe will be placed into the Angband
	folder.
- Run Angband:
	Go back to the Angband-folder and run the Angband.exe.


----------------------------------------------------------------------
Windows 95/98/NT/2000 + Borland C++ 5.5 commandline tools
----------------------------------------------------------------------
(written by Robert Ruehlmann < rr9@thangorodrim.net >)

- Getting the free commandline tools:
	Download the Borland commandline tools from
	http://www.borland.com/bcppbuilder/freecompiler/
	and follow the installation instructions.
- Install the Angband source:
	Get the source code and  the untgz tool from:
	< ftp://clockwork.dementia.org/angband/Tool/untgz32.exe >.
	Then extract the source with "untgz32 angband-3.0.3.tar.gz".
- Install other required files:
	Get the "extra archive" from
	< ftp://clockwork.dementia.org/angband/Windows/ext-win-303.zip >.
	Go to the angband directory and unzip the ext-win archive into it.
	Again make sure the directory structure is preserved (use the -d
	option in pkunzip).
	Then get the graphics archive from
	< ftp://clockwork.dementia.org/angband/Extra/angband-graf.zip >
	and unzip it into the lib/xtra/graf/ folder.
- Compile Angband:
	Open a commandline window and go to the src-directory.  Run
	"make -f makefile.bcc install".  Angband should now be compiled
	and installed into the Angband folder.
- Run Angband:
	Go back to the Angband-folder and run the Angband.exe.

- Possible problems:
	- Make exits with a "Command line too long" error message:
	Try to add the -l option to the make command.  The make util
	should have the "use long command lines" option enabled by
	default, but some people reported that this is not always
	the case.


----------------------------------------------------------------------
Windows 95/98/NT/2000 + Cygwin
----------------------------------------------------------------------
(written by Robert Ruehlmann < rr9@thangorodrim.net >)

- Getting the free Cygwin compiler:
	You can find the free Cygwin compiler at:
	< http://sources.redhat.com/cygwin/ >.  It provides a shell
	interface very similiar to a normal Unix/Linux shell with many
	useful tools. Install it and start the shell.
- Install the Angband source code
	Extract the source code with "tar -xvzf angband-3.0.3.tar.gz".
- Install other required files:
	Get the "extra archive" from
	< ftp://clockwork.dementia.org/angband/Windows/ext-win-303.zip >.
	Go to the angband directory and unzip the ext-win archive into
	it.  Then get the graphics archive from
	< ftp://clockwork.dementia.org/angband/Extra/angband-graf.zip >
	and unzip it into the lib/xtra/graf/ folder.
- Compile Angband:
	Go to the src-directory.  Run "make -f makefile.cyg install".
	Angband should now be compiled and installed into the Angband folder.
- Run Angband:
	Go back to the Angband-folder and run the Angband.exe.


----------------------------------------------------------------------
Windows 95/98/NT/2000 + LCC-win32
----------------------------------------------------------------------
(written by Robert Ruehlmann < rr9@thangorodrim.net >)

- Getting the free lcc-win32 compiler:
	Download the compiler from < http://www.cs.virginia.edu/~lcc-win32/ >
	and install it.
- Install the Angband source code
	Extract the source code with "tar -xvzf angband-3.0.3.tar.gz".
- Install other required files:
	Get the "extra archive" from
	< ftp://clockwork.dementia.org/angband/Windows/ext-win-303.zip >.
	Go to the angband directory and unzip the ext-win archive into
	it.  Then get the graphics archive from
	< ftp://clockwork.dementia.org/angband/Extra/angband-graf.zip >
	and unzip it into the lib/xtra/graf/ folder.
- Adjust the LCC-win32 makefile:
	Go to the Angband src-directory and open "Makefile.lcc" with a
	text editor.  Change the values of 'ANGBAND_PATH' and 'LCC_PATH'
	to the path of your Angband and LCC directories and save the
	Makefile.
- Compile Angband:
	Run "make -f makefile.lcc" in the Angband src-folder.  The game
	should now be compiled and installed into the Angband folder.
- Run Angband:
	Go back to the Angband-folder and run the Angband.exe.


----------------------------------------------------------------------
GNU/Linux or Unix + GCC
----------------------------------------------------------------------
(written by Robert Ruehlmann < rr9@thangorodrim.net >)

- Install the Angband source:
	Extract the source code with "tar -xvzf angband-3.0.3.tar.gz".
- Install the graphics files:
	If you want to use graphics under X11 then get the archive from
	< ftp://clockwork.dementia.org/angband/Extra/angband-graf.zip >
	and unzip it into the lib/xtra/graf/ folder.
- Compile Angband:
	Run "./configure", "make", and "make install" in the Angband
	directory.
- Run Angband:
	Start Angband with "angband".

